Watching for file changes with StatReloader
Method Not Allowed: /api/register/
C:\Users\Evert\Desktop\Django\monreal\monreal\settings.py changed, reloading.
Watching for file changes with StatReloader
Not Found: /api/api/register/
Method Not Allowed: /api/register/
C:\Users\Evert\Desktop\Django\monreal\accounts\views.py changed, reloading.
Watching for file changes with StatReloader
C:\Users\Evert\Desktop\Django\monreal\accounts\views.py changed, reloading.
Watching for file changes with StatReloader
C:\Users\Evert\Desktop\Django\monreal\accounts\views.py changed, reloading.
Watching for file changes with StatReloader
C:\Users\Evert\Desktop\Django\monreal\accounts\views.py changed, reloading.
Watching for file changes with StatReloader
C:\Users\Evert\Desktop\Django\monreal\monreal\settings.py changed, reloading.
2023-06-21 13:01:48,812 INFO autoreload 16844 17580 Watching for file changes with StatReloader
2023-06-21 13:02:07,329 DEBUG functional 18620 9052 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-21 13:02:07,330 DEBUG functional 18620 9052 
def backend_cleanup():
    return 1

2023-06-21 13:02:07,330 DEBUG functional 18620 9052 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-21 13:02:07,330 DEBUG functional 18620 9052 
def debug_task(self):
    return 1

2023-06-21 13:02:07,331 DEBUG functional 18620 9052 
def xmap(task, it):
    return 1

2023-06-21 13:02:07,331 DEBUG functional 18620 9052 
def chain(*args, **kwargs):
    return 1

2023-06-21 13:02:07,331 DEBUG functional 18620 9052 
def db_update_task():
    return 1

2023-06-21 13:02:07,332 DEBUG functional 18620 9052 
def xstarmap(task, it):
    return 1

2023-06-21 13:02:07,333 DEBUG functional 18620 9052 
def start_ws_client():
    return 1

2023-06-21 13:02:07,333 DEBUG functional 18620 9052 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-21 13:02:07,334 DEBUG functional 18620 9052 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-21 13:02:07,334 DEBUG functional 18620 9052 
def chunks(task, it, n):
    return 1

2023-06-21 13:03:34,217 INFO autoreload 16844 17580 C:\Users\Evert\Desktop\Django\monreal\trading\data_feed.py changed, reloading.
2023-06-21 13:03:35,723 INFO autoreload 16436 14548 Watching for file changes with StatReloader
2023-06-21 13:03:44,702 INFO autoreload 14380 9868 Watching for file changes with StatReloader
2023-06-21 13:04:00,367 DEBUG functional 16732 14416 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-21 13:04:00,368 DEBUG functional 16732 14416 
def backend_cleanup():
    return 1

2023-06-21 13:04:00,368 DEBUG functional 16732 14416 
def db_update_task():
    return 1

2023-06-21 13:04:00,369 DEBUG functional 16732 14416 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-21 13:04:00,369 DEBUG functional 16732 14416 
def debug_task(self):
    return 1

2023-06-21 13:04:00,369 DEBUG functional 16732 14416 
def xmap(task, it):
    return 1

2023-06-21 13:04:00,370 DEBUG functional 16732 14416 
def chain(*args, **kwargs):
    return 1

2023-06-21 13:04:00,371 DEBUG functional 16732 14416 
def xstarmap(task, it):
    return 1

2023-06-21 13:04:00,371 DEBUG functional 16732 14416 
def start_ws_client():
    return 1

2023-06-21 13:04:00,371 DEBUG functional 16732 14416 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-21 13:04:00,372 DEBUG functional 16732 14416 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-21 13:04:00,372 DEBUG functional 16732 14416 
def chunks(task, it, n):
    return 1

2023-06-21 13:04:54,592 INFO autoreload 14380 9868 C:\Users\Evert\Desktop\Django\monreal\monreal\settings.py changed, reloading.
2023-06-21 13:05:18,805 INFO autoreload 20332 9384 Watching for file changes with StatReloader
2023-06-21 13:05:36,734 DEBUG functional 12976 19988 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-21 13:05:36,734 DEBUG functional 12976 19988 
def backend_cleanup():
    return 1

2023-06-21 13:05:36,735 DEBUG functional 12976 19988 
def db_update_task():
    return 1

2023-06-21 13:05:36,735 DEBUG functional 12976 19988 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-21 13:05:36,735 DEBUG functional 12976 19988 
def debug_task(self):
    return 1

2023-06-21 13:05:36,736 DEBUG functional 12976 19988 
def xmap(task, it):
    return 1

2023-06-21 13:05:36,736 DEBUG functional 12976 19988 
def chain(*args, **kwargs):
    return 1

2023-06-21 13:05:36,737 DEBUG functional 12976 19988 
def xstarmap(task, it):
    return 1

2023-06-21 13:05:36,737 DEBUG functional 12976 19988 
def start_ws_client():
    return 1

2023-06-21 13:05:36,738 DEBUG functional 12976 19988 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-21 13:05:36,738 DEBUG functional 12976 19988 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-21 13:05:36,738 DEBUG functional 12976 19988 
def chunks(task, it, n):
    return 1

2023-06-21 13:07:07,566 INFO autoreload 15048 15444 Watching for file changes with StatReloader
2023-06-21 13:07:21,725 DEBUG functional 15132 16072 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-21 13:07:21,726 DEBUG functional 15132 16072 
def backend_cleanup():
    return 1

2023-06-21 13:07:21,726 DEBUG functional 15132 16072 
def db_update_task():
    return 1

2023-06-21 13:07:21,727 DEBUG functional 15132 16072 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-21 13:07:21,727 DEBUG functional 15132 16072 
def debug_task(self):
    return 1

2023-06-21 13:07:21,727 DEBUG functional 15132 16072 
def xmap(task, it):
    return 1

2023-06-21 13:07:21,728 DEBUG functional 15132 16072 
def chain(*args, **kwargs):
    return 1

2023-06-21 13:07:21,729 DEBUG functional 15132 16072 
def xstarmap(task, it):
    return 1

2023-06-21 13:07:21,729 DEBUG functional 15132 16072 
def start_ws_client():
    return 1

2023-06-21 13:07:21,729 DEBUG functional 15132 16072 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-21 13:07:21,730 DEBUG functional 15132 16072 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-21 13:07:21,730 DEBUG functional 15132 16072 
def chunks(task, it, n):
    return 1

2023-06-21 13:10:33,136 INFO autoreload 12172 3588 Watching for file changes with StatReloader
2023-06-21 13:10:46,521 DEBUG functional 20996 18260 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-21 13:10:46,521 DEBUG functional 20996 18260 
def backend_cleanup():
    return 1

2023-06-21 13:10:46,521 DEBUG functional 20996 18260 
def db_update_task():
    return 1

2023-06-21 13:10:46,522 DEBUG functional 20996 18260 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-21 13:10:46,522 DEBUG functional 20996 18260 
def debug_task(self):
    return 1

2023-06-21 13:10:46,522 DEBUG functional 20996 18260 
def xmap(task, it):
    return 1

2023-06-21 13:10:46,523 DEBUG functional 20996 18260 
def chain(*args, **kwargs):
    return 1

2023-06-21 13:10:46,524 DEBUG functional 20996 18260 
def xstarmap(task, it):
    return 1

2023-06-21 13:10:46,524 DEBUG functional 20996 18260 
def start_ws_client():
    return 1

2023-06-21 13:10:46,524 DEBUG functional 20996 18260 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-21 13:10:46,525 DEBUG functional 20996 18260 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-21 13:10:46,525 DEBUG functional 20996 18260 
def chunks(task, it, n):
    return 1

2023-06-21 13:14:07,254 INFO autoreload 5556 20404 Watching for file changes with StatReloader
2023-06-21 13:14:21,712 DEBUG functional 14720 20080 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-21 13:14:21,712 DEBUG functional 14720 20080 
def backend_cleanup():
    return 1

2023-06-21 13:14:21,713 DEBUG functional 14720 20080 
def db_update_task():
    return 1

2023-06-21 13:14:21,713 DEBUG functional 14720 20080 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-21 13:14:21,713 DEBUG functional 14720 20080 
def debug_task(self):
    return 1

2023-06-21 13:14:21,714 DEBUG functional 14720 20080 
def xmap(task, it):
    return 1

2023-06-21 13:14:21,714 DEBUG functional 14720 20080 
def chain(*args, **kwargs):
    return 1

2023-06-21 13:14:21,715 DEBUG functional 14720 20080 
def xstarmap(task, it):
    return 1

2023-06-21 13:14:21,715 DEBUG functional 14720 20080 
def start_ws_client():
    return 1

2023-06-21 13:14:21,716 DEBUG functional 14720 20080 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-21 13:14:21,716 DEBUG functional 14720 20080 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-21 13:14:21,717 DEBUG functional 14720 20080 
def chunks(task, it, n):
    return 1

2023-06-21 13:16:23,771 INFO autoreload 5556 20404 C:\Users\Evert\Desktop\Django\monreal\monreal\settings.py changed, reloading.
2023-06-21 13:16:25,317 INFO autoreload 18664 18800 Watching for file changes with StatReloader
2023-06-21 13:16:38,556 INFO autoreload 6828 11576 Watching for file changes with StatReloader
2023-06-21 13:16:52,875 DEBUG functional 9656 11100 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-21 13:16:52,876 DEBUG functional 9656 11100 
def backend_cleanup():
    return 1

2023-06-21 13:16:52,876 DEBUG functional 9656 11100 
def db_update_task():
    return 1

2023-06-21 13:16:52,877 DEBUG functional 9656 11100 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-21 13:16:52,877 DEBUG functional 9656 11100 
def debug_task(self):
    return 1

2023-06-21 13:16:52,877 DEBUG functional 9656 11100 
def xmap(task, it):
    return 1

2023-06-21 13:16:52,878 DEBUG functional 9656 11100 
def chain(*args, **kwargs):
    return 1

2023-06-21 13:16:52,879 DEBUG functional 9656 11100 
def xstarmap(task, it):
    return 1

2023-06-21 13:16:52,879 DEBUG functional 9656 11100 
def start_ws_client():
    return 1

2023-06-21 13:16:52,879 DEBUG functional 9656 11100 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-21 13:16:52,880 DEBUG functional 9656 11100 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-21 13:16:52,880 DEBUG functional 9656 11100 
def chunks(task, it, n):
    return 1

2023-06-21 13:19:23,894 INFO autoreload 12972 12420 Watching for file changes with StatReloader
2023-06-21 13:19:36,896 DEBUG functional 10908 18848 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-21 13:19:36,897 DEBUG functional 10908 18848 
def backend_cleanup():
    return 1

2023-06-21 13:19:36,897 DEBUG functional 10908 18848 
def db_update_task():
    return 1

2023-06-21 13:19:36,897 DEBUG functional 10908 18848 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-21 13:19:36,898 DEBUG functional 10908 18848 
def debug_task(self):
    return 1

2023-06-21 13:19:36,898 DEBUG functional 10908 18848 
def xmap(task, it):
    return 1

2023-06-21 13:19:36,898 DEBUG functional 10908 18848 
def chain(*args, **kwargs):
    return 1

2023-06-21 13:19:36,899 DEBUG functional 10908 18848 
def xstarmap(task, it):
    return 1

2023-06-21 13:19:36,900 DEBUG functional 10908 18848 
def start_ws_client():
    return 1

2023-06-21 13:19:36,900 DEBUG functional 10908 18848 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-21 13:19:36,900 DEBUG functional 10908 18848 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-21 13:19:36,901 DEBUG functional 10908 18848 
def chunks(task, it, n):
    return 1

2023-06-25 17:47:15,980 DEBUG proactor_events 16624 20436 Using proactor: IocpProactor
2023-06-25 17:47:16,005 DEBUG __init__ 16624 20436 connect: wss://socket.polygon.io/crypto
2023-06-25 17:47:16,196 DEBUG protocol 16624 20436 = connection is CONNECTING
2023-06-25 17:47:16,309 DEBUG client 16624 20436 > GET /crypto HTTP/1.1
2023-06-25 17:47:16,309 DEBUG client 16624 20436 > Host: socket.polygon.io
2023-06-25 17:47:16,309 DEBUG client 16624 20436 > Upgrade: websocket
2023-06-25 17:47:16,309 DEBUG client 16624 20436 > Connection: Upgrade
2023-06-25 17:47:16,309 DEBUG client 16624 20436 > Sec-WebSocket-Key: XB5Q7DsfsE9YTgjs+PfhXA==
2023-06-25 17:47:16,309 DEBUG client 16624 20436 > Sec-WebSocket-Version: 13
2023-06-25 17:47:16,309 DEBUG client 16624 20436 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 17:47:16,309 DEBUG client 16624 20436 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 17:47:16,511 DEBUG client 16624 20436 < HTTP/1.1 101 Switching Protocols
2023-06-25 17:47:16,511 DEBUG client 16624 20436 < Server: nginx/1.19.2
2023-06-25 17:47:16,511 DEBUG client 16624 20436 < Date: Sun, 25 Jun 2023 14:47:16 GMT
2023-06-25 17:47:16,511 DEBUG client 16624 20436 < Connection: upgrade
2023-06-25 17:47:16,511 DEBUG client 16624 20436 < Upgrade: websocket
2023-06-25 17:47:16,512 DEBUG client 16624 20436 < Sec-WebSocket-Accept: YtOO+VfZHlMVcqTCOV8opnLYtvg=
2023-06-25 17:47:16,512 DEBUG client 16624 20436 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 17:47:16,512 DEBUG protocol 16624 20436 = connection is OPEN
2023-06-25 17:47:16,512 DEBUG protocol 16624 20436 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 17:47:16,513 DEBUG __init__ 16624 20436 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 17:47:16,513 DEBUG __init__ 16624 20436 authing...
2023-06-25 17:47:16,513 DEBUG protocol 16624 20436 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 17:47:16,620 DEBUG protocol 16624 20436 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 17:47:16,620 DEBUG __init__ 16624 20436 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 17:47:16,621 DEBUG __init__ 16624 20436 reconciling: set() {'XA.BTC-USD'}
2023-06-25 17:47:16,621 DEBUG __init__ 16624 20436 subbing: XA.BTC-USD
2023-06-25 17:47:16,621 DEBUG protocol 16624 20436 > TEXT '{"action": "subscribe", "params": "XA.BTC-USD"}' [47 bytes]
2023-06-25 17:47:16,722 DEBUG protocol 16624 20436 < TEXT '[{"ev":"status","status":"success","message":"s...ribed to: XA.BTC-USD"}]' [74 bytes]
2023-06-25 17:47:16,722 DEBUG __init__ 16624 20436 status: subscribed to: XA.BTC-USD
2023-06-25 17:47:21,511 DEBUG protocol 16624 20436 < PING '' [0 bytes]
2023-06-25 17:47:21,511 DEBUG protocol 16624 20436 > PONG '' [0 bytes]
2023-06-25 17:47:26,512 DEBUG protocol 16624 20436 < PING '' [0 bytes]
2023-06-25 17:47:26,512 DEBUG protocol 16624 20436 > PONG '' [0 bytes]
2023-06-25 17:47:37,773 INFO autoreload 10420 11652 Watching for file changes with StatReloader
2023-06-25 17:47:38,029 DEBUG proactor_events 10420 20256 Using proactor: IocpProactor
2023-06-25 17:47:38,032 DEBUG __init__ 10420 20256 connect: wss://socket.polygon.io/crypto
2023-06-25 17:47:38,176 DEBUG protocol 10420 20256 = connection is CONNECTING
2023-06-25 17:47:38,278 DEBUG client 10420 20256 > GET /crypto HTTP/1.1
2023-06-25 17:47:38,278 DEBUG client 10420 20256 > Host: socket.polygon.io
2023-06-25 17:47:38,278 DEBUG client 10420 20256 > Upgrade: websocket
2023-06-25 17:47:38,278 DEBUG client 10420 20256 > Connection: Upgrade
2023-06-25 17:47:38,278 DEBUG client 10420 20256 > Sec-WebSocket-Key: R0pr46UieEUTaZzEakTznw==
2023-06-25 17:47:38,278 DEBUG client 10420 20256 > Sec-WebSocket-Version: 13
2023-06-25 17:47:38,278 DEBUG client 10420 20256 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 17:47:38,278 DEBUG client 10420 20256 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 17:47:38,488 DEBUG client 10420 20256 < HTTP/1.1 101 Switching Protocols
2023-06-25 17:47:38,488 DEBUG client 10420 20256 < Server: nginx/1.19.2
2023-06-25 17:47:38,488 DEBUG client 10420 20256 < Date: Sun, 25 Jun 2023 14:47:38 GMT
2023-06-25 17:47:38,488 DEBUG client 10420 20256 < Connection: upgrade
2023-06-25 17:47:38,488 DEBUG client 10420 20256 < Upgrade: websocket
2023-06-25 17:47:38,488 DEBUG client 10420 20256 < Sec-WebSocket-Accept: yxBbXfRSY7t8uXKkX3Wj5BYaOwo=
2023-06-25 17:47:38,489 DEBUG client 10420 20256 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 17:47:38,489 DEBUG protocol 10420 20256 = connection is OPEN
2023-06-25 17:47:38,489 DEBUG protocol 10420 20256 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 17:47:38,489 DEBUG __init__ 10420 20256 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 17:47:38,490 DEBUG __init__ 10420 20256 authing...
2023-06-25 17:47:38,490 DEBUG protocol 10420 20256 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 17:47:38,589 DEBUG protocol 10420 20256 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 17:47:38,589 DEBUG __init__ 10420 20256 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 17:47:38,589 DEBUG __init__ 10420 20256 reconciling: set() {'XA.BTC-USD'}
2023-06-25 17:47:38,590 DEBUG __init__ 10420 20256 subbing: XA.BTC-USD
2023-06-25 17:47:38,590 DEBUG protocol 10420 20256 > TEXT '{"action": "subscribe", "params": "XA.BTC-USD"}' [47 bytes]
2023-06-25 17:47:38,689 DEBUG protocol 10420 20256 < TEXT '[{"ev":"status","status":"success","message":"s...ribed to: XA.BTC-USD"}]' [74 bytes]
2023-06-25 17:47:38,689 DEBUG __init__ 10420 20256 status: subscribed to: XA.BTC-USD
2023-06-25 17:47:43,473 DEBUG protocol 10420 20256 < PING '' [0 bytes]
2023-06-25 17:47:43,473 DEBUG protocol 10420 20256 > PONG '' [0 bytes]
2023-06-25 17:47:48,472 DEBUG protocol 10420 20256 < PING '' [0 bytes]
2023-06-25 17:47:48,473 DEBUG protocol 10420 20256 > PONG '' [0 bytes]
2023-06-25 17:47:48,780 WARNING log 10420 18908 Not Found: /
2023-06-25 17:47:53,472 DEBUG protocol 10420 20256 < PING '' [0 bytes]
2023-06-25 17:47:53,472 DEBUG protocol 10420 20256 > PONG '' [0 bytes]
2023-06-25 17:47:53,602 DEBUG core 10420 18908 Successfully imported extension module "markdown.extensions.toc".
2023-06-25 17:47:53,602 DEBUG core 10420 18908 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-25 17:47:53,812 WARNING log 10420 18908 Not Found: /favicon.ico
2023-06-25 17:47:58,472 DEBUG protocol 10420 20256 < PING '' [0 bytes]
2023-06-25 17:47:58,472 DEBUG protocol 10420 20256 > PONG '' [0 bytes]
2023-06-25 17:47:58,499 DEBUG protocol 10420 20256 % sending keepalive ping
2023-06-25 17:47:58,499 DEBUG protocol 10420 20256 > PING 88 07 48 ad [binary, 4 bytes]
2023-06-25 17:47:58,669 DEBUG protocol 10420 20256 < PONG 88 07 48 ad [binary, 4 bytes]
2023-06-25 17:47:58,670 DEBUG protocol 10420 20256 % received keepalive pong
2023-06-25 17:48:01,987 DEBUG protocol 10420 20256 < TEXT '[{"ev":"XA","pair":"BTC-USD","v":4.03005206,"vw...000,"e":1687704480000}]' [148 bytes]
2023-06-25 17:48:06,046 DEBUG protocol 10420 20256 = connection is CLOSING
2023-06-25 17:48:06,046 DEBUG protocol 10420 20256 > CLOSE 1000 (OK) [2 bytes]
2023-06-25 17:48:06,145 DEBUG protocol 10420 20256 = connection is CLOSED
2023-06-25 17:48:06,146 DEBUG protocol 10420 20256 x closing TCP connection
2023-06-25 20:14:19,392 INFO autoreload 13648 8968 Watching for file changes with StatReloader
2023-06-25 20:14:19,661 DEBUG proactor_events 13648 3568 Using proactor: IocpProactor
2023-06-25 20:14:19,664 DEBUG __init__ 13648 3568 connect: wss://socket.polygon.io/crypto
2023-06-25 20:14:19,834 DEBUG protocol 13648 3568 = connection is CONNECTING
2023-06-25 20:14:19,940 DEBUG client 13648 3568 > GET /crypto HTTP/1.1
2023-06-25 20:14:19,940 DEBUG client 13648 3568 > Host: socket.polygon.io
2023-06-25 20:14:19,940 DEBUG client 13648 3568 > Upgrade: websocket
2023-06-25 20:14:19,940 DEBUG client 13648 3568 > Connection: Upgrade
2023-06-25 20:14:19,940 DEBUG client 13648 3568 > Sec-WebSocket-Key: njG33FdDmqsV3AO1WGJHPg==
2023-06-25 20:14:19,941 DEBUG client 13648 3568 > Sec-WebSocket-Version: 13
2023-06-25 20:14:19,941 DEBUG client 13648 3568 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 20:14:19,941 DEBUG client 13648 3568 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 20:14:20,150 DEBUG client 13648 3568 < HTTP/1.1 101 Switching Protocols
2023-06-25 20:14:20,151 DEBUG client 13648 3568 < Server: nginx/1.19.2
2023-06-25 20:14:20,151 DEBUG client 13648 3568 < Date: Sun, 25 Jun 2023 17:14:20 GMT
2023-06-25 20:14:20,151 DEBUG client 13648 3568 < Connection: upgrade
2023-06-25 20:14:20,151 DEBUG client 13648 3568 < Upgrade: websocket
2023-06-25 20:14:20,151 DEBUG client 13648 3568 < Sec-WebSocket-Accept: c2Fdaa1ts5tgq6mkxK619p1q+rw=
2023-06-25 20:14:20,151 DEBUG client 13648 3568 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 20:14:20,151 DEBUG protocol 13648 3568 = connection is OPEN
2023-06-25 20:14:20,152 DEBUG protocol 13648 3568 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 20:14:20,152 DEBUG __init__ 13648 3568 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 20:14:20,152 DEBUG __init__ 13648 3568 authing...
2023-06-25 20:14:20,153 DEBUG protocol 13648 3568 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 20:14:20,260 DEBUG protocol 13648 3568 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 20:14:20,260 DEBUG __init__ 13648 3568 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 20:14:20,261 DEBUG __init__ 13648 3568 reconciling: set() {'XG.BTC-USD'}
2023-06-25 20:14:20,261 DEBUG __init__ 13648 3568 subbing: XG.BTC-USD
2023-06-25 20:14:20,261 DEBUG protocol 13648 3568 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 20:14:25,151 DEBUG protocol 13648 3568 < PING '' [0 bytes]
2023-06-25 20:14:25,151 DEBUG protocol 13648 3568 > PONG '' [0 bytes]
2023-06-25 20:14:30,151 DEBUG protocol 13648 3568 < PING '' [0 bytes]
2023-06-25 20:14:30,151 DEBUG protocol 13648 3568 > PONG '' [0 bytes]
2023-06-25 20:14:35,150 DEBUG protocol 13648 3568 < PING '' [0 bytes]
2023-06-25 20:14:35,150 DEBUG protocol 13648 3568 > PONG '' [0 bytes]
2023-06-25 20:14:40,150 DEBUG protocol 13648 3568 < PING '' [0 bytes]
2023-06-25 20:14:40,151 DEBUG protocol 13648 3568 > PONG '' [0 bytes]
2023-06-25 20:14:40,151 DEBUG protocol 13648 3568 % sending keepalive ping
2023-06-25 20:14:40,151 DEBUG protocol 13648 3568 > PING 1b 38 95 a9 [binary, 4 bytes]
2023-06-25 20:14:40,354 DEBUG protocol 13648 3568 < PONG 1b 38 95 a9 [binary, 4 bytes]
2023-06-25 20:14:40,354 DEBUG protocol 13648 3568 % received keepalive pong
2023-06-25 20:14:45,150 DEBUG protocol 13648 3568 < PING '' [0 bytes]
2023-06-25 20:14:45,150 DEBUG protocol 13648 3568 > PONG '' [0 bytes]
2023-06-25 20:14:50,150 DEBUG protocol 13648 3568 < PING '' [0 bytes]
2023-06-25 20:14:50,150 DEBUG protocol 13648 3568 > PONG '' [0 bytes]
2023-06-25 20:14:55,150 DEBUG protocol 13648 3568 < PING '' [0 bytes]
2023-06-25 20:14:55,150 DEBUG protocol 13648 3568 > PONG '' [0 bytes]
2023-06-25 20:14:58,224 DEBUG proactor_events 9172 8060 Using proactor: IocpProactor
2023-06-25 20:14:58,227 DEBUG __init__ 9172 8060 connect: wss://socket.polygon.io/crypto
2023-06-25 20:14:58,251 DEBUG functional 9172 6424 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-25 20:14:58,252 DEBUG functional 9172 6424 
def backend_cleanup():
    return 1

2023-06-25 20:14:58,252 DEBUG functional 9172 6424 
def db_update_task():
    return 1

2023-06-25 20:14:58,252 DEBUG functional 9172 6424 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-25 20:14:58,253 DEBUG functional 9172 6424 
def xmap(task, it):
    return 1

2023-06-25 20:14:58,253 DEBUG functional 9172 6424 
def chain(*args, **kwargs):
    return 1

2023-06-25 20:14:58,253 DEBUG functional 9172 6424 
def debug_task(self):
    return 1

2023-06-25 20:14:58,254 DEBUG functional 9172 6424 
def xstarmap(task, it):
    return 1

2023-06-25 20:14:58,254 DEBUG functional 9172 6424 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-25 20:14:58,254 DEBUG functional 9172 6424 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-25 20:14:58,255 DEBUG functional 9172 6424 
def chunks(task, it, n):
    return 1

2023-06-25 20:14:58,255 DEBUG functional 9172 6424 
def get_current_buy_price(symbol):
    return 1

2023-06-25 20:15:00,149 DEBUG protocol 13648 3568 < PING '' [0 bytes]
2023-06-25 20:15:00,149 DEBUG protocol 13648 3568 > PONG '' [0 bytes]
2023-06-25 20:15:00,184 DEBUG proactor_events 6344 20624 Using proactor: IocpProactor
2023-06-25 20:15:00,186 DEBUG __init__ 6344 20624 connect: wss://socket.polygon.io/crypto
2023-06-25 20:15:00,193 DEBUG proactor_events 12788 4452 Using proactor: IocpProactor
2023-06-25 20:15:00,196 DEBUG __init__ 12788 4452 connect: wss://socket.polygon.io/crypto
2023-06-25 20:15:00,367 DEBUG protocol 13648 3568 % sending keepalive ping
2023-06-25 20:15:00,367 DEBUG protocol 13648 3568 > PING 1c e0 6d 22 [binary, 4 bytes]
2023-06-25 20:15:00,469 DEBUG protocol 13648 3568 < PONG 1c e0 6d 22 [binary, 4 bytes]
2023-06-25 20:15:00,469 DEBUG protocol 13648 3568 % received keepalive pong
2023-06-25 20:15:01,943 DEBUG proactor_events 8840 15396 Using proactor: IocpProactor
2023-06-25 20:15:01,945 DEBUG __init__ 8840 15396 connect: wss://socket.polygon.io/crypto
2023-06-25 20:15:02,803 DEBUG protocol 13648 3568 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 20:15:02,803 DEBUG protocol 13648 3568 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 20:15:02,803 DEBUG protocol 13648 3568 = connection is CLOSING
2023-06-25 20:15:02,803 DEBUG protocol 13648 3568 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 20:15:02,803 DEBUG protocol 13648 3568 = connection is CLOSED
2023-06-25 20:15:02,804 DEBUG __init__ 13648 3568 status: Maximum number of connections exceeded.
2023-06-25 20:15:02,804 DEBUG protocol 13648 3568 x closing TCP connection
2023-06-25 20:15:02,804 DEBUG __init__ 13648 3568 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 20:15:02,905 DEBUG protocol 13648 3568 = connection is CONNECTING
2023-06-25 20:15:03,012 DEBUG client 13648 3568 > GET /crypto HTTP/1.1
2023-06-25 20:15:03,012 DEBUG client 13648 3568 > Host: socket.polygon.io
2023-06-25 20:15:03,012 DEBUG client 13648 3568 > Upgrade: websocket
2023-06-25 20:15:03,012 DEBUG client 13648 3568 > Connection: Upgrade
2023-06-25 20:15:03,012 DEBUG client 13648 3568 > Sec-WebSocket-Key: IyGWOw4IBJtU1LXA6AwlyQ==
2023-06-25 20:15:03,012 DEBUG client 13648 3568 > Sec-WebSocket-Version: 13
2023-06-25 20:15:03,012 DEBUG client 13648 3568 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 20:15:03,013 DEBUG client 13648 3568 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 20:15:03,210 DEBUG client 13648 3568 < HTTP/1.1 101 Switching Protocols
2023-06-25 20:15:03,210 DEBUG client 13648 3568 < Server: nginx/1.19.2
2023-06-25 20:15:03,210 DEBUG client 13648 3568 < Date: Sun, 25 Jun 2023 17:15:03 GMT
2023-06-25 20:15:03,210 DEBUG client 13648 3568 < Connection: upgrade
2023-06-25 20:15:03,210 DEBUG client 13648 3568 < Upgrade: websocket
2023-06-25 20:15:03,210 DEBUG client 13648 3568 < Sec-WebSocket-Accept: fsMQdxSBQjv/mV8P+hjyemfGATQ=
2023-06-25 20:15:03,210 DEBUG client 13648 3568 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 20:15:03,210 DEBUG protocol 13648 3568 = connection is OPEN
2023-06-25 20:15:03,210 DEBUG protocol 13648 3568 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 20:15:03,211 DEBUG __init__ 13648 3568 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 20:15:03,211 DEBUG __init__ 13648 3568 authing...
2023-06-25 20:15:03,212 DEBUG protocol 13648 3568 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 20:15:03,312 DEBUG protocol 13648 3568 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 20:15:03,312 DEBUG __init__ 13648 3568 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 20:15:03,312 DEBUG __init__ 13648 3568 reconciling: set() {'XG.BTC-USD'}
2023-06-25 20:15:03,312 DEBUG __init__ 13648 3568 subbing: XG.BTC-USD
2023-06-25 20:15:03,313 DEBUG protocol 13648 3568 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 20:15:07,762 DEBUG protocol 13648 3568 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 20:15:07,762 DEBUG protocol 13648 3568 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 20:15:07,762 DEBUG protocol 13648 3568 = connection is CLOSING
2023-06-25 20:15:07,762 DEBUG protocol 13648 3568 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 20:15:07,763 DEBUG protocol 13648 3568 = connection is CLOSED
2023-06-25 20:15:07,763 DEBUG __init__ 13648 3568 status: Maximum number of connections exceeded.
2023-06-25 20:15:07,763 DEBUG protocol 13648 3568 x closing TCP connection
2023-06-25 20:15:07,764 DEBUG __init__ 13648 3568 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 20:15:07,867 DEBUG protocol 13648 3568 = connection is CONNECTING
2023-06-25 20:15:07,968 DEBUG client 13648 3568 > GET /crypto HTTP/1.1
2023-06-25 20:15:07,968 DEBUG client 13648 3568 > Host: socket.polygon.io
2023-06-25 20:15:07,968 DEBUG client 13648 3568 > Upgrade: websocket
2023-06-25 20:15:07,968 DEBUG client 13648 3568 > Connection: Upgrade
2023-06-25 20:15:07,968 DEBUG client 13648 3568 > Sec-WebSocket-Key: UCgGRzJ3wN6W5r0O255+hA==
2023-06-25 20:15:07,968 DEBUG client 13648 3568 > Sec-WebSocket-Version: 13
2023-06-25 20:15:07,968 DEBUG client 13648 3568 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 20:15:07,968 DEBUG client 13648 3568 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 20:15:08,168 DEBUG client 13648 3568 < HTTP/1.1 101 Switching Protocols
2023-06-25 20:15:08,168 DEBUG client 13648 3568 < Server: nginx/1.19.2
2023-06-25 20:15:08,168 DEBUG client 13648 3568 < Date: Sun, 25 Jun 2023 17:15:08 GMT
2023-06-25 20:15:08,168 DEBUG client 13648 3568 < Connection: upgrade
2023-06-25 20:15:08,168 DEBUG client 13648 3568 < Upgrade: websocket
2023-06-25 20:15:08,168 DEBUG client 13648 3568 < Sec-WebSocket-Accept: k9d6Jr1HWG+GuzCkeH+lKyatEZs=
2023-06-25 20:15:08,168 DEBUG client 13648 3568 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 20:15:08,168 DEBUG protocol 13648 3568 = connection is OPEN
2023-06-25 20:15:08,168 DEBUG protocol 13648 3568 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 20:15:08,168 DEBUG __init__ 13648 3568 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 20:15:08,169 DEBUG __init__ 13648 3568 authing...
2023-06-25 20:15:08,169 DEBUG protocol 13648 3568 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 20:15:08,268 DEBUG protocol 13648 3568 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 20:15:08,268 DEBUG __init__ 13648 3568 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 20:15:08,268 DEBUG __init__ 13648 3568 reconciling: set() {'XG.BTC-USD'}
2023-06-25 20:15:08,269 DEBUG __init__ 13648 3568 subbing: XG.BTC-USD
2023-06-25 20:15:08,269 DEBUG protocol 13648 3568 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 20:15:12,835 DEBUG protocol 13648 3568 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 20:15:12,835 DEBUG protocol 13648 3568 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 20:15:12,835 DEBUG protocol 13648 3568 = connection is CLOSING
2023-06-25 20:15:12,835 DEBUG protocol 13648 3568 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 20:15:12,836 DEBUG protocol 13648 3568 = connection is CLOSED
2023-06-25 20:15:12,836 DEBUG __init__ 13648 3568 status: Maximum number of connections exceeded.
2023-06-25 20:15:12,836 DEBUG protocol 13648 3568 x closing TCP connection
2023-06-25 20:15:12,836 DEBUG __init__ 13648 3568 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 20:15:12,937 DEBUG protocol 13648 3568 = connection is CONNECTING
2023-06-25 20:15:13,042 DEBUG client 13648 3568 > GET /crypto HTTP/1.1
2023-06-25 20:15:13,042 DEBUG client 13648 3568 > Host: socket.polygon.io
2023-06-25 20:15:13,042 DEBUG client 13648 3568 > Upgrade: websocket
2023-06-25 20:15:13,042 DEBUG client 13648 3568 > Connection: Upgrade
2023-06-25 20:15:13,042 DEBUG client 13648 3568 > Sec-WebSocket-Key: dlEKmqdExORfaJ8C5LVcTQ==
2023-06-25 20:15:13,042 DEBUG client 13648 3568 > Sec-WebSocket-Version: 13
2023-06-25 20:15:13,042 DEBUG client 13648 3568 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 20:15:13,042 DEBUG client 13648 3568 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 20:15:13,242 DEBUG client 13648 3568 < HTTP/1.1 101 Switching Protocols
2023-06-25 20:15:13,242 DEBUG client 13648 3568 < Server: nginx/1.19.2
2023-06-25 20:15:13,242 DEBUG client 13648 3568 < Date: Sun, 25 Jun 2023 17:15:13 GMT
2023-06-25 20:15:13,242 DEBUG client 13648 3568 < Connection: upgrade
2023-06-25 20:15:13,242 DEBUG client 13648 3568 < Upgrade: websocket
2023-06-25 20:15:13,243 DEBUG client 13648 3568 < Sec-WebSocket-Accept: F+2fcVqRULd53Ytp/IwZdqXzgHs=
2023-06-25 20:15:13,243 DEBUG client 13648 3568 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 20:15:13,243 DEBUG protocol 13648 3568 = connection is OPEN
2023-06-25 20:15:13,243 DEBUG protocol 13648 3568 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 20:15:13,243 DEBUG __init__ 13648 3568 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 20:15:13,243 DEBUG __init__ 13648 3568 authing...
2023-06-25 20:15:13,244 DEBUG protocol 13648 3568 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 20:15:13,343 DEBUG protocol 13648 3568 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 20:15:13,344 DEBUG __init__ 13648 3568 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 20:15:13,344 DEBUG __init__ 13648 3568 reconciling: set() {'XG.BTC-USD'}
2023-06-25 20:15:13,345 DEBUG __init__ 13648 3568 subbing: XG.BTC-USD
2023-06-25 20:15:13,345 DEBUG protocol 13648 3568 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 20:15:17,984 DEBUG protocol 13648 3568 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 20:15:17,984 DEBUG protocol 13648 3568 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 20:15:17,984 DEBUG protocol 13648 3568 = connection is CLOSING
2023-06-25 20:15:17,984 DEBUG protocol 13648 3568 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 20:15:17,984 DEBUG protocol 13648 3568 = connection is CLOSED
2023-06-25 20:15:17,984 DEBUG __init__ 13648 3568 status: Maximum number of connections exceeded.
2023-06-25 20:15:17,985 DEBUG protocol 13648 3568 x closing TCP connection
2023-06-25 20:15:17,985 DEBUG __init__ 13648 3568 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 20:15:18,089 DEBUG protocol 13648 3568 = connection is CONNECTING
2023-06-25 20:15:18,194 DEBUG client 13648 3568 > GET /crypto HTTP/1.1
2023-06-25 20:15:18,194 DEBUG client 13648 3568 > Host: socket.polygon.io
2023-06-25 20:15:18,194 DEBUG client 13648 3568 > Upgrade: websocket
2023-06-25 20:15:18,194 DEBUG client 13648 3568 > Connection: Upgrade
2023-06-25 20:15:18,194 DEBUG client 13648 3568 > Sec-WebSocket-Key: JDyNGzOYiI5Mmz1eIyGjcQ==
2023-06-25 20:15:18,194 DEBUG client 13648 3568 > Sec-WebSocket-Version: 13
2023-06-25 20:15:18,194 DEBUG client 13648 3568 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 20:15:18,194 DEBUG client 13648 3568 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 20:15:18,397 DEBUG client 13648 3568 < HTTP/1.1 101 Switching Protocols
2023-06-25 20:15:18,397 DEBUG client 13648 3568 < Server: nginx/1.19.2
2023-06-25 20:15:18,397 DEBUG client 13648 3568 < Date: Sun, 25 Jun 2023 17:15:18 GMT
2023-06-25 20:15:18,397 DEBUG client 13648 3568 < Connection: upgrade
2023-06-25 20:15:18,397 DEBUG client 13648 3568 < Upgrade: websocket
2023-06-25 20:15:18,397 DEBUG client 13648 3568 < Sec-WebSocket-Accept: 2Yk+5fnmu0IjhBShOgTeMne3MDI=
2023-06-25 20:15:18,397 DEBUG client 13648 3568 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 20:15:18,397 DEBUG protocol 13648 3568 = connection is OPEN
2023-06-25 20:15:18,398 DEBUG protocol 13648 3568 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 20:15:18,398 DEBUG __init__ 13648 3568 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 20:15:18,398 DEBUG __init__ 13648 3568 authing...
2023-06-25 20:15:18,398 DEBUG protocol 13648 3568 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 20:15:18,501 DEBUG protocol 13648 3568 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 20:15:18,501 DEBUG __init__ 13648 3568 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 20:15:18,501 DEBUG __init__ 13648 3568 reconciling: set() {'XG.BTC-USD'}
2023-06-25 20:15:18,502 DEBUG __init__ 13648 3568 subbing: XG.BTC-USD
2023-06-25 20:15:18,502 DEBUG protocol 13648 3568 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 20:15:23,397 DEBUG protocol 13648 3568 < PING '' [0 bytes]
2023-06-25 20:15:23,397 DEBUG protocol 13648 3568 > PONG '' [0 bytes]
2023-06-25 20:15:28,397 DEBUG protocol 13648 3568 < PING '' [0 bytes]
2023-06-25 20:15:28,397 DEBUG protocol 13648 3568 > PONG '' [0 bytes]
2023-06-25 20:15:33,396 DEBUG protocol 13648 3568 < PING '' [0 bytes]
2023-06-25 20:15:33,397 DEBUG protocol 13648 3568 > PONG '' [0 bytes]
2023-06-25 20:16:01,629 DEBUG proactor_events 11360 6708 Using proactor: IocpProactor
2023-06-25 20:16:01,632 DEBUG __init__ 11360 6708 connect: wss://socket.polygon.io/crypto
2023-06-25 20:16:01,655 DEBUG functional 11360 19428 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-25 20:16:01,656 DEBUG functional 11360 19428 
def backend_cleanup():
    return 1

2023-06-25 20:16:01,656 DEBUG functional 11360 19428 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-25 20:16:01,657 DEBUG functional 11360 19428 
def xmap(task, it):
    return 1

2023-06-25 20:16:01,657 DEBUG functional 11360 19428 
def db_update_task():
    return 1

2023-06-25 20:16:01,657 DEBUG functional 11360 19428 
def chain(*args, **kwargs):
    return 1

2023-06-25 20:16:01,657 DEBUG functional 11360 19428 
def debug_task(self):
    return 1

2023-06-25 20:16:01,658 DEBUG functional 11360 19428 
def xstarmap(task, it):
    return 1

2023-06-25 20:16:01,658 DEBUG functional 11360 19428 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-25 20:16:01,658 DEBUG functional 11360 19428 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-25 20:16:01,659 DEBUG functional 11360 19428 
def chunks(task, it, n):
    return 1

2023-06-25 20:16:01,659 DEBUG functional 11360 19428 
def get_current_buy_price(symbol):
    return 1

2023-06-25 20:16:03,590 DEBUG proactor_events 8772 12312 Using proactor: IocpProactor
2023-06-25 20:16:03,592 DEBUG __init__ 8772 12312 connect: wss://socket.polygon.io/crypto
2023-06-25 20:16:03,596 DEBUG proactor_events 9236 6248 Using proactor: IocpProactor
2023-06-25 20:16:03,598 DEBUG __init__ 9236 6248 connect: wss://socket.polygon.io/crypto
2023-06-25 20:16:58,760 DEBUG proactor_events 4140 6116 Using proactor: IocpProactor
2023-06-25 20:16:58,764 DEBUG __init__ 4140 6116 connect: wss://socket.polygon.io/crypto
2023-06-25 20:16:58,789 DEBUG functional 4140 13484 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-25 20:16:58,790 DEBUG functional 4140 13484 
def backend_cleanup():
    return 1

2023-06-25 20:16:58,790 DEBUG functional 4140 13484 
def db_update_task():
    return 1

2023-06-25 20:16:58,791 DEBUG functional 4140 13484 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-25 20:16:58,791 DEBUG functional 4140 13484 
def xmap(task, it):
    return 1

2023-06-25 20:16:58,791 DEBUG functional 4140 13484 
def chain(*args, **kwargs):
    return 1

2023-06-25 20:16:58,792 DEBUG functional 4140 13484 
def debug_task(self):
    return 1

2023-06-25 20:16:58,792 DEBUG functional 4140 13484 
def xstarmap(task, it):
    return 1

2023-06-25 20:16:58,792 DEBUG functional 4140 13484 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-25 20:16:58,793 DEBUG functional 4140 13484 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-25 20:16:58,793 DEBUG functional 4140 13484 
def chunks(task, it, n):
    return 1

2023-06-25 20:16:58,793 DEBUG functional 4140 13484 
def get_current_buy_price(symbol):
    return 1

2023-06-25 20:17:00,729 DEBUG proactor_events 16088 17492 Using proactor: IocpProactor
2023-06-25 20:17:00,732 DEBUG __init__ 16088 17492 connect: wss://socket.polygon.io/crypto
2023-06-25 20:17:00,755 DEBUG proactor_events 18176 12544 Using proactor: IocpProactor
2023-06-25 20:17:00,756 DEBUG __init__ 18176 12544 connect: wss://socket.polygon.io/crypto
2023-06-25 20:17:02,487 DEBUG proactor_events 9148 20992 Using proactor: IocpProactor
2023-06-25 20:17:02,490 DEBUG __init__ 9148 20992 connect: wss://socket.polygon.io/crypto
2023-06-25 20:17:05,045 DEBUG proactor_events 13524 92 Using proactor: IocpProactor
2023-06-25 20:17:05,047 DEBUG __init__ 13524 92 connect: wss://socket.polygon.io/crypto
2023-06-25 20:19:07,772 DEBUG proactor_events 12544 4408 Using proactor: IocpProactor
2023-06-25 20:19:07,774 DEBUG __init__ 12544 4408 connect: wss://socket.polygon.io/crypto
2023-06-25 20:19:07,806 DEBUG functional 12544 12812 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-25 20:19:07,806 DEBUG functional 12544 12812 
def backend_cleanup():
    return 1

2023-06-25 20:19:07,807 DEBUG functional 12544 12812 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-25 20:19:07,807 DEBUG functional 12544 12812 
def xmap(task, it):
    return 1

2023-06-25 20:19:07,807 DEBUG functional 12544 12812 
def chain(*args, **kwargs):
    return 1

2023-06-25 20:19:07,808 DEBUG functional 12544 12812 
def debug_task(self):
    return 1

2023-06-25 20:19:07,808 DEBUG functional 12544 12812 
def xstarmap(task, it):
    return 1

2023-06-25 20:19:07,808 DEBUG functional 12544 12812 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-25 20:19:07,809 DEBUG functional 12544 12812 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-25 20:19:07,809 DEBUG functional 12544 12812 
def chunks(task, it, n):
    return 1

2023-06-25 20:19:07,809 DEBUG functional 12544 12812 
def get_current_buy_price(symbol):
    return 1

2023-06-25 20:19:09,894 DEBUG proactor_events 10984 15256 Using proactor: IocpProactor
2023-06-25 20:19:09,897 DEBUG __init__ 10984 15256 connect: wss://socket.polygon.io/crypto
2023-06-25 20:19:09,902 DEBUG proactor_events 11652 17952 Using proactor: IocpProactor
2023-06-25 20:19:09,906 DEBUG __init__ 11652 17952 connect: wss://socket.polygon.io/crypto
2023-06-25 20:19:12,411 DEBUG proactor_events 17324 9760 Using proactor: IocpProactor
2023-06-25 20:19:12,414 DEBUG __init__ 17324 9760 connect: wss://socket.polygon.io/crypto
2023-06-25 20:19:14,915 DEBUG proactor_events 10396 17020 Using proactor: IocpProactor
2023-06-25 20:19:14,918 DEBUG __init__ 10396 17020 connect: wss://socket.polygon.io/crypto
2023-06-25 20:19:17,255 DEBUG proactor_events 996 16148 Using proactor: IocpProactor
2023-06-25 20:19:17,258 DEBUG __init__ 996 16148 connect: wss://socket.polygon.io/crypto
2023-06-25 20:26:33,826 INFO autoreload 7088 10880 Watching for file changes with StatReloader
2023-06-25 20:27:10,177 INFO autoreload 7088 10880 C:\Users\Evert\Desktop\Django\monreal\trading\data_feed.py changed, reloading.
2023-06-25 20:27:11,705 INFO autoreload 6512 21512 Watching for file changes with StatReloader
2023-06-25 20:27:38,963 INFO autoreload 18928 2904 Watching for file changes with StatReloader
2023-06-25 20:27:48,750 DEBUG functional 18660 7072 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-25 20:27:48,750 DEBUG functional 18660 7072 
def backend_cleanup():
    return 1

2023-06-25 20:27:48,750 DEBUG functional 18660 7072 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-25 20:27:48,751 DEBUG functional 18660 7072 
def xmap(task, it):
    return 1

2023-06-25 20:27:48,751 DEBUG functional 18660 7072 
def chain(*args, **kwargs):
    return 1

2023-06-25 20:27:48,751 DEBUG functional 18660 7072 
def debug_task(self):
    return 1

2023-06-25 20:27:48,752 DEBUG functional 18660 7072 
def xstarmap(task, it):
    return 1

2023-06-25 20:27:48,752 DEBUG functional 18660 7072 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-25 20:27:48,752 DEBUG functional 18660 7072 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-25 20:27:48,753 DEBUG functional 18660 7072 
def chunks(task, it, n):
    return 1

2023-06-25 20:27:48,753 DEBUG functional 18660 7072 
def get_current_buy_price(symbol):
    return 1

2023-06-25 20:28:40,257 INFO autoreload 18928 2904 C:\Users\Evert\Desktop\Django\monreal\monreal\settings.py changed, reloading.
2023-06-25 20:28:41,808 INFO autoreload 11464 11396 Watching for file changes with StatReloader
2023-06-25 20:28:51,410 DEBUG functional 22036 13912 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-25 20:28:51,411 DEBUG functional 22036 13912 
def backend_cleanup():
    return 1

2023-06-25 20:28:51,411 DEBUG functional 22036 13912 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-25 20:28:51,412 DEBUG functional 22036 13912 
def xmap(task, it):
    return 1

2023-06-25 20:28:51,412 DEBUG functional 22036 13912 
def chain(*args, **kwargs):
    return 1

2023-06-25 20:28:51,412 DEBUG functional 22036 13912 
def debug_task(self):
    return 1

2023-06-25 20:28:51,413 DEBUG functional 22036 13912 
def xstarmap(task, it):
    return 1

2023-06-25 20:28:51,413 DEBUG functional 22036 13912 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-25 20:28:51,413 DEBUG functional 22036 13912 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-25 20:28:51,414 DEBUG functional 22036 13912 
def chunks(task, it, n):
    return 1

2023-06-25 20:28:51,414 DEBUG functional 22036 13912 
def get_current_buy_price(symbol):
    return 1

2023-06-25 20:45:36,538 DEBUG proactor_events 2408 1356 Using proactor: IocpProactor
2023-06-25 20:45:36,539 DEBUG __init__ 2408 1356 connect: wss://socket.polygon.io/crypto
2023-06-25 20:45:36,671 DEBUG protocol 2408 1356 = connection is CONNECTING
2023-06-25 20:45:36,777 DEBUG client 2408 1356 > GET /crypto HTTP/1.1
2023-06-25 20:45:36,777 DEBUG client 2408 1356 > Host: socket.polygon.io
2023-06-25 20:45:36,777 DEBUG client 2408 1356 > Upgrade: websocket
2023-06-25 20:45:36,777 DEBUG client 2408 1356 > Connection: Upgrade
2023-06-25 20:45:36,777 DEBUG client 2408 1356 > Sec-WebSocket-Key: N43yH1IrxmyMSmJlvsELuw==
2023-06-25 20:45:36,777 DEBUG client 2408 1356 > Sec-WebSocket-Version: 13
2023-06-25 20:45:36,777 DEBUG client 2408 1356 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 20:45:36,777 DEBUG client 2408 1356 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 20:45:36,985 DEBUG client 2408 1356 < HTTP/1.1 101 Switching Protocols
2023-06-25 20:45:36,985 DEBUG client 2408 1356 < Server: nginx/1.19.2
2023-06-25 20:45:36,985 DEBUG client 2408 1356 < Date: Sun, 25 Jun 2023 17:45:37 GMT
2023-06-25 20:45:36,985 DEBUG client 2408 1356 < Connection: upgrade
2023-06-25 20:45:36,986 DEBUG client 2408 1356 < Upgrade: websocket
2023-06-25 20:45:36,986 DEBUG client 2408 1356 < Sec-WebSocket-Accept: /F9myf6Svm6IB4SkqL0XMbNWt+c=
2023-06-25 20:45:36,986 DEBUG client 2408 1356 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 20:45:36,986 DEBUG protocol 2408 1356 = connection is OPEN
2023-06-25 20:45:36,986 DEBUG protocol 2408 1356 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 20:45:36,986 DEBUG __init__ 2408 1356 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 20:45:36,986 DEBUG __init__ 2408 1356 authing...
2023-06-25 20:45:36,987 DEBUG protocol 2408 1356 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 20:45:37,092 DEBUG protocol 2408 1356 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 20:45:37,092 DEBUG __init__ 2408 1356 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 20:45:37,093 DEBUG __init__ 2408 1356 reconciling: set() {'XG.BTC-USD'}
2023-06-25 20:45:37,093 DEBUG __init__ 2408 1356 subbing: XG.BTC-USD
2023-06-25 20:45:37,093 DEBUG protocol 2408 1356 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 20:45:38,031 DEBUG proactor_events 11620 2780 Using proactor: IocpProactor
2023-06-25 20:45:38,032 DEBUG __init__ 11620 2780 connect: wss://socket.polygon.io/crypto
2023-06-25 20:45:38,061 INFO autoreload 11620 15796 Watching for file changes with StatReloader
2023-06-25 20:45:38,152 DEBUG protocol 11620 2780 = connection is CONNECTING
2023-06-25 20:45:38,254 DEBUG client 11620 2780 > GET /crypto HTTP/1.1
2023-06-25 20:45:38,254 DEBUG client 11620 2780 > Host: socket.polygon.io
2023-06-25 20:45:38,254 DEBUG client 11620 2780 > Upgrade: websocket
2023-06-25 20:45:38,254 DEBUG client 11620 2780 > Connection: Upgrade
2023-06-25 20:45:38,255 DEBUG client 11620 2780 > Sec-WebSocket-Key: 0mOlhEYLpo7Q2YkUUzXiag==
2023-06-25 20:45:38,255 DEBUG client 11620 2780 > Sec-WebSocket-Version: 13
2023-06-25 20:45:38,255 DEBUG client 11620 2780 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 20:45:38,255 DEBUG client 11620 2780 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 20:45:38,454 DEBUG client 11620 2780 < HTTP/1.1 101 Switching Protocols
2023-06-25 20:45:38,454 DEBUG client 11620 2780 < Server: nginx/1.19.2
2023-06-25 20:45:38,454 DEBUG client 11620 2780 < Date: Sun, 25 Jun 2023 17:45:38 GMT
2023-06-25 20:45:38,454 DEBUG client 11620 2780 < Connection: upgrade
2023-06-25 20:45:38,454 DEBUG client 11620 2780 < Upgrade: websocket
2023-06-25 20:45:38,454 DEBUG client 11620 2780 < Sec-WebSocket-Accept: 8/zyPemyC15rIM1Q/5F9+xVEpRk=
2023-06-25 20:45:38,455 DEBUG client 11620 2780 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 20:45:38,455 DEBUG protocol 11620 2780 = connection is OPEN
2023-06-25 20:45:38,455 DEBUG protocol 11620 2780 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 20:45:38,455 DEBUG __init__ 11620 2780 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 20:45:38,456 DEBUG __init__ 11620 2780 authing...
2023-06-25 20:45:38,456 DEBUG protocol 11620 2780 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 20:45:38,563 DEBUG protocol 11620 2780 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 20:45:38,563 DEBUG __init__ 11620 2780 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 20:45:38,564 DEBUG __init__ 11620 2780 reconciling: set() {'XG.BTC-USD'}
2023-06-25 20:45:38,564 DEBUG __init__ 11620 2780 subbing: XG.BTC-USD
2023-06-25 20:45:38,564 DEBUG protocol 11620 2780 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 20:45:40,266 DEBUG protocol 2408 1356 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 20:45:40,266 DEBUG protocol 2408 1356 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 20:45:40,266 DEBUG protocol 2408 1356 = connection is CLOSING
2023-06-25 20:45:40,266 DEBUG protocol 2408 1356 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 20:45:40,267 DEBUG protocol 2408 1356 = connection is CLOSED
2023-06-25 20:45:40,267 DEBUG __init__ 2408 1356 status: Maximum number of connections exceeded.
2023-06-25 20:45:40,267 DEBUG protocol 2408 1356 x closing TCP connection
2023-06-25 20:45:40,267 DEBUG __init__ 2408 1356 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 20:45:40,366 DEBUG protocol 2408 1356 = connection is CONNECTING
2023-06-25 20:45:40,468 DEBUG client 2408 1356 > GET /crypto HTTP/1.1
2023-06-25 20:45:40,469 DEBUG client 2408 1356 > Host: socket.polygon.io
2023-06-25 20:45:40,469 DEBUG client 2408 1356 > Upgrade: websocket
2023-06-25 20:45:40,469 DEBUG client 2408 1356 > Connection: Upgrade
2023-06-25 20:45:40,469 DEBUG client 2408 1356 > Sec-WebSocket-Key: n/PHhni+XU32zFRb1INpxQ==
2023-06-25 20:45:40,469 DEBUG client 2408 1356 > Sec-WebSocket-Version: 13
2023-06-25 20:45:40,469 DEBUG client 2408 1356 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 20:45:40,469 DEBUG client 2408 1356 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 20:45:40,663 DEBUG client 2408 1356 < HTTP/1.1 101 Switching Protocols
2023-06-25 20:45:40,664 DEBUG client 2408 1356 < Server: nginx/1.19.2
2023-06-25 20:45:40,664 DEBUG client 2408 1356 < Date: Sun, 25 Jun 2023 17:45:40 GMT
2023-06-25 20:45:40,664 DEBUG client 2408 1356 < Connection: upgrade
2023-06-25 20:45:40,664 DEBUG client 2408 1356 < Upgrade: websocket
2023-06-25 20:45:40,664 DEBUG client 2408 1356 < Sec-WebSocket-Accept: SHEFoetBX8YGGYlLWQ3R1255QaY=
2023-06-25 20:45:40,664 DEBUG client 2408 1356 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 20:45:40,664 DEBUG protocol 2408 1356 = connection is OPEN
2023-06-25 20:45:40,664 DEBUG protocol 2408 1356 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 20:45:40,664 DEBUG __init__ 2408 1356 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 20:45:40,665 DEBUG __init__ 2408 1356 authing...
2023-06-25 20:45:40,665 DEBUG protocol 2408 1356 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 20:45:40,765 DEBUG protocol 2408 1356 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 20:45:40,765 DEBUG __init__ 2408 1356 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 20:45:40,765 DEBUG __init__ 2408 1356 reconciling: set() {'XG.BTC-USD'}
2023-06-25 20:45:40,766 DEBUG __init__ 2408 1356 subbing: XG.BTC-USD
2023-06-25 20:45:40,766 DEBUG protocol 2408 1356 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 20:45:43,452 DEBUG protocol 11620 2780 < PING '' [0 bytes]
2023-06-25 20:45:43,452 DEBUG protocol 11620 2780 > PONG '' [0 bytes]
2023-06-25 20:52:18,033 INFO autoreload 12248 17216 Watching for file changes with StatReloader
2023-06-25 20:53:18,964 INFO autoreload 5036 22308 Watching for file changes with StatReloader
2023-06-25 20:54:04,631 INFO autoreload 5036 22308 C:\Users\Evert\Desktop\Django\monreal\trading\data_feed.py changed, reloading.
2023-06-25 20:54:06,107 DEBUG proactor_events 21868 15220 Using proactor: IocpProactor
2023-06-25 20:54:06,108 DEBUG __init__ 21868 15220 connect: wss://socket.polygon.io/crypto
2023-06-25 20:54:06,140 INFO autoreload 21868 21476 Watching for file changes with StatReloader
2023-06-25 20:54:06,239 DEBUG protocol 21868 15220 = connection is CONNECTING
2023-06-25 20:54:06,341 DEBUG client 21868 15220 > GET /crypto HTTP/1.1
2023-06-25 20:54:06,341 DEBUG client 21868 15220 > Host: socket.polygon.io
2023-06-25 20:54:06,341 DEBUG client 21868 15220 > Upgrade: websocket
2023-06-25 20:54:06,341 DEBUG client 21868 15220 > Connection: Upgrade
2023-06-25 20:54:06,341 DEBUG client 21868 15220 > Sec-WebSocket-Key: 8VcHAm7HvfSpUoBfMPm+1A==
2023-06-25 20:54:06,341 DEBUG client 21868 15220 > Sec-WebSocket-Version: 13
2023-06-25 20:54:06,341 DEBUG client 21868 15220 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 20:54:06,342 DEBUG client 21868 15220 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 20:54:06,538 DEBUG client 21868 15220 < HTTP/1.1 101 Switching Protocols
2023-06-25 20:54:06,538 DEBUG client 21868 15220 < Server: nginx/1.19.2
2023-06-25 20:54:06,538 DEBUG client 21868 15220 < Date: Sun, 25 Jun 2023 17:54:06 GMT
2023-06-25 20:54:06,538 DEBUG client 21868 15220 < Connection: upgrade
2023-06-25 20:54:06,538 DEBUG client 21868 15220 < Upgrade: websocket
2023-06-25 20:54:06,539 DEBUG client 21868 15220 < Sec-WebSocket-Accept: aEJQe+S7JKH/d4+L1dHl1Q35ohI=
2023-06-25 20:54:06,539 DEBUG client 21868 15220 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 20:54:06,539 DEBUG protocol 21868 15220 = connection is OPEN
2023-06-25 20:54:06,539 DEBUG protocol 21868 15220 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 20:54:06,540 DEBUG __init__ 21868 15220 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 20:54:06,540 DEBUG __init__ 21868 15220 authing...
2023-06-25 20:54:06,540 DEBUG protocol 21868 15220 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 20:54:06,643 DEBUG protocol 21868 15220 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 20:54:06,643 DEBUG __init__ 21868 15220 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 20:54:06,643 DEBUG __init__ 21868 15220 reconciling: set() {'XG.BTC-USD'}
2023-06-25 20:54:06,644 DEBUG __init__ 21868 15220 subbing: XG.BTC-USD
2023-06-25 20:54:06,644 DEBUG protocol 21868 15220 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 20:54:11,538 DEBUG protocol 21868 15220 < PING '' [0 bytes]
2023-06-25 20:54:11,538 DEBUG protocol 21868 15220 > PONG '' [0 bytes]
2023-06-25 20:54:16,537 DEBUG protocol 21868 15220 < PING '' [0 bytes]
2023-06-25 20:54:16,537 DEBUG protocol 21868 15220 > PONG '' [0 bytes]
2023-06-25 20:54:21,537 DEBUG protocol 21868 15220 < PING '' [0 bytes]
2023-06-25 20:54:21,537 DEBUG protocol 21868 15220 > PONG '' [0 bytes]
2023-06-25 20:54:26,537 DEBUG protocol 21868 15220 < PING '' [0 bytes]
2023-06-25 20:54:26,537 DEBUG protocol 21868 15220 > PONG '' [0 bytes]
2023-06-25 20:54:26,537 DEBUG protocol 21868 15220 % sending keepalive ping
2023-06-25 20:54:26,751 DEBUG protocol 21868 15220 % received keepalive pong
2023-06-25 20:54:31,537 DEBUG protocol 21868 15220 < PING '' [0 bytes]
2023-06-25 20:54:31,537 DEBUG protocol 21868 15220 > PONG '' [0 bytes]
2023-06-25 20:54:36,536 DEBUG protocol 21868 15220 < PING '' [0 bytes]
2023-06-25 20:54:36,537 DEBUG protocol 21868 15220 > PONG '' [0 bytes]
2023-06-25 20:54:41,536 DEBUG protocol 21868 15220 < PING '' [0 bytes]
2023-06-25 20:54:41,536 DEBUG protocol 21868 15220 > PONG '' [0 bytes]
2023-06-25 20:54:46,536 DEBUG protocol 21868 15220 < PING '' [0 bytes]
2023-06-25 20:54:46,536 DEBUG protocol 21868 15220 > PONG '' [0 bytes]
2023-06-25 20:54:46,746 DEBUG protocol 21868 15220 % sending keepalive ping
2023-06-25 20:54:46,746 DEBUG protocol 21868 15220 > PING c8 04 80 3a [binary, 4 bytes]
2023-06-25 20:54:46,843 DEBUG protocol 21868 15220 < PONG c8 04 80 3a [binary, 4 bytes]
2023-06-25 20:54:46,843 DEBUG protocol 21868 15220 % received keepalive pong
2023-06-25 20:54:51,537 DEBUG protocol 21868 15220 < PING '' [0 bytes]
2023-06-25 20:54:51,537 DEBUG protocol 21868 15220 > PONG '' [0 bytes]
2023-06-25 20:54:56,536 DEBUG protocol 21868 15220 < PING '' [0 bytes]
2023-06-25 20:54:56,536 DEBUG protocol 21868 15220 > PONG '' [0 bytes]
2023-06-25 20:55:01,536 DEBUG protocol 21868 15220 < PING '' [0 bytes]
2023-06-25 20:55:01,536 DEBUG protocol 21868 15220 > PONG '' [0 bytes]
2023-06-25 20:55:06,536 DEBUG protocol 21868 15220 < PING '' [0 bytes]
2023-06-25 20:55:06,536 DEBUG protocol 21868 15220 > PONG '' [0 bytes]
2023-06-25 20:55:06,842 DEBUG protocol 21868 15220 % sending keepalive ping
2023-06-25 20:55:06,842 DEBUG protocol 21868 15220 > PING 2f 58 50 87 [binary, 4 bytes]
2023-06-25 20:55:06,939 DEBUG protocol 21868 15220 < PONG 2f 58 50 87 [binary, 4 bytes]
2023-06-25 20:55:06,939 DEBUG protocol 21868 15220 % received keepalive pong
2023-06-25 20:55:33,495 DEBUG proactor_events 14024 21668 Using proactor: IocpProactor
2023-06-25 20:55:33,496 DEBUG __init__ 14024 21668 connect: wss://socket.polygon.io/crypto
2023-06-25 20:55:33,630 DEBUG protocol 14024 21668 = connection is CONNECTING
2023-06-25 20:55:33,738 DEBUG client 14024 21668 > GET /crypto HTTP/1.1
2023-06-25 20:55:33,738 DEBUG client 14024 21668 > Host: socket.polygon.io
2023-06-25 20:55:33,738 DEBUG client 14024 21668 > Upgrade: websocket
2023-06-25 20:55:33,738 DEBUG client 14024 21668 > Connection: Upgrade
2023-06-25 20:55:33,738 DEBUG client 14024 21668 > Sec-WebSocket-Key: ORgZKdn6MJSinyi95dtD2w==
2023-06-25 20:55:33,738 DEBUG client 14024 21668 > Sec-WebSocket-Version: 13
2023-06-25 20:55:33,738 DEBUG client 14024 21668 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 20:55:33,738 DEBUG client 14024 21668 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 20:55:33,943 DEBUG client 14024 21668 < HTTP/1.1 101 Switching Protocols
2023-06-25 20:55:33,943 DEBUG client 14024 21668 < Server: nginx/1.19.2
2023-06-25 20:55:33,943 DEBUG client 14024 21668 < Date: Sun, 25 Jun 2023 17:55:34 GMT
2023-06-25 20:55:33,943 DEBUG client 14024 21668 < Connection: upgrade
2023-06-25 20:55:33,943 DEBUG client 14024 21668 < Upgrade: websocket
2023-06-25 20:55:33,943 DEBUG client 14024 21668 < Sec-WebSocket-Accept: WHAGwiINHeyT6Oo5cEputtA2uEo=
2023-06-25 20:55:33,943 DEBUG client 14024 21668 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 20:55:33,943 DEBUG protocol 14024 21668 = connection is OPEN
2023-06-25 20:55:33,944 DEBUG protocol 14024 21668 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 20:55:33,944 DEBUG __init__ 14024 21668 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 20:55:33,944 DEBUG __init__ 14024 21668 authing...
2023-06-25 20:55:33,944 DEBUG protocol 14024 21668 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 20:55:34,049 DEBUG protocol 14024 21668 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 20:55:34,050 DEBUG __init__ 14024 21668 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 20:55:34,050 DEBUG __init__ 14024 21668 reconciling: set() {'XG.BTC-USD'}
2023-06-25 20:55:34,050 DEBUG __init__ 14024 21668 subbing: XG.BTC-USD
2023-06-25 20:55:34,050 DEBUG protocol 14024 21668 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 20:55:34,911 DEBUG proactor_events 20716 7052 Using proactor: IocpProactor
2023-06-25 20:55:34,912 DEBUG __init__ 20716 7052 connect: wss://socket.polygon.io/crypto
2023-06-25 20:55:34,940 INFO autoreload 20716 17668 Watching for file changes with StatReloader
2023-06-25 20:55:35,032 DEBUG protocol 20716 7052 = connection is CONNECTING
2023-06-25 20:55:35,136 DEBUG client 20716 7052 > GET /crypto HTTP/1.1
2023-06-25 20:55:35,136 DEBUG client 20716 7052 > Host: socket.polygon.io
2023-06-25 20:55:35,136 DEBUG client 20716 7052 > Upgrade: websocket
2023-06-25 20:55:35,136 DEBUG client 20716 7052 > Connection: Upgrade
2023-06-25 20:55:35,136 DEBUG client 20716 7052 > Sec-WebSocket-Key: jhIZNpvde0H3XG2IFlplww==
2023-06-25 20:55:35,137 DEBUG client 20716 7052 > Sec-WebSocket-Version: 13
2023-06-25 20:55:35,137 DEBUG client 20716 7052 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 20:55:35,137 DEBUG client 20716 7052 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 20:55:35,331 DEBUG client 20716 7052 < HTTP/1.1 101 Switching Protocols
2023-06-25 20:55:35,331 DEBUG client 20716 7052 < Server: nginx/1.19.2
2023-06-25 20:55:35,331 DEBUG client 20716 7052 < Date: Sun, 25 Jun 2023 17:55:35 GMT
2023-06-25 20:55:35,331 DEBUG client 20716 7052 < Connection: upgrade
2023-06-25 20:55:35,332 DEBUG client 20716 7052 < Upgrade: websocket
2023-06-25 20:55:35,332 DEBUG client 20716 7052 < Sec-WebSocket-Accept: +tTU8gda8dM1iDPtvGc8DqKVtRg=
2023-06-25 20:55:35,332 DEBUG client 20716 7052 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 20:55:35,332 DEBUG protocol 20716 7052 = connection is OPEN
2023-06-25 20:55:35,332 DEBUG protocol 20716 7052 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 20:55:35,332 DEBUG __init__ 20716 7052 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 20:55:35,333 DEBUG __init__ 20716 7052 authing...
2023-06-25 20:55:35,333 DEBUG protocol 20716 7052 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 20:55:35,433 DEBUG protocol 20716 7052 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 20:55:35,433 DEBUG __init__ 20716 7052 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 20:55:35,434 DEBUG __init__ 20716 7052 reconciling: set() {'XG.BTC-USD'}
2023-06-25 20:55:35,434 DEBUG __init__ 20716 7052 subbing: XG.BTC-USD
2023-06-25 20:55:35,434 DEBUG protocol 20716 7052 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 20:55:36,018 DEBUG protocol 14024 21668 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 20:55:36,018 DEBUG protocol 14024 21668 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 20:55:36,018 DEBUG protocol 14024 21668 = connection is CLOSING
2023-06-25 20:55:36,018 DEBUG protocol 14024 21668 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 20:55:36,018 DEBUG protocol 14024 21668 = connection is CLOSED
2023-06-25 20:55:36,018 DEBUG __init__ 14024 21668 status: Maximum number of connections exceeded.
2023-06-25 20:55:36,019 DEBUG protocol 14024 21668 x closing TCP connection
2023-06-25 20:55:36,019 DEBUG __init__ 14024 21668 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 20:55:36,121 DEBUG protocol 14024 21668 = connection is CONNECTING
2023-06-25 20:55:36,228 DEBUG client 14024 21668 > GET /crypto HTTP/1.1
2023-06-25 20:55:36,228 DEBUG client 14024 21668 > Host: socket.polygon.io
2023-06-25 20:55:36,228 DEBUG client 14024 21668 > Upgrade: websocket
2023-06-25 20:55:36,228 DEBUG client 14024 21668 > Connection: Upgrade
2023-06-25 20:55:36,228 DEBUG client 14024 21668 > Sec-WebSocket-Key: xTVSCVE+AaDP5HxTjY3InQ==
2023-06-25 20:55:36,228 DEBUG client 14024 21668 > Sec-WebSocket-Version: 13
2023-06-25 20:55:36,228 DEBUG client 14024 21668 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 20:55:36,228 DEBUG client 14024 21668 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 20:55:36,433 DEBUG client 14024 21668 < HTTP/1.1 101 Switching Protocols
2023-06-25 20:55:36,433 DEBUG client 14024 21668 < Server: nginx/1.19.2
2023-06-25 20:55:36,433 DEBUG client 14024 21668 < Date: Sun, 25 Jun 2023 17:55:36 GMT
2023-06-25 20:55:36,433 DEBUG client 14024 21668 < Connection: upgrade
2023-06-25 20:55:36,433 DEBUG client 14024 21668 < Upgrade: websocket
2023-06-25 20:55:36,433 DEBUG client 14024 21668 < Sec-WebSocket-Accept: PT4RjgzI2A4O+2/ssYJqtaFLWYE=
2023-06-25 20:55:36,433 DEBUG client 14024 21668 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 20:55:36,433 DEBUG protocol 14024 21668 = connection is OPEN
2023-06-25 20:55:36,433 DEBUG protocol 14024 21668 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 20:55:36,433 DEBUG __init__ 14024 21668 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 20:55:36,434 DEBUG __init__ 14024 21668 authing...
2023-06-25 20:55:36,434 DEBUG protocol 14024 21668 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 20:55:36,536 DEBUG protocol 14024 21668 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 20:55:36,536 DEBUG __init__ 14024 21668 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 20:55:36,537 DEBUG __init__ 14024 21668 reconciling: set() {'XG.BTC-USD'}
2023-06-25 20:55:36,537 DEBUG __init__ 14024 21668 subbing: XG.BTC-USD
2023-06-25 20:55:36,537 DEBUG protocol 14024 21668 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 20:55:37,623 DEBUG protocol 20716 7052 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 20:55:37,623 DEBUG protocol 20716 7052 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 20:55:37,623 DEBUG protocol 20716 7052 = connection is CLOSING
2023-06-25 20:55:37,623 DEBUG protocol 20716 7052 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 20:55:37,623 DEBUG protocol 20716 7052 = connection is CLOSED
2023-06-25 20:55:37,623 DEBUG __init__ 20716 7052 status: Maximum number of connections exceeded.
2023-06-25 20:55:37,624 DEBUG protocol 20716 7052 x closing TCP connection
2023-06-25 20:55:37,624 DEBUG __init__ 20716 7052 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 20:55:37,724 DEBUG protocol 20716 7052 = connection is CONNECTING
2023-06-25 20:55:37,825 DEBUG client 20716 7052 > GET /crypto HTTP/1.1
2023-06-25 20:55:37,826 DEBUG client 20716 7052 > Host: socket.polygon.io
2023-06-25 20:55:37,826 DEBUG client 20716 7052 > Upgrade: websocket
2023-06-25 20:55:37,826 DEBUG client 20716 7052 > Connection: Upgrade
2023-06-25 20:55:37,826 DEBUG client 20716 7052 > Sec-WebSocket-Key: Kt4/PN68Io/Ep5OFzpjodQ==
2023-06-25 20:55:37,826 DEBUG client 20716 7052 > Sec-WebSocket-Version: 13
2023-06-25 20:55:37,826 DEBUG client 20716 7052 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 20:55:37,826 DEBUG client 20716 7052 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 20:55:38,023 DEBUG client 20716 7052 < HTTP/1.1 101 Switching Protocols
2023-06-25 20:55:38,023 DEBUG client 20716 7052 < Server: nginx/1.19.2
2023-06-25 20:55:38,023 DEBUG client 20716 7052 < Date: Sun, 25 Jun 2023 17:55:38 GMT
2023-06-25 20:55:38,023 DEBUG client 20716 7052 < Connection: upgrade
2023-06-25 20:55:38,023 DEBUG client 20716 7052 < Upgrade: websocket
2023-06-25 20:55:38,023 DEBUG client 20716 7052 < Sec-WebSocket-Accept: ccRbxpYnG5q0ailjD2a2z1oSfYI=
2023-06-25 20:55:38,023 DEBUG client 20716 7052 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 20:55:38,023 DEBUG protocol 20716 7052 = connection is OPEN
2023-06-25 20:55:38,024 DEBUG protocol 20716 7052 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 20:55:38,024 DEBUG __init__ 20716 7052 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 20:55:38,024 DEBUG __init__ 20716 7052 authing...
2023-06-25 20:55:38,024 DEBUG protocol 20716 7052 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 20:55:38,123 DEBUG protocol 20716 7052 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 20:55:38,124 DEBUG __init__ 20716 7052 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 20:55:38,124 DEBUG __init__ 20716 7052 reconciling: set() {'XG.BTC-USD'}
2023-06-25 20:55:38,125 DEBUG __init__ 20716 7052 subbing: XG.BTC-USD
2023-06-25 20:55:38,125 DEBUG protocol 20716 7052 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 20:55:41,035 DEBUG protocol 14024 21668 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 20:55:41,035 DEBUG protocol 14024 21668 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 20:55:41,035 DEBUG protocol 14024 21668 = connection is CLOSING
2023-06-25 20:55:41,035 DEBUG protocol 14024 21668 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 20:55:41,036 DEBUG protocol 14024 21668 = connection is CLOSED
2023-06-25 20:55:41,036 DEBUG __init__ 14024 21668 status: Maximum number of connections exceeded.
2023-06-25 20:55:41,036 DEBUG protocol 14024 21668 x closing TCP connection
2023-06-25 20:55:41,036 DEBUG __init__ 14024 21668 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 20:58:15,070 INFO autoreload 13460 19720 Watching for file changes with StatReloader
2023-06-25 20:58:57,171 INFO autoreload 16448 21044 Watching for file changes with StatReloader
2023-06-25 21:01:25,524 DEBUG proactor_events 13448 14640 Using proactor: IocpProactor
2023-06-25 21:01:25,525 DEBUG __init__ 13448 14640 connect: wss://socket.polygon.io/crypto
2023-06-25 21:01:25,659 DEBUG protocol 13448 14640 = connection is CONNECTING
2023-06-25 21:01:25,765 DEBUG client 13448 14640 > GET /crypto HTTP/1.1
2023-06-25 21:01:25,765 DEBUG client 13448 14640 > Host: socket.polygon.io
2023-06-25 21:01:25,765 DEBUG client 13448 14640 > Upgrade: websocket
2023-06-25 21:01:25,765 DEBUG client 13448 14640 > Connection: Upgrade
2023-06-25 21:01:25,765 DEBUG client 13448 14640 > Sec-WebSocket-Key: a8IBpaB7fCBttQtufAR0Tg==
2023-06-25 21:01:25,765 DEBUG client 13448 14640 > Sec-WebSocket-Version: 13
2023-06-25 21:01:25,765 DEBUG client 13448 14640 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:01:25,765 DEBUG client 13448 14640 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:01:25,970 DEBUG client 13448 14640 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:01:25,970 DEBUG client 13448 14640 < Server: nginx/1.19.2
2023-06-25 21:01:25,970 DEBUG client 13448 14640 < Date: Sun, 25 Jun 2023 18:01:26 GMT
2023-06-25 21:01:25,970 DEBUG client 13448 14640 < Connection: upgrade
2023-06-25 21:01:25,970 DEBUG client 13448 14640 < Upgrade: websocket
2023-06-25 21:01:25,971 DEBUG client 13448 14640 < Sec-WebSocket-Accept: VDUX/9YbtG7UaLDGKPHVBKGkdOE=
2023-06-25 21:01:25,971 DEBUG client 13448 14640 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:01:25,971 DEBUG protocol 13448 14640 = connection is OPEN
2023-06-25 21:01:25,971 DEBUG protocol 13448 14640 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:01:25,971 DEBUG __init__ 13448 14640 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:01:25,971 DEBUG __init__ 13448 14640 authing...
2023-06-25 21:01:25,971 DEBUG protocol 13448 14640 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:01:26,077 DEBUG protocol 13448 14640 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:01:26,077 DEBUG __init__ 13448 14640 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:01:26,077 DEBUG __init__ 13448 14640 reconciling: set() {'XG.BTC-USD'}
2023-06-25 21:01:26,077 DEBUG __init__ 13448 14640 subbing: XG.BTC-USD
2023-06-25 21:01:26,077 DEBUG protocol 13448 14640 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 21:01:26,948 DEBUG proactor_events 22488 19360 Using proactor: IocpProactor
2023-06-25 21:01:26,949 DEBUG __init__ 22488 19360 connect: wss://socket.polygon.io/crypto
2023-06-25 21:01:26,977 INFO autoreload 22488 6940 Watching for file changes with StatReloader
2023-06-25 21:01:27,070 DEBUG protocol 22488 19360 = connection is CONNECTING
2023-06-25 21:01:27,173 DEBUG client 22488 19360 > GET /crypto HTTP/1.1
2023-06-25 21:01:27,174 DEBUG client 22488 19360 > Host: socket.polygon.io
2023-06-25 21:01:27,174 DEBUG client 22488 19360 > Upgrade: websocket
2023-06-25 21:01:27,174 DEBUG client 22488 19360 > Connection: Upgrade
2023-06-25 21:01:27,174 DEBUG client 22488 19360 > Sec-WebSocket-Key: VFo4X2FaVYoRMUklRl7dBw==
2023-06-25 21:01:27,174 DEBUG client 22488 19360 > Sec-WebSocket-Version: 13
2023-06-25 21:01:27,174 DEBUG client 22488 19360 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:01:27,174 DEBUG client 22488 19360 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:01:27,372 DEBUG client 22488 19360 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:01:27,373 DEBUG client 22488 19360 < Server: nginx/1.19.2
2023-06-25 21:01:27,373 DEBUG client 22488 19360 < Date: Sun, 25 Jun 2023 18:01:27 GMT
2023-06-25 21:01:27,373 DEBUG client 22488 19360 < Connection: upgrade
2023-06-25 21:01:27,373 DEBUG client 22488 19360 < Upgrade: websocket
2023-06-25 21:01:27,373 DEBUG client 22488 19360 < Sec-WebSocket-Accept: AF00jr9kUVm4PQTfQsSmx0/+lcw=
2023-06-25 21:01:27,373 DEBUG client 22488 19360 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:01:27,373 DEBUG protocol 22488 19360 = connection is OPEN
2023-06-25 21:01:27,374 DEBUG protocol 22488 19360 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:01:27,374 DEBUG __init__ 22488 19360 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:01:27,375 DEBUG __init__ 22488 19360 authing...
2023-06-25 21:01:27,375 DEBUG protocol 22488 19360 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:01:27,477 DEBUG protocol 22488 19360 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:01:27,477 DEBUG __init__ 22488 19360 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:01:27,477 DEBUG __init__ 22488 19360 reconciling: set() {'XG.BTC-USD'}
2023-06-25 21:01:27,478 DEBUG __init__ 22488 19360 subbing: XG.BTC-USD
2023-06-25 21:01:27,478 DEBUG protocol 22488 19360 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 21:01:28,967 DEBUG protocol 13448 14640 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 21:01:28,967 DEBUG protocol 13448 14640 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:01:28,967 DEBUG protocol 13448 14640 = connection is CLOSING
2023-06-25 21:01:28,967 DEBUG protocol 13448 14640 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:01:28,967 DEBUG protocol 13448 14640 = connection is CLOSED
2023-06-25 21:01:28,967 DEBUG __init__ 13448 14640 status: Maximum number of connections exceeded.
2023-06-25 21:01:28,968 DEBUG protocol 13448 14640 x closing TCP connection
2023-06-25 21:01:28,968 DEBUG __init__ 13448 14640 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 21:01:29,081 DEBUG protocol 13448 14640 = connection is CONNECTING
2023-06-25 21:01:29,183 DEBUG client 13448 14640 > GET /crypto HTTP/1.1
2023-06-25 21:01:29,183 DEBUG client 13448 14640 > Host: socket.polygon.io
2023-06-25 21:01:29,183 DEBUG client 13448 14640 > Upgrade: websocket
2023-06-25 21:01:29,183 DEBUG client 13448 14640 > Connection: Upgrade
2023-06-25 21:01:29,183 DEBUG client 13448 14640 > Sec-WebSocket-Key: NiY/gyr50hFHZ+/v+1793A==
2023-06-25 21:01:29,183 DEBUG client 13448 14640 > Sec-WebSocket-Version: 13
2023-06-25 21:01:29,183 DEBUG client 13448 14640 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:01:29,183 DEBUG client 13448 14640 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:01:29,383 DEBUG client 13448 14640 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:01:29,383 DEBUG client 13448 14640 < Server: nginx/1.19.2
2023-06-25 21:01:29,383 DEBUG client 13448 14640 < Date: Sun, 25 Jun 2023 18:01:29 GMT
2023-06-25 21:01:29,383 DEBUG client 13448 14640 < Connection: upgrade
2023-06-25 21:01:29,383 DEBUG client 13448 14640 < Upgrade: websocket
2023-06-25 21:01:29,383 DEBUG client 13448 14640 < Sec-WebSocket-Accept: N3w8tA29QMc8tfa81u5GGEmVrMQ=
2023-06-25 21:01:29,383 DEBUG client 13448 14640 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:01:29,383 DEBUG protocol 13448 14640 = connection is OPEN
2023-06-25 21:01:29,383 DEBUG protocol 13448 14640 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:01:29,383 DEBUG __init__ 13448 14640 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:01:29,384 DEBUG __init__ 13448 14640 authing...
2023-06-25 21:01:29,384 DEBUG protocol 13448 14640 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:01:29,482 DEBUG protocol 13448 14640 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:01:29,482 DEBUG __init__ 13448 14640 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:01:29,482 DEBUG __init__ 13448 14640 reconciling: set() {'XG.BTC-USD'}
2023-06-25 21:01:29,483 DEBUG __init__ 13448 14640 subbing: XG.BTC-USD
2023-06-25 21:01:29,483 DEBUG protocol 13448 14640 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 21:09:59,651 DEBUG proactor_events 11248 6556 Using proactor: IocpProactor
2023-06-25 21:09:59,652 DEBUG __init__ 11248 6556 connect: wss://socket.polygon.io/crypto
2023-06-25 21:09:59,790 DEBUG protocol 11248 6556 = connection is CONNECTING
2023-06-25 21:09:59,895 DEBUG client 11248 6556 > GET /crypto HTTP/1.1
2023-06-25 21:09:59,895 DEBUG client 11248 6556 > Host: socket.polygon.io
2023-06-25 21:09:59,895 DEBUG client 11248 6556 > Upgrade: websocket
2023-06-25 21:09:59,895 DEBUG client 11248 6556 > Connection: Upgrade
2023-06-25 21:09:59,895 DEBUG client 11248 6556 > Sec-WebSocket-Key: THr6ZL/ZOZcD2QySCSF1jw==
2023-06-25 21:09:59,896 DEBUG client 11248 6556 > Sec-WebSocket-Version: 13
2023-06-25 21:09:59,896 DEBUG client 11248 6556 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:09:59,896 DEBUG client 11248 6556 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:10:00,100 DEBUG client 11248 6556 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:10:00,100 DEBUG client 11248 6556 < Server: nginx/1.19.2
2023-06-25 21:10:00,100 DEBUG client 11248 6556 < Date: Sun, 25 Jun 2023 18:10:00 GMT
2023-06-25 21:10:00,100 DEBUG client 11248 6556 < Connection: upgrade
2023-06-25 21:10:00,100 DEBUG client 11248 6556 < Upgrade: websocket
2023-06-25 21:10:00,100 DEBUG client 11248 6556 < Sec-WebSocket-Accept: Kw5ixr8hyhm0+VXmUFylPFErCmc=
2023-06-25 21:10:00,100 DEBUG client 11248 6556 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:10:00,100 DEBUG protocol 11248 6556 = connection is OPEN
2023-06-25 21:10:00,101 DEBUG protocol 11248 6556 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:10:00,101 DEBUG __init__ 11248 6556 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:10:00,101 DEBUG __init__ 11248 6556 authing...
2023-06-25 21:10:00,101 DEBUG protocol 11248 6556 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:10:00,207 DEBUG protocol 11248 6556 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:10:00,208 DEBUG __init__ 11248 6556 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:10:00,208 DEBUG __init__ 11248 6556 reconciling: set() {'XG.BTC-USD'}
2023-06-25 21:10:00,208 DEBUG __init__ 11248 6556 subbing: XG.BTC-USD
2023-06-25 21:10:00,208 DEBUG protocol 11248 6556 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 21:10:00,916 DEBUG proactor_events 1768 6292 Using proactor: IocpProactor
2023-06-25 21:10:00,918 DEBUG __init__ 1768 6292 connect: wss://socket.polygon.io/crypto
2023-06-25 21:10:00,936 INFO autoreload 1768 22272 Watching for file changes with StatReloader
2023-06-25 21:10:01,041 DEBUG protocol 1768 6292 = connection is CONNECTING
2023-06-25 21:10:01,142 DEBUG client 1768 6292 > GET /crypto HTTP/1.1
2023-06-25 21:10:01,142 DEBUG client 1768 6292 > Host: socket.polygon.io
2023-06-25 21:10:01,143 DEBUG client 1768 6292 > Upgrade: websocket
2023-06-25 21:10:01,143 DEBUG client 1768 6292 > Connection: Upgrade
2023-06-25 21:10:01,143 DEBUG client 1768 6292 > Sec-WebSocket-Key: L0D+piF4dOjrKHiY3sp3hQ==
2023-06-25 21:10:01,143 DEBUG client 1768 6292 > Sec-WebSocket-Version: 13
2023-06-25 21:10:01,143 DEBUG client 1768 6292 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:10:01,143 DEBUG client 1768 6292 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:10:01,351 DEBUG client 1768 6292 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:10:01,352 DEBUG client 1768 6292 < Server: nginx/1.19.2
2023-06-25 21:10:01,352 DEBUG client 1768 6292 < Date: Sun, 25 Jun 2023 18:10:01 GMT
2023-06-25 21:10:01,352 DEBUG client 1768 6292 < Connection: upgrade
2023-06-25 21:10:01,352 DEBUG client 1768 6292 < Upgrade: websocket
2023-06-25 21:10:01,352 DEBUG client 1768 6292 < Sec-WebSocket-Accept: apq7lC0kYY/0K0lgv2wOSmYM3ME=
2023-06-25 21:10:01,352 DEBUG client 1768 6292 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:10:01,352 DEBUG protocol 1768 6292 = connection is OPEN
2023-06-25 21:10:01,353 DEBUG protocol 1768 6292 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:10:01,353 DEBUG __init__ 1768 6292 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:10:01,354 DEBUG __init__ 1768 6292 authing...
2023-06-25 21:10:01,354 DEBUG protocol 1768 6292 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:10:01,454 DEBUG protocol 1768 6292 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:10:01,455 DEBUG __init__ 1768 6292 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:10:01,455 DEBUG __init__ 1768 6292 reconciling: set() {'XG.BTC-USD'}
2023-06-25 21:10:01,455 DEBUG __init__ 1768 6292 subbing: XG.BTC-USD
2023-06-25 21:10:01,456 DEBUG protocol 1768 6292 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 21:10:03,684 DEBUG protocol 11248 6556 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 21:10:03,684 DEBUG protocol 11248 6556 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:10:03,684 DEBUG protocol 11248 6556 = connection is CLOSING
2023-06-25 21:10:03,684 DEBUG protocol 11248 6556 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:10:03,685 DEBUG protocol 11248 6556 = connection is CLOSED
2023-06-25 21:10:03,685 DEBUG __init__ 11248 6556 status: Maximum number of connections exceeded.
2023-06-25 21:10:03,686 DEBUG protocol 11248 6556 x closing TCP connection
2023-06-25 21:10:03,686 DEBUG __init__ 11248 6556 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 21:10:03,785 DEBUG protocol 11248 6556 = connection is CONNECTING
2023-06-25 21:10:03,886 DEBUG client 11248 6556 > GET /crypto HTTP/1.1
2023-06-25 21:10:03,886 DEBUG client 11248 6556 > Host: socket.polygon.io
2023-06-25 21:10:03,886 DEBUG client 11248 6556 > Upgrade: websocket
2023-06-25 21:10:03,887 DEBUG client 11248 6556 > Connection: Upgrade
2023-06-25 21:10:03,887 DEBUG client 11248 6556 > Sec-WebSocket-Key: LIYLbg7Lewa8K2iB2X22fw==
2023-06-25 21:10:03,887 DEBUG client 11248 6556 > Sec-WebSocket-Version: 13
2023-06-25 21:10:03,887 DEBUG client 11248 6556 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:10:03,887 DEBUG client 11248 6556 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:10:04,086 DEBUG client 11248 6556 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:10:04,086 DEBUG client 11248 6556 < Server: nginx/1.19.2
2023-06-25 21:10:04,086 DEBUG client 11248 6556 < Date: Sun, 25 Jun 2023 18:10:04 GMT
2023-06-25 21:10:04,086 DEBUG client 11248 6556 < Connection: upgrade
2023-06-25 21:10:04,086 DEBUG client 11248 6556 < Upgrade: websocket
2023-06-25 21:10:04,086 DEBUG client 11248 6556 < Sec-WebSocket-Accept: TQRBZBT1EgqH/v/le2xjRd/Ch5c=
2023-06-25 21:10:04,086 DEBUG client 11248 6556 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:10:04,086 DEBUG protocol 11248 6556 = connection is OPEN
2023-06-25 21:10:04,087 DEBUG protocol 11248 6556 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:10:04,087 DEBUG __init__ 11248 6556 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:10:04,087 DEBUG __init__ 11248 6556 authing...
2023-06-25 21:10:04,087 DEBUG protocol 11248 6556 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:10:04,185 DEBUG protocol 11248 6556 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:10:04,186 DEBUG __init__ 11248 6556 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:10:04,186 DEBUG __init__ 11248 6556 reconciling: set() {'XG.BTC-USD'}
2023-06-25 21:10:04,186 DEBUG __init__ 11248 6556 subbing: XG.BTC-USD
2023-06-25 21:10:04,187 DEBUG protocol 11248 6556 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 21:10:06,227 DEBUG protocol 1768 6292 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 21:10:06,227 DEBUG protocol 1768 6292 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:10:06,227 DEBUG protocol 1768 6292 = connection is CLOSING
2023-06-25 21:10:06,227 DEBUG protocol 1768 6292 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:10:06,227 DEBUG protocol 1768 6292 = connection is CLOSED
2023-06-25 21:10:06,228 DEBUG __init__ 1768 6292 status: Maximum number of connections exceeded.
2023-06-25 21:10:06,228 DEBUG protocol 1768 6292 x closing TCP connection
2023-06-25 21:10:06,228 DEBUG __init__ 1768 6292 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 21:10:06,333 DEBUG protocol 1768 6292 = connection is CONNECTING
2023-06-25 21:10:06,438 DEBUG client 1768 6292 > GET /crypto HTTP/1.1
2023-06-25 21:10:06,438 DEBUG client 1768 6292 > Host: socket.polygon.io
2023-06-25 21:10:06,438 DEBUG client 1768 6292 > Upgrade: websocket
2023-06-25 21:10:06,438 DEBUG client 1768 6292 > Connection: Upgrade
2023-06-25 21:10:06,438 DEBUG client 1768 6292 > Sec-WebSocket-Key: wslD5kdAb7tYVBpsidJWTg==
2023-06-25 21:10:06,438 DEBUG client 1768 6292 > Sec-WebSocket-Version: 13
2023-06-25 21:10:06,438 DEBUG client 1768 6292 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:10:06,438 DEBUG client 1768 6292 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:10:06,642 DEBUG client 1768 6292 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:10:06,642 DEBUG client 1768 6292 < Server: nginx/1.19.2
2023-06-25 21:10:06,642 DEBUG client 1768 6292 < Date: Sun, 25 Jun 2023 18:10:06 GMT
2023-06-25 21:10:06,642 DEBUG client 1768 6292 < Connection: upgrade
2023-06-25 21:10:06,642 DEBUG client 1768 6292 < Upgrade: websocket
2023-06-25 21:10:06,642 DEBUG client 1768 6292 < Sec-WebSocket-Accept: LBXnvAFmvHEoQnFE2YYtvYokSCk=
2023-06-25 21:10:06,642 DEBUG client 1768 6292 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:10:06,642 DEBUG protocol 1768 6292 = connection is OPEN
2023-06-25 21:10:06,642 DEBUG protocol 1768 6292 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:10:06,643 DEBUG __init__ 1768 6292 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:10:06,643 DEBUG __init__ 1768 6292 authing...
2023-06-25 21:10:06,643 DEBUG protocol 1768 6292 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:10:06,746 DEBUG protocol 1768 6292 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:10:06,746 DEBUG __init__ 1768 6292 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:10:06,746 DEBUG __init__ 1768 6292 reconciling: set() {'XG.BTC-USD'}
2023-06-25 21:10:06,746 DEBUG __init__ 1768 6292 subbing: XG.BTC-USD
2023-06-25 21:10:06,746 DEBUG protocol 1768 6292 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 21:12:01,001 INFO autoreload 11284 5224 Watching for file changes with StatReloader
2023-06-25 21:12:01,233 DEBUG proactor_events 11284 18868 Using proactor: IocpProactor
2023-06-25 21:12:01,236 DEBUG __init__ 11284 18868 connect: wss://socket.polygon.io/crypto
2023-06-25 21:12:01,404 DEBUG protocol 11284 18868 = connection is CONNECTING
2023-06-25 21:12:01,509 DEBUG client 11284 18868 > GET /crypto HTTP/1.1
2023-06-25 21:12:01,509 DEBUG client 11284 18868 > Host: socket.polygon.io
2023-06-25 21:12:01,509 DEBUG client 11284 18868 > Upgrade: websocket
2023-06-25 21:12:01,510 DEBUG client 11284 18868 > Connection: Upgrade
2023-06-25 21:12:01,510 DEBUG client 11284 18868 > Sec-WebSocket-Key: uyc/y9E5X0+wmqca0AKcag==
2023-06-25 21:12:01,510 DEBUG client 11284 18868 > Sec-WebSocket-Version: 13
2023-06-25 21:12:01,510 DEBUG client 11284 18868 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:12:01,510 DEBUG client 11284 18868 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:12:01,713 DEBUG client 11284 18868 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:12:01,713 DEBUG client 11284 18868 < Server: nginx/1.19.2
2023-06-25 21:12:01,713 DEBUG client 11284 18868 < Date: Sun, 25 Jun 2023 18:12:02 GMT
2023-06-25 21:12:01,713 DEBUG client 11284 18868 < Connection: upgrade
2023-06-25 21:12:01,713 DEBUG client 11284 18868 < Upgrade: websocket
2023-06-25 21:12:01,713 DEBUG client 11284 18868 < Sec-WebSocket-Accept: oa5VGAZQW7jjLanAuDQefJTVK5w=
2023-06-25 21:12:01,714 DEBUG client 11284 18868 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:12:01,714 DEBUG protocol 11284 18868 = connection is OPEN
2023-06-25 21:12:01,714 DEBUG protocol 11284 18868 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:12:01,714 DEBUG __init__ 11284 18868 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:12:01,715 DEBUG __init__ 11284 18868 authing...
2023-06-25 21:12:01,715 DEBUG protocol 11284 18868 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:12:01,823 DEBUG protocol 11284 18868 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:12:01,823 DEBUG __init__ 11284 18868 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:12:01,823 DEBUG __init__ 11284 18868 reconciling: set() {'XG.BTC-USD'}
2023-06-25 21:12:01,824 DEBUG __init__ 11284 18868 subbing: XG.BTC-USD
2023-06-25 21:12:01,824 DEBUG protocol 11284 18868 > TEXT '{"action": "subscribe", "params": "XG.BTC-USD"}' [47 bytes]
2023-06-25 21:12:06,712 DEBUG protocol 11284 18868 < PING '' [0 bytes]
2023-06-25 21:12:06,713 DEBUG protocol 11284 18868 > PONG '' [0 bytes]
2023-06-25 21:12:11,713 DEBUG protocol 11284 18868 < PING '' [0 bytes]
2023-06-25 21:12:11,713 DEBUG protocol 11284 18868 > PONG '' [0 bytes]
2023-06-25 21:12:16,713 DEBUG protocol 11284 18868 < PING '' [0 bytes]
2023-06-25 21:12:16,713 DEBUG protocol 11284 18868 > PONG '' [0 bytes]
2023-06-25 21:12:21,712 DEBUG protocol 11284 18868 < PING '' [0 bytes]
2023-06-25 21:12:21,712 DEBUG protocol 11284 18868 > PONG '' [0 bytes]
2023-06-25 21:12:21,712 DEBUG protocol 11284 18868 % sending keepalive ping
2023-06-25 21:12:21,712 DEBUG protocol 11284 18868 > PING 3e 85 7c e8 [binary, 4 bytes]
2023-06-25 21:12:21,915 DEBUG protocol 11284 18868 < PONG 3e 85 7c e8 [binary, 4 bytes]
2023-06-25 21:12:21,916 DEBUG protocol 11284 18868 % received keepalive pong
2023-06-25 21:12:25,744 INFO autoreload 11284 5224 C:\Users\Evert\Desktop\Django\monreal\trading\data_feed.py changed, reloading.
2023-06-25 21:12:26,712 DEBUG protocol 11284 18868 < PING '' [0 bytes]
2023-06-25 21:12:26,712 DEBUG protocol 11284 18868 > PONG '' [0 bytes]
2023-06-25 21:13:11,716 INFO autoreload 22216 19312 Watching for file changes with StatReloader
2023-06-25 21:13:11,952 DEBUG proactor_events 22216 12732 Using proactor: IocpProactor
2023-06-25 21:13:11,954 DEBUG __init__ 22216 12732 connect: wss://socket.polygon.io/crypto
2023-06-25 21:13:12,117 DEBUG protocol 22216 12732 = connection is CONNECTING
2023-06-25 21:13:12,220 DEBUG client 22216 12732 > GET /crypto HTTP/1.1
2023-06-25 21:13:12,220 DEBUG client 22216 12732 > Host: socket.polygon.io
2023-06-25 21:13:12,220 DEBUG client 22216 12732 > Upgrade: websocket
2023-06-25 21:13:12,220 DEBUG client 22216 12732 > Connection: Upgrade
2023-06-25 21:13:12,220 DEBUG client 22216 12732 > Sec-WebSocket-Key: 5F6o4TODCedHvPIIiyfLNw==
2023-06-25 21:13:12,220 DEBUG client 22216 12732 > Sec-WebSocket-Version: 13
2023-06-25 21:13:12,220 DEBUG client 22216 12732 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:13:12,220 DEBUG client 22216 12732 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:13:12,415 DEBUG client 22216 12732 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:13:12,416 DEBUG client 22216 12732 < Server: nginx/1.19.2
2023-06-25 21:13:12,416 DEBUG client 22216 12732 < Date: Sun, 25 Jun 2023 18:13:12 GMT
2023-06-25 21:13:12,416 DEBUG client 22216 12732 < Connection: upgrade
2023-06-25 21:13:12,416 DEBUG client 22216 12732 < Upgrade: websocket
2023-06-25 21:13:12,416 DEBUG client 22216 12732 < Sec-WebSocket-Accept: F0aGt0UmgVfPeqHAvSJ/r9T6810=
2023-06-25 21:13:12,416 DEBUG client 22216 12732 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:13:12,416 DEBUG protocol 22216 12732 = connection is OPEN
2023-06-25 21:13:12,416 DEBUG protocol 22216 12732 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:13:12,417 DEBUG __init__ 22216 12732 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:13:12,417 DEBUG __init__ 22216 12732 authing...
2023-06-25 21:13:12,417 DEBUG protocol 22216 12732 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:13:12,518 DEBUG protocol 22216 12732 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:13:12,518 DEBUG __init__ 22216 12732 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:13:12,518 DEBUG __init__ 22216 12732 reconciling: set() {'XT.BTC-USD'}
2023-06-25 21:13:12,519 DEBUG __init__ 22216 12732 subbing: XT.BTC-USD
2023-06-25 21:13:12,519 DEBUG protocol 22216 12732 > TEXT '{"action": "subscribe", "params": "XT.BTC-USD"}' [47 bytes]
2023-06-25 21:13:12,617 DEBUG protocol 22216 12732 < TEXT '[{"ev":"status","status":"success","message":"s...ribed to: XT.BTC-USD"}]' [74 bytes]
2023-06-25 21:13:12,617 DEBUG __init__ 22216 12732 status: subscribed to: XT.BTC-USD
2023-06-25 21:13:12,792 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30364.2,"t":16...":1,"r":1687716793117}]' [123 bytes]
2023-06-25 21:13:12,824 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30366,"t":1687...":6,"r":1687716793150}]' [121 bytes]
2023-06-25 21:13:12,829 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30364.19,"t":1...":1,"r":1687716793155}]' [121 bytes]
2023-06-25 21:13:12,834 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30367,"t":1687...":6,"r":1687716793159}]' [121 bytes]
2023-06-25 21:13:13,046 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30363.39,"t":1...":1,"r":1687716793372}]' [124 bytes]
2023-06-25 21:13:13,112 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30363.39,"t":1...":1,"r":1687716793438}]' [120 bytes]
2023-06-25 21:13:13,148 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30362.24,"t":1...":1,"r":1687716793475}]' [124 bytes]
2023-06-25 21:13:13,213 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30363.39,"t":1...":1,"r":1687716793539}]' [120 bytes]
2023-06-25 21:13:13,456 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30364.19,"t":1...":1,"r":1687716793782}]' [118 bytes]
2023-06-25 21:13:13,491 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30366.02,"t":1...":1,"r":1687716793816}]' [119 bytes]
2023-06-25 21:13:13,777 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30369.13,"t":1...":1,"r":1687716794103}]' [118 bytes]
2023-06-25 21:13:13,777 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30369.12,"t":1...":1,"r":1687716794103}]' [118 bytes]
2023-06-25 21:13:14,166 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30366.89,"t":1...":1,"r":1687716794492}]' [124 bytes]
2023-06-25 21:13:14,272 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30368.66,"t":1...":1,"r":1687716794597}]' [123 bytes]
2023-06-25 21:13:16,134 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30365.45,"t":1...":1,"r":1687716796460}]' [123 bytes]
2023-06-25 21:13:16,407 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30366.22,"t":1...":1,"r":1687716796732}]' [124 bytes]
2023-06-25 21:13:16,485 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30365.45,"t":1...":1,"r":1687716796812}]' [124 bytes]
2023-06-25 21:13:16,559 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30365.35,"t":1...":1,"r":1687716796885}]' [121 bytes]
2023-06-25 21:13:16,714 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30365.36,"t":1...":1,"r":1687716797040}]' [124 bytes]
2023-06-25 21:13:16,742 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30365.36,"t":1...":1,"r":1687716797068}]' [124 bytes]
2023-06-25 21:13:17,213 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390,"t":1687...":2,"r":1687716797539}]' [117 bytes]
2023-06-25 21:13:17,261 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390,"t":1687...":2,"r":1687716797588}]' [117 bytes]
2023-06-25 21:13:17,415 DEBUG protocol 22216 12732 < PING '' [0 bytes]
2023-06-25 21:13:17,415 DEBUG protocol 22216 12732 > PONG '' [0 bytes]
2023-06-25 21:13:18,438 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30365.36,"t":1...":1,"r":1687716798763}]' [124 bytes]
2023-06-25 21:13:19,032 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30365.35,"t":1...":1,"r":1687716799358}]' [122 bytes]
2023-06-25 21:13:19,032 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30365.35,"t":1...":1,"r":1687716799358}]' [124 bytes]
2023-06-25 21:13:19,126 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30365.05,"t":1...":1,"r":1687716799452}]' [124 bytes]
2023-06-25 21:13:19,603 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30352,"t":1687...:23,"r":1687716799929}]' [143 bytes]
2023-06-25 21:13:19,869 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391,"t":1687...":2,"r":1687716800196}]' [116 bytes]
2023-06-25 21:13:19,948 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391,"t":1687...":2,"r":1687716800275}]' [116 bytes]
2023-06-25 21:13:19,965 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30364.95,"t":1...":1,"r":1687716800290}]' [124 bytes]
2023-06-25 21:13:19,976 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30364.95,"t":1...":1,"r":1687716800302}]' [242 bytes]
2023-06-25 21:13:20,554 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30362.62,"t":1...":1,"r":1687716800879}]' [123 bytes]
2023-06-25 21:13:20,588 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30362.62,"t":1...":1,"r":1687716800914}]' [124 bytes]
2023-06-25 21:13:20,940 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30352.1,"t":16...:23,"r":1687716801266}]' [151 bytes]
2023-06-25 21:13:21,319 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30363.83,"t":1...":1,"r":1687716801645}]' [118 bytes]
2023-06-25 21:13:21,320 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30363.83,"t":1...":1,"r":1687716801645}]' [368 bytes]
2023-06-25 21:13:21,405 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30364.54,"t":1...":1,"r":1687716801732}]' [121 bytes]
2023-06-25 21:13:21,417 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30365.19,"t":1...":1,"r":1687716801744}]' [124 bytes]
2023-06-25 21:13:22,104 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30367.21,"t":1...":1,"r":1687716802430}]' [124 bytes]
2023-06-25 21:13:22,206 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30367.22,"t":1...":1,"r":1687716802531}]' [124 bytes]
2023-06-25 21:13:22,206 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30367.23,"t":1...":1,"r":1687716802531}]' [362 bytes]
2023-06-25 21:13:22,415 DEBUG protocol 22216 12732 < PING '' [0 bytes]
2023-06-25 21:13:22,415 DEBUG protocol 22216 12732 > PONG '' [0 bytes]
2023-06-25 21:13:22,578 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30365.58,"t":1...":1,"r":1687716802904}]' [124 bytes]
2023-06-25 21:13:22,661 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30367.31,"t":1...":1,"r":1687716802984}]' [123 bytes]
2023-06-25 21:13:24,095 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30370.73,"t":1...":1,"r":1687716804422}]' [121 bytes]
2023-06-25 21:13:24,416 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30367.54,"t":1...":1,"r":1687716804742}]' [124 bytes]
2023-06-25 21:13:24,713 DEBUG protocol 22216 12732 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390,"t":1687...":2,"r":1687716805039}]' [120 bytes]
2023-06-25 21:14:40,388 INFO autoreload 19360 16408 Watching for file changes with StatReloader
2023-06-25 21:14:40,616 DEBUG proactor_events 19360 9324 Using proactor: IocpProactor
2023-06-25 21:14:40,619 DEBUG __init__ 19360 9324 connect: wss://socket.polygon.io/crypto
2023-06-25 21:14:40,787 DEBUG protocol 19360 9324 = connection is CONNECTING
2023-06-25 21:14:40,894 DEBUG client 19360 9324 > GET /crypto HTTP/1.1
2023-06-25 21:14:40,894 DEBUG client 19360 9324 > Host: socket.polygon.io
2023-06-25 21:14:40,894 DEBUG client 19360 9324 > Upgrade: websocket
2023-06-25 21:14:40,894 DEBUG client 19360 9324 > Connection: Upgrade
2023-06-25 21:14:40,894 DEBUG client 19360 9324 > Sec-WebSocket-Key: VFNGPTZn0ZvK1Ad/svBFSg==
2023-06-25 21:14:40,894 DEBUG client 19360 9324 > Sec-WebSocket-Version: 13
2023-06-25 21:14:40,894 DEBUG client 19360 9324 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:14:40,894 DEBUG client 19360 9324 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:14:41,097 DEBUG client 19360 9324 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:14:41,097 DEBUG client 19360 9324 < Server: nginx/1.19.2
2023-06-25 21:14:41,097 DEBUG client 19360 9324 < Date: Sun, 25 Jun 2023 18:14:41 GMT
2023-06-25 21:14:41,097 DEBUG client 19360 9324 < Connection: upgrade
2023-06-25 21:14:41,097 DEBUG client 19360 9324 < Upgrade: websocket
2023-06-25 21:14:41,097 DEBUG client 19360 9324 < Sec-WebSocket-Accept: lGL8qHGBWxcqjuWZSzOFpn7XWOg=
2023-06-25 21:14:41,097 DEBUG client 19360 9324 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:14:41,097 DEBUG protocol 19360 9324 = connection is OPEN
2023-06-25 21:14:41,098 DEBUG protocol 19360 9324 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:14:41,098 DEBUG __init__ 19360 9324 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:14:41,098 DEBUG __init__ 19360 9324 authing...
2023-06-25 21:14:41,099 DEBUG protocol 19360 9324 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:14:41,203 DEBUG protocol 19360 9324 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:14:41,203 DEBUG __init__ 19360 9324 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:14:41,204 DEBUG __init__ 19360 9324 reconciling: set() {'XT.BTC-USD'}
2023-06-25 21:14:41,204 DEBUG __init__ 19360 9324 subbing: XT.BTC-USD
2023-06-25 21:14:41,204 DEBUG protocol 19360 9324 > TEXT '{"action": "subscribe", "params": "XT.BTC-USD"}' [47 bytes]
2023-06-25 21:14:41,307 DEBUG protocol 19360 9324 < TEXT '[{"ev":"status","status":"success","message":"s...ribed to: XT.BTC-USD"}]' [74 bytes]
2023-06-25 21:14:41,307 DEBUG __init__ 19360 9324 status: subscribed to: XT.BTC-USD
2023-06-25 21:14:41,357 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413,"t":1687...":2,"r":1687716881685}]' [117 bytes]
2023-06-25 21:14:41,358 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415,"t":1687...":2,"r":1687716881685}]' [117 bytes]
2023-06-25 21:14:41,383 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.19,"t":1...":1,"r":1687716881711}]' [122 bytes]
2023-06-25 21:14:41,385 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.65,"t":1...":1,"r":1687716881712}]' [362 bytes]
2023-06-25 21:14:41,410 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415,"t":1687...":2,"r":1687716881738}]' [117 bytes]
2023-06-25 21:14:41,411 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413,"t":1687...":2,"r":1687716881738}]' [117 bytes]
2023-06-25 21:14:41,413 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.72,"t":1...":1,"r":1687716881741}]' [124 bytes]
2023-06-25 21:14:42,066 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30368.2,"t":16...:23,"r":1687716882394}]' [298 bytes]
2023-06-25 21:14:42,251 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.59,"t":1...":1,"r":1687716882579}]' [124 bytes]
2023-06-25 21:14:42,294 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.59,"t":1...":1,"r":1687716882622}]' [124 bytes]
2023-06-25 21:14:42,295 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.63,"t":1...":1,"r":1687716882622}]' [124 bytes]
2023-06-25 21:14:42,382 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30368.2,"t":16...:23,"r":1687716882710}]' [151 bytes]
2023-06-25 21:14:42,382 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30368.6,"t":16...:23,"r":1687716882710}]' [148 bytes]
2023-06-25 21:14:42,813 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380,"t":1687...:23,"r":1687716883141}]' [149 bytes]
2023-06-25 21:14:42,961 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379.9,"t":16...:23,"r":1687716883289}]' [151 bytes]
2023-06-25 21:14:43,041 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.53,"t":1...":1,"r":1687716883369}]' [124 bytes]
2023-06-25 21:14:43,206 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.47,"t":1...":1,"r":1687716883534}]' [124 bytes]
2023-06-25 21:14:43,304 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379.9,"t":16...:23,"r":1687716883633}]' [150 bytes]
2023-06-25 21:14:43,531 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.11,"t":1...":1,"r":1687716883859}]' [123 bytes]
2023-06-25 21:14:43,625 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379.9,"t":16...:23,"r":1687716883952}]' [151 bytes]
2023-06-25 21:14:43,921 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379.9,"t":16...:23,"r":1687716884249}]' [151 bytes]
2023-06-25 21:14:43,922 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379.9,"t":16...:23,"r":1687716884249}]' [301 bytes]
2023-06-25 21:14:44,222 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379.9,"t":16...:23,"r":1687716884550}]' [151 bytes]
2023-06-25 21:14:44,951 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379.9,"t":16...:23,"r":1687716885280}]' [151 bytes]
2023-06-25 21:14:46,097 DEBUG protocol 19360 9324 < PING '' [0 bytes]
2023-06-25 21:14:46,097 DEBUG protocol 19360 9324 > PONG '' [0 bytes]
2023-06-25 21:14:46,130 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.23,"t":1...":1,"r":1687716886459}]' [122 bytes]
2023-06-25 21:14:46,130 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.24,"t":1...":1,"r":1687716886459}]' [124 bytes]
2023-06-25 21:14:46,375 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.47,"t":1...":1,"r":1687716886703}]' [122 bytes]
2023-06-25 21:14:46,376 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.59,"t":1...":1,"r":1687716886703}]' [124 bytes]
2023-06-25 21:14:46,397 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.59,"t":1...":1,"r":1687716886726}]' [124 bytes]
2023-06-25 21:14:46,427 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400,"t":1687...":6,"r":1687716886756}]' [121 bytes]
2023-06-25 21:14:46,430 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.59,"t":1...":1,"r":1687716886759}]' [121 bytes]
2023-06-25 21:14:47,141 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404,"t":1687...":6,"r":1687716887470}]' [121 bytes]
2023-06-25 21:14:47,397 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.85,"t":1...":1,"r":1687716887725}]' [124 bytes]
2023-06-25 21:14:47,397 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.19,"t":1...":1,"r":1687716887725}]' [124 bytes]
2023-06-25 21:14:47,494 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.19,"t":1...":1,"r":1687716887822}]' [124 bytes]
2023-06-25 21:14:47,500 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380,"t":1687...:23,"r":1687716887829}]' [147 bytes]
2023-06-25 21:14:47,524 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419,"t":1687...":2,"r":1687716887853}]' [116 bytes]
2023-06-25 21:14:47,581 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419,"t":1687...":2,"r":1687716887910}]' [116 bytes]
2023-06-25 21:14:47,831 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.18,"t":1...":1,"r":1687716888159}]' [118 bytes]
2023-06-25 21:14:47,831 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.18,"t":1...":1,"r":1687716888159}]' [241 bytes]
2023-06-25 21:14:47,972 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.18,"t":1...":1,"r":1687716888300}]' [244 bytes]
2023-06-25 21:14:48,097 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418,"t":1687...":2,"r":1687716888425}]' [117 bytes]
2023-06-25 21:14:48,151 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418,"t":1687...":2,"r":1687716888470}]' [117 bytes]
2023-06-25 21:14:48,885 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.14,"t":1...":1,"r":1687716889212}]' [123 bytes]
2023-06-25 21:14:49,525 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380.4,"t":16...:23,"r":1687716889854}]' [149 bytes]
2023-06-25 21:14:49,590 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380.8,"t":16...:23,"r":1687716889919}]' [149 bytes]
2023-06-25 21:14:51,098 DEBUG protocol 19360 9324 < PING '' [0 bytes]
2023-06-25 21:14:51,098 DEBUG protocol 19360 9324 > PONG '' [0 bytes]
2023-06-25 21:14:51,203 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.34,"t":1...":1,"r":1687716891531}]' [118 bytes]
2023-06-25 21:14:51,204 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.33,"t":1...":1,"r":1687716891531}]' [247 bytes]
2023-06-25 21:14:51,275 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.46,"t":1...":1,"r":1687716891603}]' [124 bytes]
2023-06-25 21:14:52,178 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.04,"t":1...":1,"r":1687716892507}]' [124 bytes]
2023-06-25 21:14:52,315 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.2,"t":16...:23,"r":1687716892644}]' [297 bytes]
2023-06-25 21:14:52,671 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421,"t":1687...":2,"r":1687716893001}]' [117 bytes]
2023-06-25 21:14:52,744 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421,"t":1687...":2,"r":1687716893073}]' [117 bytes]
2023-06-25 21:14:53,768 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.07,"t":1...":1,"r":1687716894097}]' [122 bytes]
2023-06-25 21:14:54,400 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.08,"t":1...":1,"r":1687716894728}]' [121 bytes]
2023-06-25 21:14:54,400 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.08,"t":1...":1,"r":1687716894729}]' [122 bytes]
2023-06-25 21:14:54,401 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.07,"t":1...":1,"r":1687716894729}]' [124 bytes]
2023-06-25 21:14:54,436 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.42,"t":1...":1,"r":1687716894764}]' [124 bytes]
2023-06-25 21:14:54,437 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.41,"t":1...":1,"r":1687716894764}]' [246 bytes]
2023-06-25 21:14:54,602 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.43,"t":1...":1,"r":1687716894931}]' [124 bytes]
2023-06-25 21:14:55,944 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.86,"t":1...":1,"r":1687716896273}]' [124 bytes]
2023-06-25 21:14:55,948 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.86,"t":1...":1,"r":1687716896277}]' [124 bytes]
2023-06-25 21:14:56,096 DEBUG protocol 19360 9324 < PING '' [0 bytes]
2023-06-25 21:14:56,096 DEBUG protocol 19360 9324 > PONG '' [0 bytes]
2023-06-25 21:14:56,269 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.42,"t":1...":1,"r":1687716896598}]' [123 bytes]
2023-06-25 21:14:57,235 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.49,"t":1...":1,"r":1687716897563}]' [123 bytes]
2023-06-25 21:14:57,248 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.73,"t":1...":1,"r":1687716897576}]' [123 bytes]
2023-06-25 21:14:57,807 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.79,"t":1...":1,"r":1687716898135}]' [124 bytes]
2023-06-25 21:14:57,807 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.78,"t":1...":1,"r":1687716898135}]' [484 bytes]
2023-06-25 21:14:59,170 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.41,"t":1...":1,"r":1687716899498}]' [124 bytes]
2023-06-25 21:14:59,408 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.87,"t":1...":1,"r":1687716899737}]' [118 bytes]
2023-06-25 21:14:59,409 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.13,"t":1...":1,"r":1687716899737}]' [724 bytes]
2023-06-25 21:14:59,445 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.97,"t":1...":1,"r":1687716899774}]' [123 bytes]
2023-06-25 21:15:00,521 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30422,"t":1687...":2,"r":1687716900850}]' [243 bytes]
2023-06-25 21:15:00,530 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30420,"t":1687...":2,"r":1687716900860}]' [122 bytes]
2023-06-25 21:15:00,549 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.8,"t":16...:23,"r":1687716900878}]' [148 bytes]
2023-06-25 21:15:00,579 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30420,"t":1687...":2,"r":1687716900908}]' [122 bytes]
2023-06-25 21:15:00,591 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30422,"t":1687...":2,"r":1687716900921}]' [122 bytes]
2023-06-25 21:15:00,592 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30422,"t":1687...":2,"r":1687716900921}]' [122 bytes]
2023-06-25 21:15:00,641 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.53,"t":1...":1,"r":1687716900970}]' [124 bytes]
2023-06-25 21:15:00,735 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.55,"t":1...":1,"r":1687716901062}]' [122 bytes]
2023-06-25 21:15:00,735 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.55,"t":1...":1,"r":1687716901062}]' [124 bytes]
2023-06-25 21:15:00,844 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.03,"t":1...":1,"r":1687716901173}]' [120 bytes]
2023-06-25 21:15:01,096 DEBUG protocol 19360 9324 < PING '' [0 bytes]
2023-06-25 21:15:01,096 DEBUG protocol 19360 9324 > PONG '' [0 bytes]
2023-06-25 21:15:01,096 DEBUG protocol 19360 9324 % sending keepalive ping
2023-06-25 21:15:01,097 DEBUG protocol 19360 9324 > PING 'y\x8fp' [text, 4 bytes]
2023-06-25 21:15:01,302 DEBUG protocol 19360 9324 < PONG 'y\x8fp' [text, 4 bytes]
2023-06-25 21:15:01,303 DEBUG protocol 19360 9324 % received keepalive pong
2023-06-25 21:15:01,805 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.9,"t":16...":1,"r":1687716902134}]' [122 bytes]
2023-06-25 21:15:02,081 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.8,"t":16...:23,"r":1687716902409}]' [150 bytes]
2023-06-25 21:15:02,081 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.9,"t":16...:23,"r":1687716902409}]' [151 bytes]
2023-06-25 21:15:02,671 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.93,"t":1...":1,"r":1687716903000}]' [123 bytes]
2023-06-25 21:15:02,691 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.92,"t":1...":1,"r":1687716903020}]' [124 bytes]
2023-06-25 21:15:02,801 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.91,"t":1...":1,"r":1687716903129}]' [118 bytes]
2023-06-25 21:15:02,801 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.92,"t":1...":1,"r":1687716903129}]' [362 bytes]
2023-06-25 21:15:02,821 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.3,"t":16...:23,"r":1687716903150}]' [151 bytes]
2023-06-25 21:15:03,082 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.5,"t":16...":1,"r":1687716903411}]' [123 bytes]
2023-06-25 21:15:04,327 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.07,"t":1...":1,"r":1687716904655}]' [124 bytes]
2023-06-25 21:15:05,123 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.27,"t":1...":1,"r":1687716905452}]' [124 bytes]
2023-06-25 21:15:05,133 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408,"t":1687...":6,"r":1687716905462}]' [116 bytes]
2023-06-25 21:15:05,150 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408,"t":1687...":6,"r":1687716905479}]' [121 bytes]
2023-06-25 21:15:05,153 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408,"t":1687...":6,"r":1687716905482}]' [121 bytes]
2023-06-25 21:15:05,722 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.78,"t":1...":1,"r":1687716906050}]' [123 bytes]
2023-06-25 21:15:05,745 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.78,"t":1...":1,"r":1687716906074}]' [122 bytes]
2023-06-25 21:15:05,805 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.34,"t":1...":1,"r":1687716906133}]' [118 bytes]
2023-06-25 21:15:05,805 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.33,"t":1...":1,"r":1687716906133}]' [124 bytes]
2023-06-25 21:15:05,889 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.3,"t":16...:23,"r":1687716906218}]' [151 bytes]
2023-06-25 21:15:06,096 DEBUG protocol 19360 9324 < PING '' [0 bytes]
2023-06-25 21:15:06,096 DEBUG protocol 19360 9324 > PONG '' [0 bytes]
2023-06-25 21:15:06,306 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.4,"t":16...":1,"r":1687716906635}]' [119 bytes]
2023-06-25 21:15:06,313 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.4,"t":16...":1,"r":1687716906641}]' [121 bytes]
2023-06-25 21:15:06,928 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.42,"t":1...":1,"r":1687716907257}]' [124 bytes]
2023-06-25 21:15:07,366 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.52,"t":1...":1,"r":1687716907693}]' [121 bytes]
2023-06-25 21:15:07,410 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.52,"t":1...":1,"r":1687716907738}]' [122 bytes]
2023-06-25 21:15:08,031 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.37,"t":1...":1,"r":1687716908360}]' [124 bytes]
2023-06-25 21:15:08,276 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.03,"t":1...":1,"r":1687716908604}]' [124 bytes]
2023-06-25 21:15:08,602 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.55,"t":1...":1,"r":1687716908931}]' [124 bytes]
2023-06-25 21:15:08,602 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.55,"t":1...":1,"r":1687716908931}]' [363 bytes]
2023-06-25 21:15:08,604 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.83,"t":1...":1,"r":1687716908931}]' [241 bytes]
2023-06-25 21:15:10,042 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414,"t":1687...":2,"r":1687716910371}]' [117 bytes]
2023-06-25 21:15:10,101 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414,"t":1687...":2,"r":1687716910431}]' [117 bytes]
2023-06-25 21:15:10,394 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.59,"t":1...":1,"r":1687716910721}]' [124 bytes]
2023-06-25 21:15:10,550 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.8,"t":16...":1,"r":1687716910878}]' [123 bytes]
2023-06-25 21:15:10,650 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.71,"t":1...":1,"r":1687716910978}]' [124 bytes]
2023-06-25 21:15:11,097 DEBUG protocol 19360 9324 < PING '' [0 bytes]
2023-06-25 21:15:11,097 DEBUG protocol 19360 9324 > PONG '' [0 bytes]
2023-06-25 21:15:11,718 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.56,"t":1...":1,"r":1687716912047}]' [123 bytes]
2023-06-25 21:15:11,741 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.44,"t":1...":1,"r":1687716912071}]' [119 bytes]
2023-06-25 21:15:11,742 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.44,"t":1...":1,"r":1687716912071}]' [366 bytes]
2023-06-25 21:15:12,019 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.54,"t":1...":1,"r":1687716912345}]' [124 bytes]
2023-06-25 21:15:12,231 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.53,"t":1...":1,"r":1687716912558}]' [123 bytes]
2023-06-25 21:15:12,420 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.54,"t":1...":1,"r":1687716912749}]' [124 bytes]
2023-06-25 21:15:12,566 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397,"t":1687...":6,"r":1687716912895}]' [120 bytes]
2023-06-25 21:15:12,738 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.46,"t":1...":1,"r":1687716913067}]' [124 bytes]
2023-06-25 21:15:12,950 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.43,"t":1...":1,"r":1687716913278}]' [124 bytes]
2023-06-25 21:15:13,258 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413,"t":1687...":2,"r":1687716913489}]' [117 bytes]
2023-06-25 21:15:13,259 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413,"t":1687...":2,"r":1687716913489}]' [117 bytes]
2023-06-25 21:15:13,262 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413,"t":1687...":2,"r":1687716913560}]' [233 bytes]
2023-06-25 21:15:13,439 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30384.9,"t":16...:23,"r":1687716913767}]' [147 bytes]
2023-06-25 21:15:13,494 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397.34,"t":1...":1,"r":1687716913822}]' [118 bytes]
2023-06-25 21:15:13,494 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397.35,"t":1...":1,"r":1687716913823}]' [847 bytes]
2023-06-25 21:15:13,495 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.24,"t":1...":1,"r":1687716913824}]' [241 bytes]
2023-06-25 21:15:13,496 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.38,"t":1...":1,"r":1687716913824}]' [601 bytes]
2023-06-25 21:15:13,496 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.01,"t":1...":1,"r":1687716913825}]' [124 bytes]
2023-06-25 21:15:13,496 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.06,"t":1...":1,"r":1687716913825}]' [118 bytes]
2023-06-25 21:15:13,496 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.09,"t":1...":1,"r":1687716913825}]' [124 bytes]
2023-06-25 21:15:14,276 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.79,"t":1...":1,"r":1687716914605}]' [124 bytes]
2023-06-25 21:15:14,277 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.86,"t":1...":1,"r":1687716914605}]' [360 bytes]
2023-06-25 21:15:14,280 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.68,"t":1...":1,"r":1687716914609}]' [122 bytes]
2023-06-25 21:15:14,306 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.16,"t":1...":1,"r":1687716914634}]' [124 bytes]
2023-06-25 21:15:14,332 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.89,"t":1...":1,"r":1687716914661}]' [124 bytes]
2023-06-25 21:15:14,333 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.94,"t":1...":1,"r":1687716914661}]' [123 bytes]
2023-06-25 21:15:14,836 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.8,"t":16...":1,"r":1687716915165}]' [122 bytes]
2023-06-25 21:15:15,008 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.88,"t":1...":1,"r":1687716915335}]' [123 bytes]
2023-06-25 21:15:16,096 DEBUG protocol 19360 9324 < PING '' [0 bytes]
2023-06-25 21:15:16,096 DEBUG protocol 19360 9324 > PONG '' [0 bytes]
2023-06-25 21:15:16,663 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.12,"t":1...":1,"r":1687716916992}]' [123 bytes]
2023-06-25 21:15:16,703 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.12,"t":1...":1,"r":1687716917030}]' [124 bytes]
2023-06-25 21:15:17,228 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.93,"t":1...":1,"r":1687716917558}]' [123 bytes]
2023-06-25 21:15:17,357 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.93,"t":1...":1,"r":1687716917686}]' [121 bytes]
2023-06-25 21:15:17,492 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.93,"t":1...":1,"r":1687716917821}]' [122 bytes]
2023-06-25 21:15:17,493 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.7,"t":16...":1,"r":1687716917821}]' [121 bytes]
2023-06-25 21:15:17,677 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30384.9,"t":16...:23,"r":1687716918006}]' [151 bytes]
2023-06-25 21:15:17,960 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.04,"t":1...":1,"r":1687716918288}]' [122 bytes]
2023-06-25 21:15:17,966 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.03,"t":1...":1,"r":1687716918288}]' [840 bytes]
2023-06-25 21:15:17,966 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.95,"t":1...":1,"r":1687716918292}]' [122 bytes]
2023-06-25 21:15:17,966 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.92,"t":1...":1,"r":1687716918292}]' [245 bytes]
2023-06-25 21:15:18,082 DEBUG proactor_events 10492 10800 Using proactor: IocpProactor
2023-06-25 21:15:18,085 DEBUG __init__ 10492 10800 connect: wss://socket.polygon.io/crypto
2023-06-25 21:15:18,103 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.53,"t":1...":1,"r":1687716918432}]' [124 bytes]
2023-06-25 21:15:18,107 DEBUG functional 10492 16468 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-25 21:15:18,108 DEBUG functional 10492 16468 
def backend_cleanup():
    return 1

2023-06-25 21:15:18,108 DEBUG functional 10492 16468 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-25 21:15:18,109 DEBUG functional 10492 16468 
def xmap(task, it):
    return 1

2023-06-25 21:15:18,109 DEBUG functional 10492 16468 
def chain(*args, **kwargs):
    return 1

2023-06-25 21:15:18,109 DEBUG functional 10492 16468 
def debug_task(self):
    return 1

2023-06-25 21:15:18,110 DEBUG functional 10492 16468 
def xstarmap(task, it):
    return 1

2023-06-25 21:15:18,110 DEBUG functional 10492 16468 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-25 21:15:18,110 DEBUG functional 10492 16468 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-25 21:15:18,111 DEBUG functional 10492 16468 
def chunks(task, it, n):
    return 1

2023-06-25 21:15:18,111 DEBUG functional 10492 16468 
def get_current_buy_price(symbol):
    return 1

2023-06-25 21:15:18,134 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.53,"t":1...":1,"r":1687716918463}]' [124 bytes]
2023-06-25 21:15:18,135 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.4,"t":16...":1,"r":1687716918463}]' [243 bytes]
2023-06-25 21:15:18,869 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.46,"t":1...":1,"r":1687716919197}]' [124 bytes]
2023-06-25 21:15:19,793 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.49,"t":1...":1,"r":1687716920121}]' [122 bytes]
2023-06-25 21:15:20,034 DEBUG proactor_events 6328 13280 Using proactor: IocpProactor
2023-06-25 21:15:20,036 DEBUG proactor_events 22164 14224 Using proactor: IocpProactor
2023-06-25 21:15:20,037 DEBUG __init__ 6328 13280 connect: wss://socket.polygon.io/crypto
2023-06-25 21:15:20,039 DEBUG __init__ 22164 14224 connect: wss://socket.polygon.io/crypto
2023-06-25 21:15:20,098 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.91,"t":1...":1,"r":1687716920427}]' [124 bytes]
2023-06-25 21:15:20,547 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.45,"t":1...":1,"r":1687716920875}]' [124 bytes]
2023-06-25 21:15:21,096 DEBUG protocol 19360 9324 < PING '' [0 bytes]
2023-06-25 21:15:21,097 DEBUG protocol 19360 9324 > PONG '' [0 bytes]
2023-06-25 21:15:21,244 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.45,"t":1...":1,"r":1687716921572}]' [124 bytes]
2023-06-25 21:15:21,308 DEBUG protocol 19360 9324 % sending keepalive ping
2023-06-25 21:15:21,308 DEBUG protocol 19360 9324 > PING c0 b9 e3 9b [binary, 4 bytes]
2023-06-25 21:15:21,410 DEBUG protocol 19360 9324 < PONG c0 b9 e3 9b [binary, 4 bytes]
2023-06-25 21:15:21,410 DEBUG protocol 19360 9324 % received keepalive pong
2023-06-25 21:15:21,782 DEBUG proactor_events 3276 16068 Using proactor: IocpProactor
2023-06-25 21:15:21,785 DEBUG __init__ 3276 16068 connect: wss://socket.polygon.io/crypto
2023-06-25 21:15:22,175 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30384.8,"t":16...:23,"r":1687716922504}]' [149 bytes]
2023-06-25 21:15:22,467 DEBUG protocol 19360 9324 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 21:15:22,467 DEBUG protocol 19360 9324 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:15:22,468 DEBUG protocol 19360 9324 = connection is CLOSING
2023-06-25 21:15:22,468 DEBUG protocol 19360 9324 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:15:22,468 DEBUG protocol 19360 9324 = connection is CLOSED
2023-06-25 21:15:22,468 DEBUG __init__ 19360 9324 status: Maximum number of connections exceeded.
2023-06-25 21:15:22,469 DEBUG protocol 19360 9324 x closing TCP connection
2023-06-25 21:15:22,469 DEBUG __init__ 19360 9324 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 21:15:22,574 DEBUG protocol 19360 9324 = connection is CONNECTING
2023-06-25 21:15:22,681 DEBUG client 19360 9324 > GET /crypto HTTP/1.1
2023-06-25 21:15:22,681 DEBUG client 19360 9324 > Host: socket.polygon.io
2023-06-25 21:15:22,681 DEBUG client 19360 9324 > Upgrade: websocket
2023-06-25 21:15:22,681 DEBUG client 19360 9324 > Connection: Upgrade
2023-06-25 21:15:22,681 DEBUG client 19360 9324 > Sec-WebSocket-Key: 3xxUUdXStqGb3KNvXfU6Ww==
2023-06-25 21:15:22,681 DEBUG client 19360 9324 > Sec-WebSocket-Version: 13
2023-06-25 21:15:22,681 DEBUG client 19360 9324 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:15:22,681 DEBUG client 19360 9324 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:15:22,886 DEBUG client 19360 9324 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:15:22,886 DEBUG client 19360 9324 < Server: nginx/1.19.2
2023-06-25 21:15:22,886 DEBUG client 19360 9324 < Date: Sun, 25 Jun 2023 18:15:23 GMT
2023-06-25 21:15:22,886 DEBUG client 19360 9324 < Connection: upgrade
2023-06-25 21:15:22,886 DEBUG client 19360 9324 < Upgrade: websocket
2023-06-25 21:15:22,886 DEBUG client 19360 9324 < Sec-WebSocket-Accept: btdNHu6IKDcw+HoqSUe2UJ332VI=
2023-06-25 21:15:22,886 DEBUG client 19360 9324 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:15:22,886 DEBUG protocol 19360 9324 = connection is OPEN
2023-06-25 21:15:22,887 DEBUG protocol 19360 9324 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:15:22,887 DEBUG __init__ 19360 9324 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:15:22,887 DEBUG __init__ 19360 9324 authing...
2023-06-25 21:15:22,888 DEBUG protocol 19360 9324 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:15:22,990 DEBUG protocol 19360 9324 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:15:22,990 DEBUG __init__ 19360 9324 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:15:22,990 DEBUG __init__ 19360 9324 reconciling: set() {'XT.BTC-USD'}
2023-06-25 21:15:22,990 DEBUG __init__ 19360 9324 subbing: XT.BTC-USD
2023-06-25 21:15:22,991 DEBUG protocol 19360 9324 > TEXT '{"action": "subscribe", "params": "XT.BTC-USD"}' [47 bytes]
2023-06-25 21:15:23,094 DEBUG protocol 19360 9324 < TEXT '[{"ev":"status","status":"success","message":"s...ribed to: XT.BTC-USD"}]' [74 bytes]
2023-06-25 21:15:23,094 DEBUG __init__ 19360 9324 status: subscribed to: XT.BTC-USD
2023-06-25 21:15:23,245 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.1,"t":16...:23,"r":1687716923575}]' [146 bytes]
2023-06-25 21:15:23,416 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.54,"t":1...":1,"r":1687716923745}]' [124 bytes]
2023-06-25 21:15:23,430 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.53,"t":1...":1,"r":1687716923759}]' [122 bytes]
2023-06-25 21:15:24,808 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.45,"t":1...":1,"r":1687716925137}]' [118 bytes]
2023-06-25 21:15:24,809 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.45,"t":1...":1,"r":1687716925137}]' [119 bytes]
2023-06-25 21:15:24,853 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.74,"t":1...":1,"r":1687716925182}]' [124 bytes]
2023-06-25 21:15:24,853 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.73,"t":1...":1,"r":1687716925183}]' [124 bytes]
2023-06-25 21:15:24,870 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.73,"t":1...":1,"r":1687716925200}]' [124 bytes]
2023-06-25 21:15:25,133 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.08,"t":1...":1,"r":1687716925462}]' [124 bytes]
2023-06-25 21:15:27,497 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.94,"t":1...":1,"r":1687716927826}]' [124 bytes]
2023-06-25 21:15:27,872 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.11,"t":1...":1,"r":1687716928201}]' [122 bytes]
2023-06-25 21:15:27,872 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.06,"t":1...":1,"r":1687716928201}]' [486 bytes]
2023-06-25 21:15:27,873 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.12,"t":1...":1,"r":1687716928201}]' [364 bytes]
2023-06-25 21:15:27,873 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.9,"t":16...":1,"r":1687716928201}]' [123 bytes]
2023-06-25 21:15:27,873 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.87,"t":1...":1,"r":1687716928201}]' [118 bytes]
2023-06-25 21:15:27,873 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.52,"t":1...":1,"r":1687716928201}]' [124 bytes]
2023-06-25 21:15:27,873 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.49,"t":1...":1,"r":1687716928201}]' [982 bytes]
2023-06-25 21:15:27,873 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.12,"t":1...":1,"r":1687716928202}]' [120 bytes]
2023-06-25 21:15:27,875 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.12,"t":1...":1,"r":1687716928204}]' [121 bytes]
2023-06-25 21:15:27,876 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.12,"t":1...":1,"r":1687716928204}]' [243 bytes]
2023-06-25 21:15:27,886 DEBUG protocol 19360 9324 < PING '' [0 bytes]
2023-06-25 21:15:27,886 DEBUG protocol 19360 9324 > PONG '' [0 bytes]
2023-06-25 21:15:28,030 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.96,"t":1...":1,"r":1687716928359}]' [118 bytes]
2023-06-25 21:15:28,516 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.83,"t":1...":1,"r":1687716928845}]' [121 bytes]
2023-06-25 21:15:29,476 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410,"t":1687...":6,"r":1687716929805}]' [121 bytes]
2023-06-25 21:15:29,487 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.3,"t":16...":1,"r":1687716929817}]' [122 bytes]
2023-06-25 21:15:29,646 DEBUG protocol 19360 9324 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 21:15:29,646 DEBUG protocol 19360 9324 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:15:29,646 DEBUG protocol 19360 9324 = connection is CLOSING
2023-06-25 21:15:29,646 DEBUG protocol 19360 9324 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:15:29,646 DEBUG protocol 19360 9324 = connection is CLOSED
2023-06-25 21:15:29,647 DEBUG __init__ 19360 9324 status: Maximum number of connections exceeded.
2023-06-25 21:15:29,647 DEBUG protocol 19360 9324 x closing TCP connection
2023-06-25 21:15:29,647 DEBUG __init__ 19360 9324 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 21:15:29,748 DEBUG protocol 19360 9324 = connection is CONNECTING
2023-06-25 21:15:29,849 DEBUG client 19360 9324 > GET /crypto HTTP/1.1
2023-06-25 21:15:29,850 DEBUG client 19360 9324 > Host: socket.polygon.io
2023-06-25 21:15:29,850 DEBUG client 19360 9324 > Upgrade: websocket
2023-06-25 21:15:29,850 DEBUG client 19360 9324 > Connection: Upgrade
2023-06-25 21:15:29,850 DEBUG client 19360 9324 > Sec-WebSocket-Key: CSkiP9rR6cW2/IogHfSupA==
2023-06-25 21:15:29,850 DEBUG client 19360 9324 > Sec-WebSocket-Version: 13
2023-06-25 21:15:29,850 DEBUG client 19360 9324 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:15:29,850 DEBUG client 19360 9324 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:15:30,050 DEBUG client 19360 9324 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:15:30,050 DEBUG client 19360 9324 < Server: nginx/1.19.2
2023-06-25 21:15:30,050 DEBUG client 19360 9324 < Date: Sun, 25 Jun 2023 18:15:30 GMT
2023-06-25 21:15:30,050 DEBUG client 19360 9324 < Connection: upgrade
2023-06-25 21:15:30,050 DEBUG client 19360 9324 < Upgrade: websocket
2023-06-25 21:15:30,050 DEBUG client 19360 9324 < Sec-WebSocket-Accept: wkmFKEfpl8bQyjFpQ3tWQwQXxN8=
2023-06-25 21:15:30,050 DEBUG client 19360 9324 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:15:30,051 DEBUG protocol 19360 9324 = connection is OPEN
2023-06-25 21:15:30,051 DEBUG protocol 19360 9324 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:15:30,051 DEBUG __init__ 19360 9324 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:15:30,051 DEBUG __init__ 19360 9324 authing...
2023-06-25 21:15:30,052 DEBUG protocol 19360 9324 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:15:30,150 DEBUG protocol 19360 9324 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:15:30,150 DEBUG __init__ 19360 9324 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:15:30,150 DEBUG __init__ 19360 9324 reconciling: set() {'XT.BTC-USD'}
2023-06-25 21:15:30,150 DEBUG __init__ 19360 9324 subbing: XT.BTC-USD
2023-06-25 21:15:30,151 DEBUG protocol 19360 9324 > TEXT '{"action": "subscribe", "params": "XT.BTC-USD"}' [47 bytes]
2023-06-25 21:15:30,249 DEBUG protocol 19360 9324 < TEXT '[{"ev":"status","status":"success","message":"s...ribed to: XT.BTC-USD"}]' [74 bytes]
2023-06-25 21:15:30,250 DEBUG __init__ 19360 9324 status: subscribed to: XT.BTC-USD
2023-06-25 21:15:30,495 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.62,"t":1...":1,"r":1687716930826}]' [124 bytes]
2023-06-25 21:15:30,564 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.14,"t":1...":1,"r":1687716930894}]' [124 bytes]
2023-06-25 21:15:30,890 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.36,"t":1...":1,"r":1687716931219}]' [123 bytes]
2023-06-25 21:15:31,216 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411,"t":1687...":6,"r":1687716931545}]' [121 bytes]
2023-06-25 21:15:31,229 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412,"t":1687...":6,"r":1687716931559}]' [120 bytes]
2023-06-25 21:15:31,231 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413,"t":1687...":6,"r":1687716931561}]' [121 bytes]
2023-06-25 21:15:31,284 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.18,"t":1...":1,"r":1687716931613}]' [121 bytes]
2023-06-25 21:15:31,344 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.23,"t":1...":1,"r":1687716931673}]' [121 bytes]
2023-06-25 21:15:31,494 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.37,"t":1...":1,"r":1687716931823}]' [121 bytes]
2023-06-25 21:15:31,743 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.13,"t":1...":1,"r":1687716932072}]' [124 bytes]
2023-06-25 21:15:31,751 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.13,"t":1...":1,"r":1687716932081}]' [124 bytes]
2023-06-25 21:15:31,766 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.13,"t":1...":1,"r":1687716932095}]' [124 bytes]
2023-06-25 21:15:32,095 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.94,"t":1...":1,"r":1687716932424}]' [124 bytes]
2023-06-25 21:15:32,177 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.22,"t":1...":1,"r":1687716932507}]' [124 bytes]
2023-06-25 21:15:32,194 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.79,"t":1...":1,"r":1687716932523}]' [124 bytes]
2023-06-25 21:15:32,200 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.79,"t":1...":1,"r":1687716932530}]' [124 bytes]
2023-06-25 21:15:32,222 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.79,"t":1...":1,"r":1687716932551}]' [124 bytes]
2023-06-25 21:15:32,232 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.79,"t":1...":1,"r":1687716932562}]' [124 bytes]
2023-06-25 21:15:32,244 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.22,"t":1...":1,"r":1687716932574}]' [124 bytes]
2023-06-25 21:15:32,253 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.22,"t":1...":1,"r":1687716932583}]' [124 bytes]
2023-06-25 21:15:32,254 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.22,"t":1...":1,"r":1687716932583}]' [124 bytes]
2023-06-25 21:15:32,271 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.22,"t":1...":1,"r":1687716932601}]' [124 bytes]
2023-06-25 21:15:32,310 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.2,"t":16...":1,"r":1687716932640}]' [123 bytes]
2023-06-25 21:15:32,316 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412,"t":1687...":6,"r":1687716932646}]' [121 bytes]
2023-06-25 21:15:32,326 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413,"t":1687...":6,"r":1687716932655}]' [121 bytes]
2023-06-25 21:15:32,360 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.2,"t":16...":1,"r":1687716932689}]' [123 bytes]
2023-06-25 21:15:32,360 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.22,"t":1...":1,"r":1687716932689}]' [724 bytes]
2023-06-25 21:15:32,377 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.34,"t":1...":1,"r":1687716932708}]' [124 bytes]
2023-06-25 21:15:32,388 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.35,"t":1...":1,"r":1687716932717}]' [124 bytes]
2023-06-25 21:15:32,398 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.42,"t":1...":1,"r":1687716932728}]' [124 bytes]
2023-06-25 21:15:32,410 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.43,"t":1...":1,"r":1687716932740}]' [124 bytes]
2023-06-25 21:15:32,411 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.42,"t":1...":1,"r":1687716932741}]' [124 bytes]
2023-06-25 21:15:32,422 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.42,"t":1...":1,"r":1687716932752}]' [121 bytes]
2023-06-25 21:15:32,890 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.09,"t":1...":1,"r":1687716933219}]' [123 bytes]
2023-06-25 21:15:33,644 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.2,"t":16...:23,"r":1687716933974}]' [149 bytes]
2023-06-25 21:15:34,530 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414.72,"t":1...":1,"r":1687716934859}]' [243 bytes]
2023-06-25 21:15:34,969 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30416.41,"t":1...":1,"r":1687716935298}]' [121 bytes]
2023-06-25 21:15:35,050 DEBUG protocol 19360 9324 < PING '' [0 bytes]
2023-06-25 21:15:35,050 DEBUG protocol 19360 9324 > PONG '' [0 bytes]
2023-06-25 21:15:35,609 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30416.42,"t":1...":1,"r":1687716935938}]' [124 bytes]
2023-06-25 21:15:35,626 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.28,"t":1...":1,"r":1687716935952}]' [121 bytes]
2023-06-25 21:15:35,627 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.28,"t":1...":1,"r":1687716935952}]' [490 bytes]
2023-06-25 21:15:35,696 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.96,"t":1...":1,"r":1687716936026}]' [118 bytes]
2023-06-25 21:15:35,960 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421.36,"t":1...":1,"r":1687716936166}]' [122 bytes]
2023-06-25 21:15:35,961 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421.37,"t":1...":1,"r":1687716936166}]' [122 bytes]
2023-06-25 21:15:35,961 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30422.2,"t":16...":1,"r":1687716936166}]' [123 bytes]
2023-06-25 21:15:35,961 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30423.1,"t":16...":1,"r":1687716936166}]' [123 bytes]
2023-06-25 21:15:35,963 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.2,"t":16...:23,"r":1687716936185}]' [151 bytes]
2023-06-25 21:15:35,965 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30420.81,"t":1...":1,"r":1687716936202}]' [123 bytes]
2023-06-25 21:15:36,295 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30420.78,"t":1...":1,"r":1687716936624}]' [124 bytes]
2023-06-25 21:15:36,764 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30420.76,"t":1...":1,"r":1687716937094}]' [124 bytes]
2023-06-25 21:15:36,974 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.89,"t":1...":1,"r":1687716937304}]' [124 bytes]
2023-06-25 21:15:37,344 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415.18,"t":1...":1,"r":1687716937673}]' [124 bytes]
2023-06-25 21:15:37,344 DEBUG protocol 19360 9324 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415.17,"t":1...":1,"r":1687716937673}]' [124 bytes]
2023-06-25 21:18:29,209 INFO autoreload 22444 5536 Watching for file changes with StatReloader
2023-06-25 21:18:29,433 DEBUG proactor_events 22444 22384 Using proactor: IocpProactor
2023-06-25 21:18:29,436 DEBUG __init__ 22444 22384 connect: wss://socket.polygon.io/crypto
2023-06-25 21:18:29,601 DEBUG protocol 22444 22384 = connection is CONNECTING
2023-06-25 21:18:29,706 DEBUG client 22444 22384 > GET /crypto HTTP/1.1
2023-06-25 21:18:29,706 DEBUG client 22444 22384 > Host: socket.polygon.io
2023-06-25 21:18:29,706 DEBUG client 22444 22384 > Upgrade: websocket
2023-06-25 21:18:29,707 DEBUG client 22444 22384 > Connection: Upgrade
2023-06-25 21:18:29,707 DEBUG client 22444 22384 > Sec-WebSocket-Key: yRureSC3aXFyZd0hicrVAQ==
2023-06-25 21:18:29,707 DEBUG client 22444 22384 > Sec-WebSocket-Version: 13
2023-06-25 21:18:29,707 DEBUG client 22444 22384 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:18:29,707 DEBUG client 22444 22384 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:18:29,909 DEBUG client 22444 22384 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:18:29,910 DEBUG client 22444 22384 < Server: nginx/1.19.2
2023-06-25 21:18:29,910 DEBUG client 22444 22384 < Date: Sun, 25 Jun 2023 18:18:30 GMT
2023-06-25 21:18:29,910 DEBUG client 22444 22384 < Connection: upgrade
2023-06-25 21:18:29,910 DEBUG client 22444 22384 < Upgrade: websocket
2023-06-25 21:18:29,910 DEBUG client 22444 22384 < Sec-WebSocket-Accept: ZadCrgbHBnYYNxFwPqM8VqLw0HA=
2023-06-25 21:18:29,910 DEBUG client 22444 22384 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:18:29,910 DEBUG protocol 22444 22384 = connection is OPEN
2023-06-25 21:18:29,910 DEBUG protocol 22444 22384 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:18:29,911 DEBUG __init__ 22444 22384 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:18:29,911 DEBUG __init__ 22444 22384 authing...
2023-06-25 21:18:29,911 DEBUG protocol 22444 22384 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:18:30,016 DEBUG protocol 22444 22384 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:18:30,016 DEBUG __init__ 22444 22384 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:18:30,016 DEBUG __init__ 22444 22384 reconciling: set() {'XT.BTC-USD'}
2023-06-25 21:18:30,017 DEBUG __init__ 22444 22384 subbing: XT.BTC-USD
2023-06-25 21:18:30,017 DEBUG protocol 22444 22384 > TEXT '{"action": "subscribe", "params": "XT.BTC-USD"}' [47 bytes]
2023-06-25 21:18:30,119 DEBUG protocol 22444 22384 < TEXT '[{"ev":"status","status":"success","message":"s...ribed to: XT.BTC-USD"}]' [74 bytes]
2023-06-25 21:18:30,119 DEBUG __init__ 22444 22384 status: subscribed to: XT.BTC-USD
2023-06-25 21:18:31,128 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30446.89,"t":1...":1,"r":1687717111461}]' [124 bytes]
2023-06-25 21:18:32,092 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30448.07,"t":1...":1,"r":1687717112425}]' [123 bytes]
2023-06-25 21:18:32,219 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30447.08,"t":1...":1,"r":1687717112553}]' [122 bytes]
2023-06-25 21:18:32,396 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30448.92,"t":1...":1,"r":1687717112730}]' [121 bytes]
2023-06-25 21:18:32,577 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30449.56,"t":1...":1,"r":1687717112910}]' [124 bytes]
2023-06-25 21:18:33,168 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30446.78,"t":1...":1,"r":1687717113501}]' [123 bytes]
2023-06-25 21:18:33,577 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30446.79,"t":1...":1,"r":1687717113911}]' [124 bytes]
2023-06-25 21:18:33,861 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30448.24,"t":1...":1,"r":1687717114195}]' [118 bytes]
2023-06-25 21:18:33,862 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30448.25,"t":1...":1,"r":1687717114195}]' [488 bytes]
2023-06-25 21:18:34,910 DEBUG protocol 22444 22384 < PING '' [0 bytes]
2023-06-25 21:18:34,910 DEBUG protocol 22444 22384 > PONG '' [0 bytes]
2023-06-25 21:18:34,951 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30447.97,"t":1...":1,"r":1687717115284}]' [123 bytes]
2023-06-25 21:18:35,376 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30425.6,"t":16...:23,"r":1687717115709}]' [151 bytes]
2023-06-25 21:18:35,777 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30444.5,"t":16...":1,"r":1687717116111}]' [237 bytes]
2023-06-25 21:18:35,801 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30444.04,"t":1...":1,"r":1687717116135}]' [124 bytes]
2023-06-25 21:18:35,803 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30443.99,"t":1...":1,"r":1687717116135}]' [124 bytes]
2023-06-25 21:18:35,807 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30443.99,"t":1...":1,"r":1687717116140}]' [124 bytes]
2023-06-25 21:18:37,957 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30443.24,"t":1...":1,"r":1687717118290}]' [121 bytes]
2023-06-25 21:18:38,185 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30441.53,"t":1...":1,"r":1687717118519}]' [124 bytes]
2023-06-25 21:18:38,240 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30440.24,"t":1...":1,"r":1687717118574}]' [122 bytes]
2023-06-25 21:18:39,911 DEBUG protocol 22444 22384 < PING '' [0 bytes]
2023-06-25 21:18:39,911 DEBUG protocol 22444 22384 > PONG '' [0 bytes]
2023-06-25 21:18:40,278 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30442.08,"t":1...":1,"r":1687717120612}]' [124 bytes]
2023-06-25 21:18:40,768 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30442.07,"t":1...":1,"r":1687717121103}]' [124 bytes]
2023-06-25 21:18:41,103 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30441.08,"t":1...":1,"r":1687717121437}]' [122 bytes]
2023-06-25 21:18:42,055 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30438.74,"t":1...":1,"r":1687717122389}]' [124 bytes]
2023-06-25 21:18:42,380 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30438.97,"t":1...":1,"r":1687717122715}]' [123 bytes]
2023-06-25 21:18:43,506 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30440.22,"t":1...":1,"r":1687717123840}]' [124 bytes]
2023-06-25 21:18:43,825 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30441.73,"t":1...":1,"r":1687717124159}]' [124 bytes]
2023-06-25 21:18:44,624 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30445.24,"t":1...":1,"r":1687717124959}]' [124 bytes]
2023-06-25 21:18:44,910 DEBUG protocol 22444 22384 < PING '' [0 bytes]
2023-06-25 21:18:44,910 DEBUG protocol 22444 22384 > PONG '' [0 bytes]
2023-06-25 21:18:45,229 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30446.3,"t":16...":1,"r":1687717125563}]' [123 bytes]
2023-06-25 21:18:45,296 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30444.58,"t":1...":1,"r":1687717125630}]' [124 bytes]
2023-06-25 21:18:45,297 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30444.57,"t":1...":1,"r":1687717125630}]' [120 bytes]
2023-06-25 21:18:45,364 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30444.59,"t":1...":1,"r":1687717125698}]' [123 bytes]
2023-06-25 21:18:45,882 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30442.1,"t":16...":1,"r":1687717126216}]' [122 bytes]
2023-06-25 21:18:46,393 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30459,"t":1687...":2,"r":1687717126728}]' [122 bytes]
2023-06-25 21:18:46,486 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30459,"t":1687...":2,"r":1687717126821}]' [122 bytes]
2023-06-25 21:18:48,010 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30446.78,"t":1...":1,"r":1687717128344}]' [122 bytes]
2023-06-25 21:18:48,011 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30447.46,"t":1...":1,"r":1687717128344}]' [368 bytes]
2023-06-25 21:18:48,070 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30447.47,"t":1...":1,"r":1687717128404}]' [124 bytes]
2023-06-25 21:18:48,333 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30448.26,"t":1...":1,"r":1687717128667}]' [124 bytes]
2023-06-25 21:18:48,764 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30448.24,"t":1...":1,"r":1687717129099}]' [122 bytes]
2023-06-25 21:18:48,765 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30448.25,"t":1...":1,"r":1687717129099}]' [361 bytes]
2023-06-25 21:18:49,771 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30448.42,"t":1...":1,"r":1687717130105}]' [124 bytes]
2023-06-25 21:18:49,910 DEBUG protocol 22444 22384 < PING '' [0 bytes]
2023-06-25 21:18:49,910 DEBUG protocol 22444 22384 > PONG '' [0 bytes]
2023-06-25 21:18:49,910 DEBUG protocol 22444 22384 % sending keepalive ping
2023-06-25 21:18:49,910 DEBUG protocol 22444 22384 > PING 5b b2 64 b7 [binary, 4 bytes]
2023-06-25 21:18:50,112 DEBUG protocol 22444 22384 < PONG 5b b2 64 b7 [binary, 4 bytes]
2023-06-25 21:18:50,113 DEBUG protocol 22444 22384 % received keepalive pong
2023-06-25 21:18:50,267 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30446.39,"t":1...":1,"r":1687717130601}]' [124 bytes]
2023-06-25 21:18:50,277 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30446.4,"t":16...":1,"r":1687717130611}]' [123 bytes]
2023-06-25 21:18:51,053 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30446.63,"t":1...":1,"r":1687717131387}]' [124 bytes]
2023-06-25 21:18:51,163 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30446.63,"t":1...":1,"r":1687717131497}]' [124 bytes]
2023-06-25 21:18:51,580 DEBUG proactor_events 11312 11000 Using proactor: IocpProactor
2023-06-25 21:18:51,583 DEBUG __init__ 11312 11000 connect: wss://socket.polygon.io/crypto
2023-06-25 21:18:51,607 DEBUG functional 11312 2600 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-25 21:18:51,608 DEBUG functional 11312 2600 
def backend_cleanup():
    return 1

2023-06-25 21:18:51,609 DEBUG functional 11312 2600 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-25 21:18:51,609 DEBUG functional 11312 2600 
def xmap(task, it):
    return 1

2023-06-25 21:18:51,610 DEBUG functional 11312 2600 
def chain(*args, **kwargs):
    return 1

2023-06-25 21:18:51,610 DEBUG functional 11312 2600 
def debug_task(self):
    return 1

2023-06-25 21:18:51,611 DEBUG functional 11312 2600 
def xstarmap(task, it):
    return 1

2023-06-25 21:18:51,611 DEBUG functional 11312 2600 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-25 21:18:51,611 DEBUG functional 11312 2600 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-25 21:18:51,612 DEBUG functional 11312 2600 
def chunks(task, it, n):
    return 1

2023-06-25 21:18:51,612 DEBUG functional 11312 2600 
def get_current_buy_price(symbol):
    return 1

2023-06-25 21:18:52,315 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30445.4,"t":16...":1,"r":1687717132649}]' [123 bytes]
2023-06-25 21:18:53,416 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30447.78,"t":1...":1,"r":1687717133751}]' [122 bytes]
2023-06-25 21:18:53,417 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30447.78,"t":1...":1,"r":1687717133751}]' [726 bytes]
2023-06-25 21:18:53,417 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30446.44,"t":1...":1,"r":1687717133751}]' [843 bytes]
2023-06-25 21:18:53,631 DEBUG proactor_events 13384 14840 Using proactor: IocpProactor
2023-06-25 21:18:53,634 DEBUG __init__ 13384 14840 connect: wss://socket.polygon.io/crypto
2023-06-25 21:18:53,642 DEBUG proactor_events 20056 18992 Using proactor: IocpProactor
2023-06-25 21:18:53,645 DEBUG __init__ 20056 18992 connect: wss://socket.polygon.io/crypto
2023-06-25 21:18:54,568 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30449.31,"t":1...":1,"r":1687717134902}]' [124 bytes]
2023-06-25 21:18:54,910 DEBUG protocol 22444 22384 < PING '' [0 bytes]
2023-06-25 21:18:54,910 DEBUG protocol 22444 22384 > PONG '' [0 bytes]
2023-06-25 21:18:55,100 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30449.28,"t":1...":1,"r":1687717135434}]' [124 bytes]
2023-06-25 21:18:55,291 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30449.44,"t":1...":1,"r":1687717135624}]' [124 bytes]
2023-06-25 21:18:55,364 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30449.44,"t":1...":1,"r":1687717135698}]' [124 bytes]
2023-06-25 21:18:55,374 DEBUG protocol 22444 22384 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 21:18:55,374 DEBUG protocol 22444 22384 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:18:55,374 DEBUG protocol 22444 22384 = connection is CLOSING
2023-06-25 21:18:55,374 DEBUG protocol 22444 22384 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:18:55,375 DEBUG protocol 22444 22384 = connection is CLOSED
2023-06-25 21:18:55,375 DEBUG __init__ 22444 22384 status: Maximum number of connections exceeded.
2023-06-25 21:18:55,375 DEBUG protocol 22444 22384 x closing TCP connection
2023-06-25 21:18:55,375 DEBUG __init__ 22444 22384 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 21:18:55,476 DEBUG protocol 22444 22384 = connection is CONNECTING
2023-06-25 21:18:55,506 DEBUG proactor_events 10708 20272 Using proactor: IocpProactor
2023-06-25 21:18:55,509 DEBUG __init__ 10708 20272 connect: wss://socket.polygon.io/crypto
2023-06-25 21:18:55,578 DEBUG client 22444 22384 > GET /crypto HTTP/1.1
2023-06-25 21:18:55,578 DEBUG client 22444 22384 > Host: socket.polygon.io
2023-06-25 21:18:55,578 DEBUG client 22444 22384 > Upgrade: websocket
2023-06-25 21:18:55,578 DEBUG client 22444 22384 > Connection: Upgrade
2023-06-25 21:18:55,578 DEBUG client 22444 22384 > Sec-WebSocket-Key: vBytga//aXW3nVzPv5pWrg==
2023-06-25 21:18:55,579 DEBUG client 22444 22384 > Sec-WebSocket-Version: 13
2023-06-25 21:18:55,579 DEBUG client 22444 22384 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:18:55,579 DEBUG client 22444 22384 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:18:55,777 DEBUG client 22444 22384 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:18:55,777 DEBUG client 22444 22384 < Server: nginx/1.19.2
2023-06-25 21:18:55,777 DEBUG client 22444 22384 < Date: Sun, 25 Jun 2023 18:18:56 GMT
2023-06-25 21:18:55,777 DEBUG client 22444 22384 < Connection: upgrade
2023-06-25 21:18:55,777 DEBUG client 22444 22384 < Upgrade: websocket
2023-06-25 21:18:55,777 DEBUG client 22444 22384 < Sec-WebSocket-Accept: O2sWX9FoNq+YHAp+KOcc2m2qHSk=
2023-06-25 21:18:55,777 DEBUG client 22444 22384 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:18:55,777 DEBUG protocol 22444 22384 = connection is OPEN
2023-06-25 21:18:55,778 DEBUG protocol 22444 22384 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:18:55,778 DEBUG __init__ 22444 22384 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:18:55,778 DEBUG __init__ 22444 22384 authing...
2023-06-25 21:18:55,778 DEBUG protocol 22444 22384 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:18:55,877 DEBUG protocol 22444 22384 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:18:55,877 DEBUG __init__ 22444 22384 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:18:55,877 DEBUG __init__ 22444 22384 reconciling: set() {'XT.BTC-USD'}
2023-06-25 21:18:55,878 DEBUG __init__ 22444 22384 subbing: XT.BTC-USD
2023-06-25 21:18:55,878 DEBUG protocol 22444 22384 > TEXT '{"action": "subscribe", "params": "XT.BTC-USD"}' [47 bytes]
2023-06-25 21:18:55,977 DEBUG protocol 22444 22384 < TEXT '[{"ev":"status","status":"success","message":"s...ribed to: XT.BTC-USD"}]' [74 bytes]
2023-06-25 21:18:55,977 DEBUG __init__ 22444 22384 status: subscribed to: XT.BTC-USD
2023-06-25 21:18:56,574 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30446.83,"t":1...":1,"r":1687717136903}]' [124 bytes]
2023-06-25 21:18:56,715 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30446.08,"t":1...":1,"r":1687717137048}]' [124 bytes]
2023-06-25 21:18:56,715 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30446.07,"t":1...":1,"r":1687717137048}]' [124 bytes]
2023-06-25 21:18:56,725 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30446.07,"t":1...":1,"r":1687717137060}]' [124 bytes]
2023-06-25 21:18:57,321 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30445.89,"t":1...":1,"r":1687717137655}]' [124 bytes]
2023-06-25 21:18:57,881 DEBUG proactor_events 20548 648 Using proactor: IocpProactor
2023-06-25 21:18:57,884 DEBUG __init__ 20548 648 connect: wss://socket.polygon.io/crypto
2023-06-25 21:18:58,317 DEBUG protocol 22444 22384 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 21:18:58,317 DEBUG protocol 22444 22384 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:18:58,317 DEBUG protocol 22444 22384 = connection is CLOSING
2023-06-25 21:18:58,317 DEBUG protocol 22444 22384 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:18:58,318 DEBUG protocol 22444 22384 = connection is CLOSED
2023-06-25 21:18:58,318 DEBUG __init__ 22444 22384 status: Maximum number of connections exceeded.
2023-06-25 21:18:58,319 DEBUG protocol 22444 22384 x closing TCP connection
2023-06-25 21:18:58,319 DEBUG __init__ 22444 22384 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 21:18:58,422 DEBUG protocol 22444 22384 = connection is CONNECTING
2023-06-25 21:18:58,528 DEBUG client 22444 22384 > GET /crypto HTTP/1.1
2023-06-25 21:18:58,528 DEBUG client 22444 22384 > Host: socket.polygon.io
2023-06-25 21:18:58,528 DEBUG client 22444 22384 > Upgrade: websocket
2023-06-25 21:18:58,528 DEBUG client 22444 22384 > Connection: Upgrade
2023-06-25 21:18:58,528 DEBUG client 22444 22384 > Sec-WebSocket-Key: FIV9Zo53FNEr9RBxk5jekA==
2023-06-25 21:18:58,528 DEBUG client 22444 22384 > Sec-WebSocket-Version: 13
2023-06-25 21:18:58,528 DEBUG client 22444 22384 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:18:58,528 DEBUG client 22444 22384 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:18:58,734 DEBUG client 22444 22384 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:18:58,734 DEBUG client 22444 22384 < Server: nginx/1.19.2
2023-06-25 21:18:58,734 DEBUG client 22444 22384 < Date: Sun, 25 Jun 2023 18:18:59 GMT
2023-06-25 21:18:58,734 DEBUG client 22444 22384 < Connection: upgrade
2023-06-25 21:18:58,734 DEBUG client 22444 22384 < Upgrade: websocket
2023-06-25 21:18:58,734 DEBUG client 22444 22384 < Sec-WebSocket-Accept: okv5nkg9Op4wYjN57g1wqLIu5XI=
2023-06-25 21:18:58,734 DEBUG client 22444 22384 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:18:58,734 DEBUG protocol 22444 22384 = connection is OPEN
2023-06-25 21:18:58,735 DEBUG protocol 22444 22384 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:18:58,735 DEBUG __init__ 22444 22384 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:18:58,735 DEBUG __init__ 22444 22384 authing...
2023-06-25 21:18:58,735 DEBUG protocol 22444 22384 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:18:58,837 DEBUG protocol 22444 22384 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:18:58,837 DEBUG __init__ 22444 22384 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:18:58,838 DEBUG __init__ 22444 22384 reconciling: set() {'XT.BTC-USD'}
2023-06-25 21:18:58,838 DEBUG __init__ 22444 22384 subbing: XT.BTC-USD
2023-06-25 21:18:58,838 DEBUG protocol 22444 22384 > TEXT '{"action": "subscribe", "params": "XT.BTC-USD"}' [47 bytes]
2023-06-25 21:18:58,940 DEBUG protocol 22444 22384 < TEXT '[{"ev":"status","status":"success","message":"s...ribed to: XT.BTC-USD"}]' [74 bytes]
2023-06-25 21:18:58,940 DEBUG __init__ 22444 22384 status: subscribed to: XT.BTC-USD
2023-06-25 21:18:59,836 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30438,"t":1687...":6,"r":1687717140171}]' [121 bytes]
2023-06-25 21:19:00,362 DEBUG protocol 22444 22384 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30445,"t":1687...":6,"r":1687717140697}]' [121 bytes]
2023-06-25 21:21:40,292 INFO autoreload 14776 13304 Watching for file changes with StatReloader
2023-06-25 21:21:40,524 DEBUG proactor_events 14776 21916 Using proactor: IocpProactor
2023-06-25 21:21:40,527 DEBUG __init__ 14776 21916 connect: wss://socket.polygon.io/crypto
2023-06-25 21:21:40,693 DEBUG protocol 14776 21916 = connection is CONNECTING
2023-06-25 21:21:40,800 DEBUG client 14776 21916 > GET /crypto HTTP/1.1
2023-06-25 21:21:40,800 DEBUG client 14776 21916 > Host: socket.polygon.io
2023-06-25 21:21:40,800 DEBUG client 14776 21916 > Upgrade: websocket
2023-06-25 21:21:40,801 DEBUG client 14776 21916 > Connection: Upgrade
2023-06-25 21:21:40,801 DEBUG client 14776 21916 > Sec-WebSocket-Key: b/8NoH611Wlhu8wy+faeFA==
2023-06-25 21:21:40,801 DEBUG client 14776 21916 > Sec-WebSocket-Version: 13
2023-06-25 21:21:40,801 DEBUG client 14776 21916 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:21:40,801 DEBUG client 14776 21916 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:21:41,019 DEBUG client 14776 21916 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:21:41,019 DEBUG client 14776 21916 < Server: nginx/1.19.2
2023-06-25 21:21:41,019 DEBUG client 14776 21916 < Date: Sun, 25 Jun 2023 18:21:41 GMT
2023-06-25 21:21:41,019 DEBUG client 14776 21916 < Connection: upgrade
2023-06-25 21:21:41,019 DEBUG client 14776 21916 < Upgrade: websocket
2023-06-25 21:21:41,019 DEBUG client 14776 21916 < Sec-WebSocket-Accept: iThHHdXMB0wVx0MRUy7RV6uOLNY=
2023-06-25 21:21:41,020 DEBUG client 14776 21916 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:21:41,020 DEBUG protocol 14776 21916 = connection is OPEN
2023-06-25 21:21:41,020 DEBUG protocol 14776 21916 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:21:41,020 DEBUG __init__ 14776 21916 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:21:41,021 DEBUG __init__ 14776 21916 authing...
2023-06-25 21:21:41,021 DEBUG protocol 14776 21916 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:21:41,126 DEBUG protocol 14776 21916 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:21:41,126 DEBUG __init__ 14776 21916 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:21:41,127 DEBUG __init__ 14776 21916 reconciling: set() {'XT.BTC-USD'}
2023-06-25 21:21:41,127 DEBUG __init__ 14776 21916 subbing: XT.BTC-USD
2023-06-25 21:21:41,127 DEBUG protocol 14776 21916 > TEXT '{"action": "subscribe", "params": "XT.BTC-USD"}' [47 bytes]
2023-06-25 21:21:41,228 DEBUG protocol 14776 21916 < TEXT '[{"ev":"status","status":"success","message":"s...ribed to: XT.BTC-USD"}]' [74 bytes]
2023-06-25 21:21:41,229 DEBUG __init__ 14776 21916 status: subscribed to: XT.BTC-USD
2023-06-25 21:21:41,819 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.78,"t":1...":1,"r":1687717302157}]' [124 bytes]
2023-06-25 21:21:42,014 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.3,"t":16...:23,"r":1687717302352}]' [151 bytes]
2023-06-25 21:21:42,246 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.9,"t":16...":1,"r":1687717302583}]' [118 bytes]
2023-06-25 21:21:42,329 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.9,"t":16...":1,"r":1687717302659}]' [123 bytes]
2023-06-25 21:21:42,730 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.9,"t":16...":1,"r":1687717303069}]' [123 bytes]
2023-06-25 21:21:43,173 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391.78,"t":1...":1,"r":1687717303511}]' [123 bytes]
2023-06-25 21:21:43,263 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391.86,"t":1...":1,"r":1687717303602}]' [121 bytes]
2023-06-25 21:21:43,409 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.65,"t":1...":1,"r":1687717303748}]' [119 bytes]
2023-06-25 21:21:44,303 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.63,"t":1...":1,"r":1687717304641}]' [124 bytes]
2023-06-25 21:21:44,901 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.84,"t":1...":1,"r":1687717305238}]' [124 bytes]
2023-06-25 21:21:45,794 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.65,"t":1...":1,"r":1687717306132}]' [124 bytes]
2023-06-25 21:21:45,803 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.16,"t":1...":1,"r":1687717306141}]' [121 bytes]
2023-06-25 21:21:45,809 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.16,"t":1...":1,"r":1687717306147}]' [120 bytes]
2023-06-25 21:21:45,809 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.16,"t":1...":1,"r":1687717306147}]' [120 bytes]
2023-06-25 21:21:45,841 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.19,"t":1...":1,"r":1687717306177}]' [122 bytes]
2023-06-25 21:21:45,843 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.19,"t":1...":1,"r":1687717306177}]' [122 bytes]
2023-06-25 21:21:45,936 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.51,"t":1...":1,"r":1687717306274}]' [124 bytes]
2023-06-25 21:21:45,951 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.51,"t":1...":1,"r":1687717306290}]' [124 bytes]
2023-06-25 21:21:45,961 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.51,"t":1...":1,"r":1687717306300}]' [124 bytes]
2023-06-25 21:21:45,971 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.51,"t":1...":1,"r":1687717306310}]' [124 bytes]
2023-06-25 21:21:45,990 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.51,"t":1...":1,"r":1687717306329}]' [124 bytes]
2023-06-25 21:21:45,990 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.51,"t":1...":1,"r":1687717306329}]' [121 bytes]
2023-06-25 21:21:46,013 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:21:46,013 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:21:46,140 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.1,"t":16...":1,"r":1687717306478}]' [123 bytes]
2023-06-25 21:21:46,292 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.1,"t":16...":1,"r":1687717306630}]' [123 bytes]
2023-06-25 21:21:46,292 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.15,"t":1...":1,"r":1687717306630}]' [124 bytes]
2023-06-25 21:21:46,396 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.72,"t":1...":1,"r":1687717306734}]' [124 bytes]
2023-06-25 21:21:46,814 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.81,"t":1...":1,"r":1687717307153}]' [123 bytes]
2023-06-25 21:21:46,894 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.61,"t":1...":1,"r":1687717307233}]' [124 bytes]
2023-06-25 21:21:46,951 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380.8,"t":16...:23,"r":1687717307289}]' [297 bytes]
2023-06-25 21:21:47,205 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.11,"t":1...":1,"r":1687717307543}]' [124 bytes]
2023-06-25 21:21:47,352 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417,"t":1687...":2,"r":1687717307690}]' [119 bytes]
2023-06-25 21:21:47,390 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417,"t":1687...":2,"r":1687717307729}]' [119 bytes]
2023-06-25 21:21:47,412 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.81,"t":1...":1,"r":1687717307750}]' [120 bytes]
2023-06-25 21:21:47,499 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.57,"t":1...":1,"r":1687717307837}]' [124 bytes]
2023-06-25 21:21:47,500 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.77,"t":1...":1,"r":1687717307837}]' [124 bytes]
2023-06-25 21:21:47,934 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393,"t":1687...":6,"r":1687717308272}]' [121 bytes]
2023-06-25 21:21:47,936 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414,"t":1687...":2,"r":1687717308275}]' [119 bytes]
2023-06-25 21:21:48,017 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414,"t":1687...":2,"r":1687717308357}]' [119 bytes]
2023-06-25 21:21:48,594 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411,"t":1687...":2,"r":1687717308932}]' [237 bytes]
2023-06-25 21:21:48,661 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411,"t":1687...":2,"r":1687717309000}]' [119 bytes]
2023-06-25 21:21:48,672 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411,"t":1687...":2,"r":1687717309012}]' [119 bytes]
2023-06-25 21:21:49,285 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30384.85,"t":1...":1,"r":1687717309623}]' [118 bytes]
2023-06-25 21:21:49,285 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30384.85,"t":1...":1,"r":1687717309624}]' [124 bytes]
2023-06-25 21:21:49,733 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390,"t":1687...":6,"r":1687717310070}]' [121 bytes]
2023-06-25 21:21:49,842 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411,"t":1687...":2,"r":1687717310180}]' [118 bytes]
2023-06-25 21:21:49,874 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411,"t":1687...":2,"r":1687717310213}]' [118 bytes]
2023-06-25 21:21:50,028 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.05,"t":1...":1,"r":1687717310368}]' [123 bytes]
2023-06-25 21:21:50,040 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410,"t":1687...":2,"r":1687717310379}]' [119 bytes]
2023-06-25 21:21:50,074 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410,"t":1687...":2,"r":1687717310413}]' [119 bytes]
2023-06-25 21:21:50,144 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388,"t":1687...":6,"r":1687717310483}]' [116 bytes]
2023-06-25 21:21:50,178 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388,"t":1687...":6,"r":1687717310517}]' [115 bytes]
2023-06-25 21:21:50,854 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30375.1,"t":16...:23,"r":1687717311193}]' [149 bytes]
2023-06-25 21:21:50,976 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30375,"t":1687...:23,"r":1687717311315}]' [149 bytes]
2023-06-25 21:21:51,012 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:21:51,013 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:21:51,059 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30375.1,"t":16...:23,"r":1687717311382}]' [151 bytes]
2023-06-25 21:21:51,208 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30384.28,"t":1...":1,"r":1687717311545}]' [124 bytes]
2023-06-25 21:21:51,211 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388,"t":1687...":6,"r":1687717311549}]' [120 bytes]
2023-06-25 21:21:51,237 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30384.34,"t":1...":1,"r":1687717311575}]' [124 bytes]
2023-06-25 21:21:51,340 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.34,"t":1...":1,"r":1687717311679}]' [124 bytes]
2023-06-25 21:21:52,289 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406,"t":1687...":2,"r":1687717312629}]' [117 bytes]
2023-06-25 21:21:52,356 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406,"t":1687...":2,"r":1687717312695}]' [117 bytes]
2023-06-25 21:21:52,574 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30384.77,"t":1...":1,"r":1687717312913}]' [123 bytes]
2023-06-25 21:21:52,694 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30383.58,"t":1...":1,"r":1687717313033}]' [124 bytes]
2023-06-25 21:21:53,082 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.42,"t":1...":1,"r":1687717313421}]' [124 bytes]
2023-06-25 21:21:53,204 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386,"t":1687...":6,"r":1687717313528}]' [121 bytes]
2023-06-25 21:21:53,654 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30375.1,"t":16...:23,"r":1687717313992}]' [150 bytes]
2023-06-25 21:21:55,120 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.69,"t":1...":1,"r":1687717315458}]' [124 bytes]
2023-06-25 21:21:55,344 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.65,"t":1...":1,"r":1687717315669}]' [124 bytes]
2023-06-25 21:21:55,886 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.28,"t":1...":1,"r":1687717316224}]' [124 bytes]
2023-06-25 21:21:55,887 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.28,"t":1...":1,"r":1687717316224}]' [609 bytes]
2023-06-25 21:21:55,902 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.23,"t":1...":1,"r":1687717316241}]' [124 bytes]
2023-06-25 21:21:55,902 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.22,"t":1...":1,"r":1687717316241}]' [124 bytes]
2023-06-25 21:21:55,910 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.22,"t":1...":1,"r":1687717316249}]' [124 bytes]
2023-06-25 21:21:55,923 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.35,"t":1...":1,"r":1687717316262}]' [124 bytes]
2023-06-25 21:21:55,924 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.22,"t":1...":1,"r":1687717316263}]' [124 bytes]
2023-06-25 21:21:55,926 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.22,"t":1...":1,"r":1687717316265}]' [124 bytes]
2023-06-25 21:21:55,931 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.22,"t":1...":1,"r":1687717316270}]' [124 bytes]
2023-06-25 21:21:55,944 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.23,"t":1...":1,"r":1687717316283}]' [124 bytes]
2023-06-25 21:21:55,988 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.22,"t":1...":1,"r":1687717316283}]' [124 bytes]
2023-06-25 21:21:55,988 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.22,"t":1...":1,"r":1687717316284}]' [124 bytes]
2023-06-25 21:21:56,014 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:21:56,014 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:21:56,364 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391,"t":1687...":1,"r":1687717316703}]' [119 bytes]
2023-06-25 21:21:56,365 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.99,"t":1...":1,"r":1687717316703}]' [122 bytes]
2023-06-25 21:21:56,386 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391,"t":1687...":1,"r":1687717316714}]' [119 bytes]
2023-06-25 21:21:56,386 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391,"t":1687...":1,"r":1687717316714}]' [119 bytes]
2023-06-25 21:21:57,036 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391.8,"t":16...":1,"r":1687717317375}]' [123 bytes]
2023-06-25 21:21:57,086 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391.8,"t":16...":1,"r":1687717317424}]' [117 bytes]
2023-06-25 21:21:57,535 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.26,"t":1...":1,"r":1687717317873}]' [123 bytes]
2023-06-25 21:21:57,744 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30384.49,"t":1...":1,"r":1687717318082}]' [118 bytes]
2023-06-25 21:21:58,378 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30383.57,"t":1...":1,"r":1687717318717}]' [124 bytes]
2023-06-25 21:21:58,392 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30383.57,"t":1...":1,"r":1687717318730}]' [124 bytes]
2023-06-25 21:21:58,396 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30383.57,"t":1...":1,"r":1687717318736}]' [124 bytes]
2023-06-25 21:21:58,404 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.98,"t":1...":1,"r":1687717318743}]' [120 bytes]
2023-06-25 21:21:58,413 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.99,"t":1...":1,"r":1687717318751}]' [124 bytes]
2023-06-25 21:21:58,418 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.99,"t":1...":1,"r":1687717318757}]' [120 bytes]
2023-06-25 21:21:58,564 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380.78,"t":1...":1,"r":1687717318895}]' [117 bytes]
2023-06-25 21:21:58,581 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380.05,"t":1...":1,"r":1687717318912}]' [120 bytes]
2023-06-25 21:21:58,581 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380.05,"t":1...":1,"r":1687717318913}]' [124 bytes]
2023-06-25 21:21:58,587 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379.86,"t":1...":1,"r":1687717318926}]' [120 bytes]
2023-06-25 21:21:58,587 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379.86,"t":1...":1,"r":1687717318926}]' [119 bytes]
2023-06-25 21:21:58,588 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379.44,"t":1...":1,"r":1687717318926}]' [121 bytes]
2023-06-25 21:21:58,609 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379.93,"t":1...":1,"r":1687717318948}]' [120 bytes]
2023-06-25 21:21:58,616 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379.93,"t":1...":1,"r":1687717318955}]' [119 bytes]
2023-06-25 21:21:58,616 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379.44,"t":1...":1,"r":1687717318955}]' [240 bytes]
2023-06-25 21:21:58,628 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379,"t":1687...":1,"r":1687717318967}]' [119 bytes]
2023-06-25 21:21:58,629 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30378.47,"t":1...":1,"r":1687717318967}]' [122 bytes]
2023-06-25 21:21:58,749 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30378.48,"t":1...":1,"r":1687717319088}]' [121 bytes]
2023-06-25 21:21:58,750 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30378.48,"t":1...":1,"r":1687717319088}]' [245 bytes]
2023-06-25 21:21:58,767 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30377.41,"t":1...":1,"r":1687717319102}]' [120 bytes]
2023-06-25 21:21:58,784 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30377.41,"t":1...":1,"r":1687717319122}]' [120 bytes]
2023-06-25 21:21:58,802 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30377,"t":1687...":1,"r":1687717319141}]' [117 bytes]
2023-06-25 21:21:58,878 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30377,"t":1687...":1,"r":1687717319217}]' [119 bytes]
2023-06-25 21:21:58,880 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30375.79,"t":1...":1,"r":1687717319217}]' [604 bytes]
2023-06-25 21:21:58,888 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30377,"t":1687...":1,"r":1687717319226}]' [117 bytes]
2023-06-25 21:21:58,909 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30384,"t":1687...":6,"r":1687717319249}]' [114 bytes]
2023-06-25 21:21:58,995 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406,"t":1687...":2,"r":1687717319334}]' [119 bytes]
2023-06-25 21:21:59,047 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30384,"t":1687...":6,"r":1687717319386}]' [121 bytes]
2023-06-25 21:21:59,048 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406,"t":1687...":2,"r":1687717319388}]' [119 bytes]
2023-06-25 21:21:59,117 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30375.4,"t":16...":1,"r":1687717319455}]' [120 bytes]
2023-06-25 21:21:59,118 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30375.39,"t":1...":1,"r":1687717319455}]' [362 bytes]
2023-06-25 21:21:59,314 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30375,"t":1687...:23,"r":1687717319652}]' [149 bytes]
2023-06-25 21:21:59,315 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30375,"t":1687...:23,"r":1687717319652}]' [296 bytes]
2023-06-25 21:21:59,342 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30375,"t":1687...:23,"r":1687717319681}]' [149 bytes]
2023-06-25 21:21:59,416 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30375.38,"t":1...":1,"r":1687717319755}]' [124 bytes]
2023-06-25 21:21:59,431 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30375,"t":1687...:23,"r":1687717319770}]' [297 bytes]
2023-06-25 21:21:59,432 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30360,"t":1687...:23,"r":1687717319770}]' [149 bytes]
2023-06-25 21:21:59,465 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30360,"t":1687...:23,"r":1687717319804}]' [149 bytes]
2023-06-25 21:21:59,492 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30375.4,"t":16...":1,"r":1687717319830}]' [123 bytes]
2023-06-25 21:21:59,493 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30375.41,"t":1...":1,"r":1687717319830}]' [122 bytes]
2023-06-25 21:21:59,510 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30375.4,"t":16...":1,"r":1687717319849}]' [123 bytes]
2023-06-25 21:21:59,601 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30359.8,"t":16...:23,"r":1687717319940}]' [148 bytes]
2023-06-25 21:21:59,700 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30373.87,"t":1...":1,"r":1687717320038}]' [124 bytes]
2023-06-25 21:21:59,715 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30373.87,"t":1...":1,"r":1687717320053}]' [124 bytes]
2023-06-25 21:21:59,725 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30373.87,"t":1...":1,"r":1687717320064}]' [124 bytes]
2023-06-25 21:21:59,737 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30373.87,"t":1...":1,"r":1687717320075}]' [118 bytes]
2023-06-25 21:21:59,802 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30359.9,"t":16...:23,"r":1687717320141}]' [151 bytes]
2023-06-25 21:21:59,848 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30376.14,"t":1...":1,"r":1687717320186}]' [124 bytes]
2023-06-25 21:21:59,848 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30376.15,"t":1...":1,"r":1687717320187}]' [1201 bytes]
2023-06-25 21:21:59,997 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30359.9,"t":16...:23,"r":1687717320337}]' [151 bytes]
2023-06-25 21:22:00,002 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382,"t":1687...":6,"r":1687717320341}]' [121 bytes]
2023-06-25 21:22:00,013 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381,"t":1687...":6,"r":1687717320351}]' [121 bytes]
2023-06-25 21:22:00,027 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30376.15,"t":1...":1,"r":1687717320365}]' [124 bytes]
2023-06-25 21:22:00,117 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381,"t":1687...":6,"r":1687717320430}]' [121 bytes]
2023-06-25 21:22:00,119 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379,"t":1687...":6,"r":1687717320446}]' [241 bytes]
2023-06-25 21:22:01,012 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:22:01,013 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:22:01,013 DEBUG protocol 14776 21916 % sending keepalive ping
2023-06-25 21:22:01,013 DEBUG protocol 14776 21916 > PING '\x0b8h#' [text, 4 bytes]
2023-06-25 21:22:01,100 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30376.15,"t":1...":1,"r":1687717321439}]' [124 bytes]
2023-06-25 21:22:01,111 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30378.29,"t":1...":1,"r":1687717321450}]' [121 bytes]
2023-06-25 21:22:01,127 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30378.76,"t":1...":1,"r":1687717321466}]' [124 bytes]
2023-06-25 21:22:01,202 DEBUG protocol 14776 21916 < PONG '\x0b8h#' [text, 4 bytes]
2023-06-25 21:22:01,202 DEBUG protocol 14776 21916 % received keepalive pong
2023-06-25 21:22:01,579 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30378.48,"t":1...":1,"r":1687717321918}]' [124 bytes]
2023-06-25 21:22:02,056 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30378.49,"t":1...":1,"r":1687717322394}]' [124 bytes]
2023-06-25 21:22:02,114 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30378.49,"t":1...":1,"r":1687717322453}]' [117 bytes]
2023-06-25 21:22:02,374 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30378.46,"t":1...":1,"r":1687717322711}]' [124 bytes]
2023-06-25 21:22:02,606 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30378.49,"t":1...":1,"r":1687717322946}]' [124 bytes]
2023-06-25 21:22:02,959 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.31,"t":1...":1,"r":1687717323299}]' [124 bytes]
2023-06-25 21:22:03,833 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380.74,"t":1...":1,"r":1687717324172}]' [124 bytes]
2023-06-25 21:22:04,405 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380.74,"t":1...":1,"r":1687717324744}]' [124 bytes]
2023-06-25 21:22:04,616 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379.36,"t":1...":1,"r":1687717324955}]' [124 bytes]
2023-06-25 21:22:04,957 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406,"t":1687...":2,"r":1687717325297}]' [122 bytes]
2023-06-25 21:22:04,983 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406,"t":1687...":2,"r":1687717325323}]' [122 bytes]
2023-06-25 21:22:05,187 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30359.8,"t":16...:23,"r":1687717325525}]' [149 bytes]
2023-06-25 21:22:05,188 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30359.8,"t":16...:23,"r":1687717325525}]' [301 bytes]
2023-06-25 21:22:05,347 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30378.72,"t":1...":1,"r":1687717325686}]' [124 bytes]
2023-06-25 21:22:05,867 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379.6,"t":16...":1,"r":1687717326206}]' [123 bytes]
2023-06-25 21:22:05,867 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380.62,"t":1...":1,"r":1687717326206}]' [245 bytes]
2023-06-25 21:22:06,013 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:22:06,013 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:22:06,623 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30359.5,"t":16...:23,"r":1687717326963}]' [151 bytes]
2023-06-25 21:22:06,943 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379.35,"t":1...":1,"r":1687717327282}]' [124 bytes]
2023-06-25 21:22:07,150 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379.35,"t":1...":1,"r":1687717327489}]' [124 bytes]
2023-06-25 21:22:07,492 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380.87,"t":1...":1,"r":1687717327831}]' [123 bytes]
2023-06-25 21:22:07,568 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30359.5,"t":16...:23,"r":1687717327906}]' [301 bytes]
2023-06-25 21:22:08,688 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.24,"t":1...":1,"r":1687717329027}]' [118 bytes]
2023-06-25 21:22:08,692 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.24,"t":1...":1,"r":1687717329031}]' [122 bytes]
2023-06-25 21:22:08,693 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.25,"t":1...":1,"r":1687717329031}]' [244 bytes]
2023-06-25 21:22:08,694 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.44,"t":1...":1,"r":1687717329031}]' [124 bytes]
2023-06-25 21:22:09,084 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.11,"t":1...":1,"r":1687717329423}]' [124 bytes]
2023-06-25 21:22:09,089 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.04,"t":1...":1,"r":1687717329429}]' [124 bytes]
2023-06-25 21:22:11,012 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:22:11,013 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:22:11,043 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30360.2,"t":16...:23,"r":1687717331382}]' [149 bytes]
2023-06-25 21:22:11,044 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30367.9,"t":16...:23,"r":1687717331382}]' [151 bytes]
2023-06-25 21:22:11,140 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393,"t":1687...":6,"r":1687717331479}]' [121 bytes]
2023-06-25 21:22:11,407 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30360.2,"t":16...:23,"r":1687717331746}]' [147 bytes]
2023-06-25 21:22:11,976 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.57,"t":1...":1,"r":1687717332316}]' [124 bytes]
2023-06-25 21:22:12,315 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.82,"t":1...":1,"r":1687717332654}]' [123 bytes]
2023-06-25 21:22:12,325 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.63,"t":1...":1,"r":1687717332664}]' [124 bytes]
2023-06-25 21:22:12,442 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393,"t":1687...":6,"r":1687717332782}]' [118 bytes]
2023-06-25 21:22:12,528 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.71,"t":1...":1,"r":1687717332867}]' [122 bytes]
2023-06-25 21:22:13,708 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391.18,"t":1...":1,"r":1687717334047}]' [118 bytes]
2023-06-25 21:22:13,711 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391.18,"t":1...":1,"r":1687717334050}]' [124 bytes]
2023-06-25 21:22:13,799 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.63,"t":1...":1,"r":1687717334139}]' [122 bytes]
2023-06-25 21:22:13,800 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.63,"t":1...":1,"r":1687717334139}]' [122 bytes]
2023-06-25 21:22:14,434 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30360.2,"t":16...:23,"r":1687717334774}]' [151 bytes]
2023-06-25 21:22:15,434 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.64,"t":1...":1,"r":1687717335774}]' [124 bytes]
2023-06-25 21:22:15,438 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.64,"t":1...":1,"r":1687717335777}]' [124 bytes]
2023-06-25 21:22:16,012 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:22:16,012 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:22:16,093 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30360.2,"t":16...:23,"r":1687717336432}]' [151 bytes]
2023-06-25 21:22:16,385 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.63,"t":1...":1,"r":1687717336724}]' [122 bytes]
2023-06-25 21:22:16,385 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.64,"t":1...":1,"r":1687717336724}]' [489 bytes]
2023-06-25 21:22:16,404 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30360.2,"t":16...:23,"r":1687717336744}]' [299 bytes]
2023-06-25 21:22:16,830 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.09,"t":1...":1,"r":1687717337168}]' [123 bytes]
2023-06-25 21:22:17,193 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.08,"t":1...":1,"r":1687717337532}]' [123 bytes]
2023-06-25 21:22:17,335 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.08,"t":1...":1,"r":1687717337674}]' [124 bytes]
2023-06-25 21:22:17,386 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394,"t":1687...":6,"r":1687717337725}]' [121 bytes]
2023-06-25 21:22:17,553 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.08,"t":1...":1,"r":1687717337892}]' [124 bytes]
2023-06-25 21:22:17,554 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.13,"t":1...":1,"r":1687717337892}]' [124 bytes]
2023-06-25 21:22:19,339 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.3,"t":16...":1,"r":1687717339678}]' [122 bytes]
2023-06-25 21:22:19,866 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.99,"t":1...":1,"r":1687717340206}]' [124 bytes]
2023-06-25 21:22:20,733 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409,"t":1687...":2,"r":1687717341073}]' [117 bytes]
2023-06-25 21:22:20,761 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409,"t":1687...":2,"r":1687717341101}]' [117 bytes]
2023-06-25 21:22:21,012 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:22:21,012 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:22:21,208 DEBUG protocol 14776 21916 % sending keepalive ping
2023-06-25 21:22:21,208 DEBUG protocol 14776 21916 > PING a3 29 a2 cf [binary, 4 bytes]
2023-06-25 21:22:21,310 DEBUG protocol 14776 21916 < PONG a3 29 a2 cf [binary, 4 bytes]
2023-06-25 21:22:21,310 DEBUG protocol 14776 21916 % received keepalive pong
2023-06-25 21:22:21,556 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397.75,"t":1...":1,"r":1687717341895}]' [118 bytes]
2023-06-25 21:22:21,556 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.57,"t":1...":1,"r":1687717341895}]' [362 bytes]
2023-06-25 21:22:21,911 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.48,"t":1...":1,"r":1687717342250}]' [124 bytes]
2023-06-25 21:22:22,259 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.43,"t":1...":1,"r":1687717342587}]' [124 bytes]
2023-06-25 21:22:22,280 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413,"t":1687...":2,"r":1687717342620}]' [117 bytes]
2023-06-25 21:22:22,326 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413,"t":1687...":2,"r":1687717342666}]' [117 bytes]
2023-06-25 21:22:23,186 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.78,"t":1...":1,"r":1687717343525}]' [122 bytes]
2023-06-25 21:22:23,187 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.78,"t":1...":1,"r":1687717343525}]' [485 bytes]
2023-06-25 21:22:23,228 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30361,"t":1687...:23,"r":1687717343568}]' [147 bytes]
2023-06-25 21:22:23,393 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.62,"t":1...":1,"r":1687717343732}]' [124 bytes]
2023-06-25 21:22:23,757 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391,"t":1687...":1,"r":1687717344095}]' [121 bytes]
2023-06-25 21:22:23,758 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391,"t":1687...":1,"r":1687717344096}]' [482 bytes]
2023-06-25 21:22:23,776 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.63,"t":1...":1,"r":1687717344115}]' [124 bytes]
2023-06-25 21:22:23,776 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.49,"t":1...":1,"r":1687717344116}]' [124 bytes]
2023-06-25 21:22:23,829 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.47,"t":1...":1,"r":1687717344167}]' [124 bytes]
2023-06-25 21:22:23,830 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30384.1,"t":16...:23,"r":1687717344170}]' [151 bytes]
2023-06-25 21:22:23,860 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.47,"t":1...":1,"r":1687717344200}]' [124 bytes]
2023-06-25 21:22:23,982 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.02,"t":1...":1,"r":1687717344321}]' [124 bytes]
2023-06-25 21:22:23,982 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.38,"t":1...":1,"r":1687717344322}]' [124 bytes]
2023-06-25 21:22:24,259 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.98,"t":1...":1,"r":1687717344599}]' [121 bytes]
2023-06-25 21:22:24,260 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.99,"t":1...":1,"r":1687717344599}]' [365 bytes]
2023-06-25 21:22:25,582 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.26,"t":1...":1,"r":1687717345921}]' [124 bytes]
2023-06-25 21:22:26,012 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:22:26,012 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:22:26,414 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.43,"t":1...":1,"r":1687717346753}]' [124 bytes]
2023-06-25 21:22:28,027 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.72,"t":1...":1,"r":1687717348366}]' [124 bytes]
2023-06-25 21:22:28,065 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.71,"t":1...":1,"r":1687717348404}]' [123 bytes]
2023-06-25 21:22:28,081 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.71,"t":1...":1,"r":1687717348421}]' [123 bytes]
2023-06-25 21:22:28,082 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.72,"t":1...":1,"r":1687717348421}]' [364 bytes]
2023-06-25 21:22:28,107 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30361.4,"t":16...:23,"r":1687717348446}]' [149 bytes]
2023-06-25 21:22:28,662 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.17,"t":1...":1,"r":1687717349002}]' [124 bytes]
2023-06-25 21:22:29,390 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391.13,"t":1...":1,"r":1687717349729}]' [123 bytes]
2023-06-25 21:22:29,439 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391.13,"t":1...":1,"r":1687717349778}]' [124 bytes]
2023-06-25 21:22:30,187 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.43,"t":1...":1,"r":1687717350527}]' [124 bytes]
2023-06-25 21:22:30,187 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.43,"t":1...":1,"r":1687717350527}]' [728 bytes]
2023-06-25 21:22:30,188 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.19,"t":1...":1,"r":1687717350528}]' [245 bytes]
2023-06-25 21:22:30,188 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.14,"t":1...":1,"r":1687717350528}]' [246 bytes]
2023-06-25 21:22:30,900 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30383.59,"t":1...":1,"r":1687717351239}]' [124 bytes]
2023-06-25 21:22:31,012 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:22:31,012 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:22:31,217 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.26,"t":1...":1,"r":1687717351553}]' [124 bytes]
2023-06-25 21:22:31,492 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30384.43,"t":1...":1,"r":1687717351832}]' [121 bytes]
2023-06-25 21:22:31,988 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30361.7,"t":16...:23,"r":1687717352327}]' [151 bytes]
2023-06-25 21:22:31,988 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30361.7,"t":16...:23,"r":1687717352327}]' [151 bytes]
2023-06-25 21:22:33,517 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.21,"t":1...":1,"r":1687717353856}]' [245 bytes]
2023-06-25 21:22:34,130 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.23,"t":1...":1,"r":1687717354469}]' [124 bytes]
2023-06-25 21:22:34,754 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30361.7,"t":16...:23,"r":1687717355094}]' [151 bytes]
2023-06-25 21:22:34,754 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30361.7,"t":16...:23,"r":1687717355094}]' [592 bytes]
2023-06-25 21:22:35,053 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.56,"t":1...":1,"r":1687717355393}]' [124 bytes]
2023-06-25 21:22:36,011 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:22:36,011 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:22:36,101 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.26,"t":1...":1,"r":1687717356421}]' [124 bytes]
2023-06-25 21:22:36,200 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.87,"t":1...":1,"r":1687717356540}]' [122 bytes]
2023-06-25 21:22:36,201 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.78,"t":1...":1,"r":1687717356540}]' [969 bytes]
2023-06-25 21:22:36,970 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.59,"t":1...":1,"r":1687717357310}]' [124 bytes]
2023-06-25 21:22:37,515 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.04,"t":1...":1,"r":1687717357854}]' [124 bytes]
2023-06-25 21:22:37,590 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.65,"t":1...":1,"r":1687717357930}]' [122 bytes]
2023-06-25 21:22:37,693 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.02,"t":1...":1,"r":1687717358033}]' [118 bytes]
2023-06-25 21:22:37,694 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.8,"t":16...":1,"r":1687717358033}]' [243 bytes]
2023-06-25 21:22:37,720 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30361.8,"t":16...:23,"r":1687717358059}]' [149 bytes]
2023-06-25 21:22:37,720 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30365.1,"t":16...:23,"r":1687717358059}]' [150 bytes]
2023-06-25 21:22:37,830 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.65,"t":1...":1,"r":1687717358169}]' [124 bytes]
2023-06-25 21:22:38,633 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.96,"t":1...":1,"r":1687717358973}]' [124 bytes]
2023-06-25 21:22:38,869 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.42,"t":1...":1,"r":1687717359208}]' [124 bytes]
2023-06-25 21:22:38,979 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.48,"t":1...":1,"r":1687717359319}]' [122 bytes]
2023-06-25 21:22:38,979 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.48,"t":1...":1,"r":1687717359319}]' [124 bytes]
2023-06-25 21:22:39,070 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.43,"t":1...":1,"r":1687717359409}]' [124 bytes]
2023-06-25 21:22:39,260 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394,"t":1687...":6,"r":1687717359600}]' [121 bytes]
2023-06-25 21:22:39,378 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.43,"t":1...":1,"r":1687717359717}]' [122 bytes]
2023-06-25 21:22:39,425 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.42,"t":1...":1,"r":1687717359765}]' [124 bytes]
2023-06-25 21:22:39,767 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395,"t":1687...":6,"r":1687717360107}]' [121 bytes]
2023-06-25 21:22:39,967 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.43,"t":1...":1,"r":1687717360307}]' [124 bytes]
2023-06-25 21:22:39,979 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395,"t":1687...":6,"r":1687717360319}]' [121 bytes]
2023-06-25 21:22:39,992 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396,"t":1687...":6,"r":1687717360332}]' [121 bytes]
2023-06-25 21:22:40,484 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.42,"t":1...":1,"r":1687717360823}]' [124 bytes]
2023-06-25 21:22:40,576 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397,"t":1687...":6,"r":1687717360915}]' [121 bytes]
2023-06-25 21:22:40,587 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397,"t":1687...":6,"r":1687717360926}]' [121 bytes]
2023-06-25 21:22:40,590 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397,"t":1687...":6,"r":1687717360929}]' [121 bytes]
2023-06-25 21:22:40,962 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.43,"t":1...":1,"r":1687717361301}]' [124 bytes]
2023-06-25 21:22:40,962 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.43,"t":1...":1,"r":1687717361301}]' [247 bytes]
2023-06-25 21:22:40,964 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.68,"t":1...":1,"r":1687717361304}]' [121 bytes]
2023-06-25 21:22:40,965 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.68,"t":1...":1,"r":1687717361304}]' [120 bytes]
2023-06-25 21:22:40,967 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.68,"t":1...":1,"r":1687717361307}]' [121 bytes]
2023-06-25 21:22:40,973 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.68,"t":1...":1,"r":1687717361313}]' [124 bytes]
2023-06-25 21:22:41,012 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:22:41,012 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:22:41,161 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406,"t":1687...":2,"r":1687717361501}]' [117 bytes]
2023-06-25 21:22:41,178 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.8,"t":16...":1,"r":1687717361518}]' [123 bytes]
2023-06-25 21:22:41,201 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406,"t":1687...":2,"r":1687717361542}]' [117 bytes]
2023-06-25 21:22:41,325 DEBUG protocol 14776 21916 % sending keepalive ping
2023-06-25 21:22:41,325 DEBUG protocol 14776 21916 > PING a4 17 3a f8 [binary, 4 bytes]
2023-06-25 21:22:41,429 DEBUG protocol 14776 21916 < PONG a4 17 3a f8 [binary, 4 bytes]
2023-06-25 21:22:41,430 DEBUG protocol 14776 21916 % received keepalive pong
2023-06-25 21:22:41,967 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397.17,"t":1...":1,"r":1687717362307}]' [124 bytes]
2023-06-25 21:22:42,843 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400,"t":1687...":6,"r":1687717363183}]' [120 bytes]
2023-06-25 21:22:42,852 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.98,"t":1...":1,"r":1687717363192}]' [245 bytes]
2023-06-25 21:22:43,293 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.04,"t":1...":1,"r":1687717363633}]' [124 bytes]
2023-06-25 21:22:43,455 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.52,"t":1...":1,"r":1687717363795}]' [119 bytes]
2023-06-25 21:22:43,542 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.82,"t":1...":1,"r":1687717363882}]' [124 bytes]
2023-06-25 21:22:44,038 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.51,"t":1...":1,"r":1687717364378}]' [122 bytes]
2023-06-25 21:22:44,038 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.52,"t":1...":1,"r":1687717364378}]' [124 bytes]
2023-06-25 21:22:44,693 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.93,"t":1...":1,"r":1687717365033}]' [124 bytes]
2023-06-25 21:22:44,693 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.06,"t":1...":1,"r":1687717365033}]' [366 bytes]
2023-06-25 21:22:44,735 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30362.2,"t":16...:23,"r":1687717365075}]' [149 bytes]
2023-06-25 21:22:44,908 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398,"t":1687...":6,"r":1687717365248}]' [121 bytes]
2023-06-25 21:22:45,050 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30362.6,"t":16...:23,"r":1687717365389}]' [149 bytes]
2023-06-25 21:22:45,050 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30372.5,"t":16...:23,"r":1687717365389}]' [747 bytes]
2023-06-25 21:22:45,352 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.72,"t":1...":1,"r":1687717365692}]' [124 bytes]
2023-06-25 21:22:46,011 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:22:46,011 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:22:46,188 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.09,"t":1...":1,"r":1687717366528}]' [124 bytes]
2023-06-25 21:22:47,273 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.73,"t":1...":1,"r":1687717367612}]' [124 bytes]
2023-06-25 21:22:47,748 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409,"t":1687...":2,"r":1687717368089}]' [117 bytes]
2023-06-25 21:22:47,811 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409,"t":1687...":2,"r":1687717368151}]' [117 bytes]
2023-06-25 21:22:48,390 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.33,"t":1...":1,"r":1687717368729}]' [124 bytes]
2023-06-25 21:22:48,967 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.72,"t":1...":1,"r":1687717369307}]' [123 bytes]
2023-06-25 21:22:49,215 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.57,"t":1...":1,"r":1687717369527}]' [123 bytes]
2023-06-25 21:22:49,697 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30416,"t":1687...":2,"r":1687717370037}]' [122 bytes]
2023-06-25 21:22:49,739 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30416,"t":1687...":2,"r":1687717370080}]' [122 bytes]
2023-06-25 21:22:51,011 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:22:51,011 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:22:51,207 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.32,"t":1...":1,"r":1687717371547}]' [121 bytes]
2023-06-25 21:22:51,504 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.97,"t":1...":1,"r":1687717371844}]' [124 bytes]
2023-06-25 21:22:51,504 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.96,"t":1...":1,"r":1687717371844}]' [846 bytes]
2023-06-25 21:22:51,609 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30363.6,"t":16...:23,"r":1687717371949}]' [297 bytes]
2023-06-25 21:22:53,336 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419,"t":1687...":2,"r":1687717373677}]' [116 bytes]
2023-06-25 21:22:53,383 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419,"t":1687...":2,"r":1687717373724}]' [116 bytes]
2023-06-25 21:22:53,412 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.57,"t":1...":1,"r":1687717373753}]' [123 bytes]
2023-06-25 21:22:54,454 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.83,"t":1...":1,"r":1687717374794}]' [123 bytes]
2023-06-25 21:22:54,614 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.57,"t":1...":1,"r":1687717374954}]' [124 bytes]
2023-06-25 21:22:54,958 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.68,"t":1...":1,"r":1687717375297}]' [124 bytes]
2023-06-25 21:22:54,988 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30364,"t":1687...:23,"r":1687717375329}]' [147 bytes]
2023-06-25 21:22:55,038 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380.8,"t":16...:23,"r":1687717375378}]' [151 bytes]
2023-06-25 21:22:55,526 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.65,"t":1...":1,"r":1687717375866}]' [120 bytes]
2023-06-25 21:22:56,011 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:22:56,011 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:22:56,393 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.44,"t":1...":1,"r":1687717376733}]' [124 bytes]
2023-06-25 21:22:56,938 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.75,"t":1...":1,"r":1687717377279}]' [124 bytes]
2023-06-25 21:22:56,959 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.97,"t":1...":1,"r":1687717377299}]' [123 bytes]
2023-06-25 21:22:57,222 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.85,"t":1...":1,"r":1687717377561}]' [121 bytes]
2023-06-25 21:22:57,609 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.69,"t":1...":1,"r":1687717377949}]' [124 bytes]
2023-06-25 21:22:57,789 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.9,"t":16...":1,"r":1687717378129}]' [120 bytes]
2023-06-25 21:22:57,789 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.68,"t":1...":1,"r":1687717378129}]' [122 bytes]
2023-06-25 21:22:57,813 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380.8,"t":16...:23,"r":1687717378154}]' [149 bytes]
2023-06-25 21:22:57,949 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.91,"t":1...":1,"r":1687717378289}]' [122 bytes]
2023-06-25 21:22:58,809 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.3,"t":16...":1,"r":1687717379150}]' [122 bytes]
2023-06-25 21:22:58,822 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.3,"t":16...":1,"r":1687717379162}]' [123 bytes]
2023-06-25 21:22:58,950 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.3,"t":16...":1,"r":1687717379291}]' [123 bytes]
2023-06-25 21:22:59,823 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.37,"t":1...":1,"r":1687717380163}]' [124 bytes]
2023-06-25 21:22:59,876 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.88,"t":1...":1,"r":1687717380216}]' [124 bytes]
2023-06-25 21:22:59,877 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.88,"t":1...":1,"r":1687717380216}]' [124 bytes]
2023-06-25 21:23:01,011 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:23:01,011 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:23:01,397 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.88,"t":1...":1,"r":1687717381737}]' [124 bytes]
2023-06-25 21:23:01,433 DEBUG protocol 14776 21916 % sending keepalive ping
2023-06-25 21:23:01,433 DEBUG protocol 14776 21916 > PING 97 0d 9f df [binary, 4 bytes]
2023-06-25 21:23:01,535 DEBUG protocol 14776 21916 < PONG 97 0d 9f df [binary, 4 bytes]
2023-06-25 21:23:01,535 DEBUG protocol 14776 21916 % received keepalive pong
2023-06-25 21:23:02,176 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.45,"t":1...":1,"r":1687717382516}]' [124 bytes]
2023-06-25 21:23:02,198 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.42,"t":1...":1,"r":1687717382539}]' [124 bytes]
2023-06-25 21:23:03,188 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.28,"t":1...":1,"r":1687717383529}]' [124 bytes]
2023-06-25 21:23:03,195 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.28,"t":1...":1,"r":1687717383536}]' [124 bytes]
2023-06-25 21:23:03,393 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.84,"t":1...":1,"r":1687717383733}]' [124 bytes]
2023-06-25 21:23:03,758 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.67,"t":1...":1,"r":1687717384099}]' [122 bytes]
2023-06-25 21:23:03,759 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.67,"t":1...":1,"r":1687717384099}]' [241 bytes]
2023-06-25 21:23:04,086 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.91,"t":1...":1,"r":1687717384426}]' [124 bytes]
2023-06-25 21:23:04,086 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.2,"t":16...":1,"r":1687717384426}]' [123 bytes]
2023-06-25 21:23:04,126 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.2,"t":16...:23,"r":1687717384466}]' [299 bytes]
2023-06-25 21:23:04,437 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409,"t":1687...":6,"r":1687717384777}]' [121 bytes]
2023-06-25 21:23:04,454 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.6,"t":16...:23,"r":1687717384794}]' [299 bytes]
2023-06-25 21:23:04,728 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.32,"t":1...":1,"r":1687717385068}]' [124 bytes]
2023-06-25 21:23:04,938 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.47,"t":1...":1,"r":1687717385278}]' [124 bytes]
2023-06-25 21:23:05,042 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30422,"t":1687...":2,"r":1687717385383}]' [235 bytes]
2023-06-25 21:23:05,104 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30422,"t":1687...":2,"r":1687717385444}]' [117 bytes]
2023-06-25 21:23:05,159 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30422,"t":1687...":2,"r":1687717385499}]' [119 bytes]
2023-06-25 21:23:05,230 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382,"t":1687...:23,"r":1687717385570}]' [297 bytes]
2023-06-25 21:23:05,230 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.8,"t":16...:23,"r":1687717385570}]' [151 bytes]
2023-06-25 21:23:05,413 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.69,"t":1...":1,"r":1687717385746}]' [124 bytes]
2023-06-25 21:23:05,462 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.32,"t":1...":1,"r":1687717385802}]' [118 bytes]
2023-06-25 21:23:05,871 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.62,"t":1...":1,"r":1687717386212}]' [118 bytes]
2023-06-25 21:23:05,872 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.63,"t":1...":1,"r":1687717386212}]' [845 bytes]
2023-06-25 21:23:05,875 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.73,"t":1...":1,"r":1687717386216}]' [122 bytes]
2023-06-25 21:23:05,875 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.91,"t":1...":1,"r":1687717386216}]' [484 bytes]
2023-06-25 21:23:05,897 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.4,"t":16...:23,"r":1687717386238}]' [292 bytes]
2023-06-25 21:23:05,898 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.8,"t":16...:23,"r":1687717386238}]' [151 bytes]
2023-06-25 21:23:06,011 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:23:06,011 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:23:06,101 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.5,"t":16...":1,"r":1687717386441}]' [121 bytes]
2023-06-25 21:23:06,101 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.5,"t":16...":1,"r":1687717386442}]' [243 bytes]
2023-06-25 21:23:07,272 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421,"t":1687...":2,"r":1687717387613}]' [122 bytes]
2023-06-25 21:23:07,347 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421,"t":1687...":2,"r":1687717387687}]' [122 bytes]
2023-06-25 21:23:07,553 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.42,"t":1...":1,"r":1687717387894}]' [124 bytes]
2023-06-25 21:23:07,906 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.25,"t":1...":1,"r":1687717388246}]' [122 bytes]
2023-06-25 21:23:07,907 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.29,"t":1...":1,"r":1687717388246}]' [124 bytes]
2023-06-25 21:23:08,385 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.92,"t":1...":1,"r":1687717388727}]' [124 bytes]
2023-06-25 21:23:09,697 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415,"t":1687...":6,"r":1687717390038}]' [121 bytes]
2023-06-25 21:23:10,122 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.58,"t":1...":1,"r":1687717390463}]' [123 bytes]
2023-06-25 21:23:10,237 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.15,"t":1...":1,"r":1687717390577}]' [118 bytes]
2023-06-25 21:23:10,262 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.63,"t":1...":1,"r":1687717390602}]' [124 bytes]
2023-06-25 21:23:10,293 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.05,"t":1...":1,"r":1687717390633}]' [123 bytes]
2023-06-25 21:23:10,764 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.62,"t":1...":1,"r":1687717391105}]' [123 bytes]
2023-06-25 21:23:10,830 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.61,"t":1...":1,"r":1687717391171}]' [122 bytes]
2023-06-25 21:23:10,831 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.61,"t":1...":1,"r":1687717391171}]' [245 bytes]
2023-06-25 21:23:10,832 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.62,"t":1...":1,"r":1687717391173}]' [124 bytes]
2023-06-25 21:23:10,893 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.3,"t":16...:23,"r":1687717391233}]' [301 bytes]
2023-06-25 21:23:11,011 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:23:11,011 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:23:11,040 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.61,"t":1...":1,"r":1687717391380}]' [124 bytes]
2023-06-25 21:23:11,370 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.86,"t":1...":1,"r":1687717391710}]' [124 bytes]
2023-06-25 21:23:11,371 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.62,"t":1...":1,"r":1687717391710}]' [121 bytes]
2023-06-25 21:23:11,371 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.15,"t":1...":1,"r":1687717391710}]' [247 bytes]
2023-06-25 21:23:11,785 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.7,"t":16...":1,"r":1687717392021}]' [123 bytes]
2023-06-25 21:23:11,889 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.38,"t":1...":1,"r":1687717392220}]' [124 bytes]
2023-06-25 21:23:11,890 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.38,"t":1...":1,"r":1687717392220}]' [124 bytes]
2023-06-25 21:23:12,149 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.3,"t":16...":1,"r":1687717392490}]' [123 bytes]
2023-06-25 21:23:12,346 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.4,"t":16...:23,"r":1687717392686}]' [151 bytes]
2023-06-25 21:23:12,346 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.5,"t":16...:23,"r":1687717392686}]' [294 bytes]
2023-06-25 21:23:14,223 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405,"t":1687...":6,"r":1687717394564}]' [121 bytes]
2023-06-25 21:23:14,233 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405,"t":1687...":6,"r":1687717394573}]' [121 bytes]
2023-06-25 21:23:14,264 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405,"t":1687...":6,"r":1687717394604}]' [121 bytes]
2023-06-25 21:23:14,446 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.48,"t":1...":1,"r":1687717394787}]' [124 bytes]
2023-06-25 21:23:14,871 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.8,"t":16...:23,"r":1687717395211}]' [298 bytes]
2023-06-25 21:23:16,011 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:23:16,011 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:23:17,022 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.23,"t":1...":1,"r":1687717397363}]' [124 bytes]
2023-06-25 21:23:17,022 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.02,"t":1...":1,"r":1687717397363}]' [366 bytes]
2023-06-25 21:23:17,058 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.18,"t":1...":1,"r":1687717397395}]' [124 bytes]
2023-06-25 21:23:17,126 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406,"t":1687...":6,"r":1687717397467}]' [121 bytes]
2023-06-25 21:23:17,268 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.67,"t":1...":1,"r":1687717397610}]' [123 bytes]
2023-06-25 21:23:18,757 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.8,"t":16...:23,"r":1687717399098}]' [150 bytes]
2023-06-25 21:23:18,971 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.5,"t":16...":1,"r":1687717399311}]' [117 bytes]
2023-06-25 21:23:20,294 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.43,"t":1...":1,"r":1687717400626}]' [119 bytes]
2023-06-25 21:23:20,294 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.43,"t":1...":1,"r":1687717400630}]' [118 bytes]
2023-06-25 21:23:20,298 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.75,"t":1...":1,"r":1687717400636}]' [122 bytes]
2023-06-25 21:23:20,298 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.53,"t":1...":1,"r":1687717400637}]' [245 bytes]
2023-06-25 21:23:20,319 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.34,"t":1...":1,"r":1687717400659}]' [123 bytes]
2023-06-25 21:23:20,397 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.34,"t":1...":1,"r":1687717400737}]' [123 bytes]
2023-06-25 21:23:20,397 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.34,"t":1...":1,"r":1687717400737}]' [122 bytes]
2023-06-25 21:23:20,419 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.34,"t":1...":1,"r":1687717400760}]' [119 bytes]
2023-06-25 21:23:20,585 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.25,"t":1...":1,"r":1687717400926}]' [124 bytes]
2023-06-25 21:23:20,794 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.6,"t":16...":1,"r":1687717401134}]' [122 bytes]
2023-06-25 21:23:21,011 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:23:21,011 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:23:21,075 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.24,"t":1...":1,"r":1687717401416}]' [124 bytes]
2023-06-25 21:23:21,075 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.01,"t":1...":1,"r":1687717401416}]' [124 bytes]
2023-06-25 21:23:21,547 DEBUG protocol 14776 21916 % sending keepalive ping
2023-06-25 21:23:21,547 DEBUG protocol 14776 21916 > PING b5 70 8e 51 [binary, 4 bytes]
2023-06-25 21:23:21,648 DEBUG protocol 14776 21916 < PONG b5 70 8e 51 [binary, 4 bytes]
2023-06-25 21:23:21,648 DEBUG protocol 14776 21916 % received keepalive pong
2023-06-25 21:23:22,237 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.03,"t":1...":1,"r":1687717402578}]' [124 bytes]
2023-06-25 21:23:22,447 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.03,"t":1...":1,"r":1687717402787}]' [363 bytes]
2023-06-25 21:23:22,448 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.59,"t":1...":1,"r":1687717402787}]' [124 bytes]
2023-06-25 21:23:22,493 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407,"t":1687...":6,"r":1687717402833}]' [118 bytes]
2023-06-25 21:23:22,741 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.29,"t":1...":1,"r":1687717403081}]' [124 bytes]
2023-06-25 21:23:22,886 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.29,"t":1...":1,"r":1687717403228}]' [124 bytes]
2023-06-25 21:23:22,907 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.22,"t":1...":1,"r":1687717403248}]' [122 bytes]
2023-06-25 21:23:23,710 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.74,"t":1...":1,"r":1687717404051}]' [124 bytes]
2023-06-25 21:23:23,711 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.74,"t":1...":1,"r":1687717404051}]' [124 bytes]
2023-06-25 21:23:23,998 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.9,"t":16...":1,"r":1687717404338}]' [123 bytes]
2023-06-25 21:23:23,998 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.91,"t":1...":1,"r":1687717404339}]' [245 bytes]
2023-06-25 21:23:24,046 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.46,"t":1...":1,"r":1687717404387}]' [122 bytes]
2023-06-25 21:23:24,303 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403,"t":1687...":6,"r":1687717404643}]' [121 bytes]
2023-06-25 21:23:24,312 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404,"t":1687...":6,"r":1687717404652}]' [121 bytes]
2023-06-25 21:23:24,357 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.6,"t":16...":1,"r":1687717404697}]' [121 bytes]
2023-06-25 21:23:24,358 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.66,"t":1...":1,"r":1687717404697}]' [245 bytes]
2023-06-25 21:23:24,657 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.32,"t":1...":1,"r":1687717404998}]' [124 bytes]
2023-06-25 21:23:25,501 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411,"t":1687...":6,"r":1687717405842}]' [118 bytes]
2023-06-25 21:23:25,764 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.47,"t":1...":1,"r":1687717406104}]' [123 bytes]
2023-06-25 21:23:26,017 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:23:26,017 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:23:26,200 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406,"t":1687...":1,"r":1687717406541}]' [121 bytes]
2023-06-25 21:23:26,851 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415,"t":1687...":6,"r":1687717407192}]' [121 bytes]
2023-06-25 21:23:27,274 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.2,"t":16...":1,"r":1687717407615}]' [123 bytes]
2023-06-25 21:23:27,515 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415,"t":1687...":6,"r":1687717407856}]' [121 bytes]
2023-06-25 21:23:27,787 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.18,"t":1...":1,"r":1687717408128}]' [124 bytes]
2023-06-25 21:23:28,694 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.19,"t":1...":1,"r":1687717409031}]' [123 bytes]
2023-06-25 21:23:29,047 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407,"t":1687...":6,"r":1687717409388}]' [121 bytes]
2023-06-25 21:23:29,556 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.51,"t":1...":1,"r":1687717409896}]' [124 bytes]
2023-06-25 21:23:30,691 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.47,"t":1...":1,"r":1687717411033}]' [124 bytes]
2023-06-25 21:23:30,919 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.47,"t":1...":1,"r":1687717411259}]' [245 bytes]
2023-06-25 21:23:30,920 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.03,"t":1...":1,"r":1687717411259}]' [600 bytes]
2023-06-25 21:23:31,010 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:23:31,011 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:23:31,416 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.56,"t":1...":1,"r":1687717411749}]' [122 bytes]
2023-06-25 21:23:31,416 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.55,"t":1...":1,"r":1687717411749}]' [119 bytes]
2023-06-25 21:23:31,469 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.55,"t":1...":1,"r":1687717411809}]' [124 bytes]
2023-06-25 21:23:31,621 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.36,"t":1...":1,"r":1687717411962}]' [123 bytes]
2023-06-25 21:23:31,623 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.36,"t":1...":1,"r":1687717411964}]' [123 bytes]
2023-06-25 21:23:31,874 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.54,"t":1...":1,"r":1687717412216}]' [124 bytes]
2023-06-25 21:23:32,037 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415,"t":1687...":2,"r":1687717412375}]' [117 bytes]
2023-06-25 21:23:32,037 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412,"t":1687...":2,"r":1687717412375}]' [117 bytes]
2023-06-25 21:23:32,100 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415,"t":1687...":2,"r":1687717412440}]' [233 bytes]
2023-06-25 21:23:32,447 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.65,"t":1...":1,"r":1687717412788}]' [124 bytes]
2023-06-25 21:23:32,790 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.63,"t":1...":1,"r":1687717413131}]' [124 bytes]
2023-06-25 21:23:32,826 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.63,"t":1...":1,"r":1687717413167}]' [124 bytes]
2023-06-25 21:23:32,959 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399,"t":1687...":6,"r":1687717413300}]' [121 bytes]
2023-06-25 21:23:33,018 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.57,"t":1...":1,"r":1687717413358}]' [122 bytes]
2023-06-25 21:23:33,019 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.39,"t":1...":1,"r":1687717413358}]' [122 bytes]
2023-06-25 21:23:33,199 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.01,"t":1...":1,"r":1687717413540}]' [124 bytes]
2023-06-25 21:23:33,209 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.01,"t":1...":1,"r":1687717413550}]' [124 bytes]
2023-06-25 21:23:33,338 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390,"t":1687...":1,"r":1687717413675}]' [121 bytes]
2023-06-25 21:23:33,345 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390,"t":1687...":1,"r":1687717413685}]' [121 bytes]
2023-06-25 21:23:33,404 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.45,"t":1...":1,"r":1687717413744}]' [122 bytes]
2023-06-25 21:23:33,405 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.06,"t":1...":1,"r":1687717413744}]' [122 bytes]
2023-06-25 21:23:33,490 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.26,"t":1...":1,"r":1687717413830}]' [124 bytes]
2023-06-25 21:23:34,641 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.06,"t":1...":1,"r":1687717414982}]' [124 bytes]
2023-06-25 21:23:34,642 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.06,"t":1...":1,"r":1687717414982}]' [488 bytes]
2023-06-25 21:23:36,010 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:23:36,010 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:23:36,194 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.16,"t":1...":1,"r":1687717416536}]' [124 bytes]
2023-06-25 21:23:36,633 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.1,"t":16...":1,"r":1687717416974}]' [120 bytes]
2023-06-25 21:23:37,204 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.84,"t":1...":1,"r":1687717417545}]' [124 bytes]
2023-06-25 21:23:37,241 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.5,"t":16...:23,"r":1687717417582}]' [147 bytes]
2023-06-25 21:23:37,279 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.77,"t":1...":1,"r":1687717417620}]' [123 bytes]
2023-06-25 21:23:37,787 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.74,"t":1...":1,"r":1687717418128}]' [124 bytes]
2023-06-25 21:23:37,923 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406,"t":1687...":2,"r":1687717418265}]' [117 bytes]
2023-06-25 21:23:37,992 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406,"t":1687...":2,"r":1687717418334}]' [117 bytes]
2023-06-25 21:23:38,087 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30383.65,"t":1...":1,"r":1687717418428}]' [121 bytes]
2023-06-25 21:23:38,088 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30383.64,"t":1...":1,"r":1687717418429}]' [364 bytes]
2023-06-25 21:23:38,342 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30383.6,"t":16...":1,"r":1687717418683}]' [122 bytes]
2023-06-25 21:23:38,486 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30383.04,"t":1...":1,"r":1687717418828}]' [124 bytes]
2023-06-25 21:23:38,488 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30383.04,"t":1...":1,"r":1687717418830}]' [124 bytes]
2023-06-25 21:23:39,218 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.27,"t":1...":1,"r":1687717419558}]' [124 bytes]
2023-06-25 21:23:39,449 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30384.87,"t":1...":1,"r":1687717419789}]' [123 bytes]
2023-06-25 21:23:39,473 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.27,"t":1...":1,"r":1687717419814}]' [124 bytes]
2023-06-25 21:23:39,473 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30384.11,"t":1...":1,"r":1687717419814}]' [124 bytes]
2023-06-25 21:23:39,993 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.23,"t":1...":1,"r":1687717420334}]' [124 bytes]
2023-06-25 21:23:40,108 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387,"t":1687...":6,"r":1687717420450}]' [118 bytes]
2023-06-25 21:23:40,668 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.4,"t":16...:23,"r":1687717421009}]' [295 bytes]
2023-06-25 21:23:40,668 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382,"t":1687...:23,"r":1687717421009}]' [297 bytes]
2023-06-25 21:23:40,690 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380.5,"t":16...:23,"r":1687717421031}]' [151 bytes]
2023-06-25 21:23:40,691 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30370.6,"t":16...:23,"r":1687717421031}]' [594 bytes]
2023-06-25 21:23:41,005 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.83,"t":1...":1,"r":1687717421346}]' [121 bytes]
2023-06-25 21:23:41,005 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.79,"t":1...":1,"r":1687717421347}]' [242 bytes]
2023-06-25 21:23:41,006 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380.94,"t":1...":1,"r":1687717421347}]' [973 bytes]
2023-06-25 21:23:41,010 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:23:41,010 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:23:41,653 DEBUG protocol 14776 21916 % sending keepalive ping
2023-06-25 21:23:41,653 DEBUG protocol 14776 21916 > PING bc 15 96 7a [binary, 4 bytes]
2023-06-25 21:23:41,755 DEBUG protocol 14776 21916 < PONG bc 15 96 7a [binary, 4 bytes]
2023-06-25 21:23:41,755 DEBUG protocol 14776 21916 % received keepalive pong
2023-06-25 21:23:41,942 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30383.44,"t":1...":1,"r":1687717422284}]' [124 bytes]
2023-06-25 21:23:42,209 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30383.44,"t":1...":1,"r":1687717422551}]' [124 bytes]
2023-06-25 21:23:42,904 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386,"t":1687...":6,"r":1687717423245}]' [118 bytes]
2023-06-25 21:23:43,800 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.85,"t":1...":1,"r":1687717424140}]' [124 bytes]
2023-06-25 21:23:43,940 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.29,"t":1...":1,"r":1687717424281}]' [124 bytes]
2023-06-25 21:23:44,379 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30384.39,"t":1...":1,"r":1687717424719}]' [124 bytes]
2023-06-25 21:23:44,386 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30375.4,"t":16...:23,"r":1687717424728}]' [151 bytes]
2023-06-25 21:23:44,386 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30366.4,"t":16...:23,"r":1687717424728}]' [151 bytes]
2023-06-25 21:23:44,444 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.7,"t":16...:23,"r":1687717424786}]' [151 bytes]
2023-06-25 21:23:45,085 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.61,"t":1...":1,"r":1687717425426}]' [124 bytes]
2023-06-25 21:23:45,729 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30375.5,"t":16...:23,"r":1687717426070}]' [151 bytes]
2023-06-25 21:23:45,741 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.02,"t":1...":1,"r":1687717426083}]' [123 bytes]
2023-06-25 21:23:46,010 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:23:46,011 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:23:46,068 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.77,"t":1...":1,"r":1687717426409}]' [122 bytes]
2023-06-25 21:23:46,069 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.77,"t":1...":1,"r":1687717426409}]' [124 bytes]
2023-06-25 21:23:46,442 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30383.59,"t":1...":1,"r":1687717426783}]' [124 bytes]
2023-06-25 21:23:46,768 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.43,"t":1...":1,"r":1687717427109}]' [119 bytes]
2023-06-25 21:23:46,856 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380,"t":1687...":1,"r":1687717427197}]' [121 bytes]
2023-06-25 21:23:47,148 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.96,"t":1...":1,"r":1687717427487}]' [124 bytes]
2023-06-25 21:23:47,220 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.96,"t":1...":1,"r":1687717427562}]' [124 bytes]
2023-06-25 21:23:48,812 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.89,"t":1...":1,"r":1687717429153}]' [124 bytes]
2023-06-25 21:23:48,950 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.08,"t":1...":1,"r":1687717429292}]' [121 bytes]
2023-06-25 21:23:48,970 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.09,"t":1...":1,"r":1687717429311}]' [124 bytes]
2023-06-25 21:23:49,171 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.03,"t":1...":1,"r":1687717429513}]' [124 bytes]
2023-06-25 21:23:49,172 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.02,"t":1...":1,"r":1687717429513}]' [364 bytes]
2023-06-25 21:23:49,172 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386,"t":1687...":1,"r":1687717429513}]' [242 bytes]
2023-06-25 21:23:50,356 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.83,"t":1...":1,"r":1687717430697}]' [121 bytes]
2023-06-25 21:23:50,366 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.83,"t":1...":1,"r":1687717430708}]' [123 bytes]
2023-06-25 21:23:50,392 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.83,"t":1...":1,"r":1687717430733}]' [121 bytes]
2023-06-25 21:23:50,534 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.6,"t":16...":1,"r":1687717430869}]' [123 bytes]
2023-06-25 21:23:51,011 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:23:51,011 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:23:51,144 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.47,"t":1...":1,"r":1687717431485}]' [124 bytes]
2023-06-25 21:23:52,013 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.8,"t":16...":1,"r":1687717432355}]' [123 bytes]
2023-06-25 21:23:52,385 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.86,"t":1...":1,"r":1687717432726}]' [124 bytes]
2023-06-25 21:23:52,402 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.87,"t":1...":1,"r":1687717432743}]' [122 bytes]
2023-06-25 21:23:52,402 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.85,"t":1...":1,"r":1687717432743}]' [124 bytes]
2023-06-25 21:23:52,415 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.88,"t":1...":1,"r":1687717432757}]' [124 bytes]
2023-06-25 21:23:52,426 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.88,"t":1...":1,"r":1687717432768}]' [124 bytes]
2023-06-25 21:23:52,427 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.85,"t":1...":1,"r":1687717432768}]' [124 bytes]
2023-06-25 21:23:53,010 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.54,"t":1...":1,"r":1687717433352}]' [121 bytes]
2023-06-25 21:23:53,961 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.23,"t":1...":1,"r":1687717434302}]' [119 bytes]
2023-06-25 21:23:53,962 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.22,"t":1...":1,"r":1687717434302}]' [124 bytes]
2023-06-25 21:23:54,479 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.81,"t":1...":1,"r":1687717434821}]' [124 bytes]
2023-06-25 21:23:54,785 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.41,"t":1...":1,"r":1687717435126}]' [123 bytes]
2023-06-25 21:23:54,857 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.39,"t":1...":1,"r":1687717435199}]' [124 bytes]
2023-06-25 21:23:54,873 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.4,"t":16...":1,"r":1687717435215}]' [123 bytes]
2023-06-25 21:23:54,874 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.39,"t":1...":1,"r":1687717435215}]' [124 bytes]
2023-06-25 21:23:54,882 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.39,"t":1...":1,"r":1687717435224}]' [124 bytes]
2023-06-25 21:23:54,894 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.39,"t":1...":1,"r":1687717435236}]' [124 bytes]
2023-06-25 21:23:54,982 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.84,"t":1...":1,"r":1687717435324}]' [124 bytes]
2023-06-25 21:23:54,983 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.39,"t":1...":1,"r":1687717435324}]' [124 bytes]
2023-06-25 21:23:55,121 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389,"t":1687...":6,"r":1687717435462}]' [121 bytes]
2023-06-25 21:23:55,163 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389,"t":1687...":6,"r":1687717435505}]' [121 bytes]
2023-06-25 21:23:55,299 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.4,"t":16...":1,"r":1687717435640}]' [121 bytes]
2023-06-25 21:23:55,300 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.39,"t":1...":1,"r":1687717435640}]' [368 bytes]
2023-06-25 21:23:55,306 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.41,"t":1...":1,"r":1687717435647}]' [122 bytes]
2023-06-25 21:23:55,598 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.33,"t":1...":1,"r":1687717435938}]' [122 bytes]
2023-06-25 21:23:55,598 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.32,"t":1...":1,"r":1687717435938}]' [243 bytes]
2023-06-25 21:23:56,010 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:23:56,010 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:23:56,529 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.41,"t":1...":1,"r":1687717436871}]' [123 bytes]
2023-06-25 21:23:56,530 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.88,"t":1...":1,"r":1687717436871}]' [123 bytes]
2023-06-25 21:23:57,167 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.44,"t":1...":1,"r":1687717437509}]' [123 bytes]
2023-06-25 21:23:58,971 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.46,"t":1...":1,"r":1687717439314}]' [123 bytes]
2023-06-25 21:24:00,184 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.64,"t":1...":1,"r":1687717440525}]' [124 bytes]
2023-06-25 21:24:00,299 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.33,"t":1...":1,"r":1687717440641}]' [124 bytes]
2023-06-25 21:24:00,395 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.64,"t":1...":1,"r":1687717440736}]' [124 bytes]
2023-06-25 21:24:00,422 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.64,"t":1...":1,"r":1687717440763}]' [124 bytes]
2023-06-25 21:24:00,857 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.61,"t":1...":1,"r":1687717441199}]' [124 bytes]
2023-06-25 21:24:01,010 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:24:01,010 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:24:01,168 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.7,"t":16...:23,"r":1687717441510}]' [147 bytes]
2023-06-25 21:24:01,766 DEBUG protocol 14776 21916 % sending keepalive ping
2023-06-25 21:24:01,766 DEBUG protocol 14776 21916 > PING 26 6c 98 ae [binary, 4 bytes]
2023-06-25 21:24:01,810 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.7,"t":16...:23,"r":1687717442152}]' [151 bytes]
2023-06-25 21:24:01,867 DEBUG protocol 14776 21916 < PONG 26 6c 98 ae [binary, 4 bytes]
2023-06-25 21:24:01,867 DEBUG protocol 14776 21916 % received keepalive pong
2023-06-25 21:24:01,930 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.62,"t":1...":1,"r":1687717442271}]' [124 bytes]
2023-06-25 21:24:02,809 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.65,"t":1...":1,"r":1687717443151}]' [120 bytes]
2023-06-25 21:24:02,824 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.65,"t":1...":1,"r":1687717443166}]' [123 bytes]
2023-06-25 21:24:02,970 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391.69,"t":1...":1,"r":1687717443311}]' [117 bytes]
2023-06-25 21:24:02,970 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391.98,"t":1...":1,"r":1687717443312}]' [118 bytes]
2023-06-25 21:24:03,898 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.81,"t":1...":1,"r":1687717444239}]' [118 bytes]
2023-06-25 21:24:05,021 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.46,"t":1...":1,"r":1687717445362}]' [124 bytes]
2023-06-25 21:24:05,029 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.82,"t":1...":1,"r":1687717445371}]' [124 bytes]
2023-06-25 21:24:05,524 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.74,"t":1...":1,"r":1687717445865}]' [124 bytes]
2023-06-25 21:24:05,771 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.58,"t":1...":1,"r":1687717446113}]' [124 bytes]
2023-06-25 21:24:05,866 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.74,"t":1...":1,"r":1687717446208}]' [124 bytes]
2023-06-25 21:24:05,867 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.74,"t":1...":1,"r":1687717446208}]' [1092 bytes]
2023-06-25 21:24:06,009 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:24:06,009 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:24:06,384 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.19,"t":1...":1,"r":1687717446726}]' [124 bytes]
2023-06-25 21:24:06,564 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.16,"t":1...":1,"r":1687717446905}]' [122 bytes]
2023-06-25 21:24:06,617 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.15,"t":1...":1,"r":1687717446959}]' [124 bytes]
2023-06-25 21:24:06,618 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.16,"t":1...":1,"r":1687717446959}]' [485 bytes]
2023-06-25 21:24:06,652 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.18,"t":1...":1,"r":1687717446994}]' [124 bytes]
2023-06-25 21:24:07,229 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.72,"t":1...":1,"r":1687717447569}]' [124 bytes]
2023-06-25 21:24:07,233 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397.1,"t":16...":1,"r":1687717447576}]' [123 bytes]
2023-06-25 21:24:07,438 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.79,"t":1...":1,"r":1687717447779}]' [124 bytes]
2023-06-25 21:24:08,109 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397.09,"t":1...":1,"r":1687717448452}]' [123 bytes]
2023-06-25 21:24:10,107 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.78,"t":1...":1,"r":1687717450449}]' [123 bytes]
2023-06-25 21:24:10,569 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.79,"t":1...":1,"r":1687717450911}]' [124 bytes]
2023-06-25 21:24:10,604 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397.89,"t":1...":1,"r":1687717450946}]' [122 bytes]
2023-06-25 21:24:10,605 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397.89,"t":1...":1,"r":1687717450946}]' [604 bytes]
2023-06-25 21:24:11,010 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:24:11,010 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:24:11,358 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401,"t":1687...":6,"r":1687717451700}]' [118 bytes]
2023-06-25 21:24:11,837 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.5,"t":16...":1,"r":1687717452180}]' [122 bytes]
2023-06-25 21:24:12,321 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.52,"t":1...":1,"r":1687717452662}]' [124 bytes]
2023-06-25 21:24:12,335 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.91,"t":1...":1,"r":1687717452676}]' [124 bytes]
2023-06-25 21:24:12,335 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.91,"t":1...":1,"r":1687717452676}]' [246 bytes]
2023-06-25 21:24:12,343 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.9,"t":16...":1,"r":1687717452685}]' [123 bytes]
2023-06-25 21:24:12,497 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397.93,"t":1...":1,"r":1687717452838}]' [124 bytes]
2023-06-25 21:24:12,969 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.63,"t":1...":1,"r":1687717453312}]' [124 bytes]
2023-06-25 21:24:13,191 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.7,"t":16...:23,"r":1687717453534}]' [151 bytes]
2023-06-25 21:24:14,016 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.51,"t":1...":1,"r":1687717454358}]' [124 bytes]
2023-06-25 21:24:15,547 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.49,"t":1...":1,"r":1687717455889}]' [123 bytes]
2023-06-25 21:24:15,846 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.49,"t":1...":1,"r":1687717456187}]' [118 bytes]
2023-06-25 21:24:15,846 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.5,"t":16...":1,"r":1687717456187}]' [123 bytes]
2023-06-25 21:24:16,009 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:24:16,010 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:24:17,015 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.5,"t":16...":1,"r":1687717457357}]' [123 bytes]
2023-06-25 21:24:17,048 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.49,"t":1...":1,"r":1687717457390}]' [124 bytes]
2023-06-25 21:24:17,440 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.28,"t":1...":1,"r":1687717457781}]' [124 bytes]
2023-06-25 21:24:17,627 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401,"t":1687...":6,"r":1687717457970}]' [118 bytes]
2023-06-25 21:24:17,945 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397.94,"t":1...":1,"r":1687717458287}]' [124 bytes]
2023-06-25 21:24:18,054 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397.95,"t":1...":1,"r":1687717458391}]' [124 bytes]
2023-06-25 21:24:18,354 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397.54,"t":1...":1,"r":1687717458696}]' [124 bytes]
2023-06-25 21:24:18,640 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.25,"t":1...":1,"r":1687717458982}]' [122 bytes]
2023-06-25 21:24:18,640 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.01,"t":1...":1,"r":1687717458982}]' [245 bytes]
2023-06-25 21:24:19,236 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.9,"t":16...":1,"r":1687717459578}]' [123 bytes]
2023-06-25 21:24:19,291 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.93,"t":1...":1,"r":1687717459633}]' [118 bytes]
2023-06-25 21:24:19,574 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.14,"t":1...":1,"r":1687717459909}]' [124 bytes]
2023-06-25 21:24:19,730 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.54,"t":1...":1,"r":1687717460072}]' [123 bytes]
2023-06-25 21:24:19,775 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.54,"t":1...":1,"r":1687717460116}]' [124 bytes]
2023-06-25 21:24:19,775 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.54,"t":1...":1,"r":1687717460116}]' [123 bytes]
2023-06-25 21:24:19,994 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.15,"t":1...":1,"r":1687717460336}]' [122 bytes]
2023-06-25 21:24:19,994 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.14,"t":1...":1,"r":1687717460336}]' [122 bytes]
2023-06-25 21:24:20,116 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.69,"t":1...":1,"r":1687717460459}]' [124 bytes]
2023-06-25 21:24:21,009 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:24:21,009 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:24:21,362 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.93,"t":1...":1,"r":1687717461704}]' [123 bytes]
2023-06-25 21:24:21,888 DEBUG protocol 14776 21916 % sending keepalive ping
2023-06-25 21:24:21,888 DEBUG protocol 14776 21916 > PING af 31 a3 a8 [binary, 4 bytes]
2023-06-25 21:24:21,982 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.93,"t":1...":1,"r":1687717462324}]' [123 bytes]
2023-06-25 21:24:21,990 DEBUG protocol 14776 21916 < PONG af 31 a3 a8 [binary, 4 bytes]
2023-06-25 21:24:21,990 DEBUG protocol 14776 21916 % received keepalive pong
2023-06-25 21:24:22,175 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.93,"t":1...":1,"r":1687717462517}]' [124 bytes]
2023-06-25 21:24:22,495 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.93,"t":1...":1,"r":1687717462838}]' [124 bytes]
2023-06-25 21:24:22,541 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.93,"t":1...":1,"r":1687717462882}]' [124 bytes]
2023-06-25 21:24:22,541 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.15,"t":1...":1,"r":1687717462882}]' [245 bytes]
2023-06-25 21:24:22,877 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.65,"t":1...":1,"r":1687717463220}]' [123 bytes]
2023-06-25 21:24:22,919 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.65,"t":1...":1,"r":1687717463261}]' [124 bytes]
2023-06-25 21:24:23,719 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.92,"t":1...":1,"r":1687717464052}]' [122 bytes]
2023-06-25 21:24:23,719 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.03,"t":1...":1,"r":1687717464052}]' [124 bytes]
2023-06-25 21:24:23,911 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.55,"t":1...":1,"r":1687717464253}]' [124 bytes]
2023-06-25 21:24:23,939 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391.28,"t":1...":1,"r":1687717464281}]' [123 bytes]
2023-06-25 21:24:23,939 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391.27,"t":1...":1,"r":1687717464281}]' [124 bytes]
2023-06-25 21:24:25,052 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.5,"t":16...:23,"r":1687717465394}]' [301 bytes]
2023-06-25 21:24:25,053 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.5,"t":16...:23,"r":1687717465394}]' [1319 bytes]
2023-06-25 21:24:25,053 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.5,"t":16...:23,"r":1687717465394}]' [151 bytes]
2023-06-25 21:24:25,053 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.5,"t":16...:23,"r":1687717465394}]' [151 bytes]
2023-06-25 21:24:25,053 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.5,"t":16...:23,"r":1687717465394}]' [295 bytes]
2023-06-25 21:24:25,053 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.5,"t":16...:23,"r":1687717465394}]' [144 bytes]
2023-06-25 21:24:25,054 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.5,"t":16...:23,"r":1687717465394}]' [150 bytes]
2023-06-25 21:24:25,054 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.5,"t":16...:23,"r":1687717465394}]' [151 bytes]
2023-06-25 21:24:25,054 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.5,"t":16...:23,"r":1687717465394}]' [151 bytes]
2023-06-25 21:24:25,054 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.5,"t":16...:23,"r":1687717465394}]' [146 bytes]
2023-06-25 21:24:25,054 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.6,"t":16...:23,"r":1687717465394}]' [151 bytes]
2023-06-25 21:24:25,054 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.7,"t":16...:23,"r":1687717465394}]' [150 bytes]
2023-06-25 21:24:25,054 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.7,"t":16...:23,"r":1687717465394}]' [145 bytes]
2023-06-25 21:24:25,155 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.7,"t":16...:23,"r":1687717465394}]' [146 bytes]
2023-06-25 21:24:25,155 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.7,"t":16...:23,"r":1687717465394}]' [293 bytes]
2023-06-25 21:24:25,155 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.5,"t":16...:23,"r":1687717465394}]' [447 bytes]
2023-06-25 21:24:25,155 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.8,"t":16...:23,"r":1687717465394}]' [146 bytes]
2023-06-25 21:24:25,155 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30382.8,"t":16...:23,"r":1687717465394}]' [145 bytes]
2023-06-25 21:24:25,155 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30383.2,"t":16...:23,"r":1687717465394}]' [149 bytes]
2023-06-25 21:24:25,155 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30383.8,"t":16...:23,"r":1687717465394}]' [147 bytes]
2023-06-25 21:24:25,156 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30384.5,"t":16...:23,"r":1687717465394}]' [151 bytes]
2023-06-25 21:24:25,156 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30384.9,"t":16...:23,"r":1687717465394}]' [151 bytes]
2023-06-25 21:24:25,156 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.1,"t":16...:23,"r":1687717465394}]' [151 bytes]
2023-06-25 21:24:25,156 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.4,"t":16...:23,"r":1687717465394}]' [151 bytes]
2023-06-25 21:24:25,156 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.4,"t":16...:23,"r":1687717465394}]' [301 bytes]
2023-06-25 21:24:25,156 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.8,"t":16...:23,"r":1687717465394}]' [151 bytes]
2023-06-25 21:24:25,156 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.9,"t":16...:23,"r":1687717465394}]' [146 bytes]
2023-06-25 21:24:25,156 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.4,"t":16...:23,"r":1687717465394}]' [151 bytes]
2023-06-25 21:24:25,156 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30386.5,"t":16...:23,"r":1687717465394}]' [151 bytes]
2023-06-25 21:24:25,156 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.2,"t":16...:23,"r":1687717465394}]' [151 bytes]
2023-06-25 21:24:25,156 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.2,"t":16...:23,"r":1687717465394}]' [151 bytes]
2023-06-25 21:24:25,156 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.2,"t":16...:23,"r":1687717465394}]' [151 bytes]
2023-06-25 21:24:25,157 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.4,"t":16...:23,"r":1687717465394}]' [151 bytes]
2023-06-25 21:24:25,157 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388,"t":1687...:23,"r":1687717465394}]' [149 bytes]
2023-06-25 21:24:25,157 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389,"t":1687...:23,"r":1687717465394}]' [145 bytes]
2023-06-25 21:24:25,157 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.9,"t":16...:23,"r":1687717465394}]' [296 bytes]
2023-06-25 21:24:25,157 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.1,"t":16...:23,"r":1687717465394}]' [151 bytes]
2023-06-25 21:24:26,009 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:24:26,009 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:24:26,311 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.73,"t":1...":1,"r":1687717466652}]' [124 bytes]
2023-06-25 21:24:27,381 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30392.44,"t":1...":1,"r":1687717467723}]' [123 bytes]
2023-06-25 21:24:28,640 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.75,"t":1...":1,"r":1687717468983}]' [117 bytes]
2023-06-25 21:24:28,641 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.75,"t":1...":1,"r":1687717468983}]' [237 bytes]
2023-06-25 21:24:28,650 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.75,"t":1...":1,"r":1687717468993}]' [122 bytes]
2023-06-25 21:24:29,477 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.4,"t":16...:23,"r":1687717469819}]' [148 bytes]
2023-06-25 21:24:29,594 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.84,"t":1...":1,"r":1687717469937}]' [123 bytes]
2023-06-25 21:24:29,803 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.84,"t":1...":1,"r":1687717470145}]' [123 bytes]
2023-06-25 21:24:29,870 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.84,"t":1...":1,"r":1687717470211}]' [124 bytes]
2023-06-25 21:24:30,279 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.84,"t":1...":1,"r":1687717470621}]' [124 bytes]
2023-06-25 21:24:30,310 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.84,"t":1...":1,"r":1687717470653}]' [122 bytes]
2023-06-25 21:24:31,009 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:24:31,009 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:24:31,479 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.83,"t":1...":1,"r":1687717471822}]' [124 bytes]
2023-06-25 21:24:32,116 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.84,"t":1...":1,"r":1687717472458}]' [120 bytes]
2023-06-25 21:24:33,869 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.49,"t":1...":1,"r":1687717474204}]' [124 bytes]
2023-06-25 21:24:33,869 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.48,"t":1...":1,"r":1687717474204}]' [123 bytes]
2023-06-25 21:24:33,972 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.43,"t":1...":1,"r":1687717474315}]' [123 bytes]
2023-06-25 21:24:35,560 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.42,"t":1...":1,"r":1687717475891}]' [118 bytes]
2023-06-25 21:24:35,560 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.9,"t":16...":1,"r":1687717475891}]' [362 bytes]
2023-06-25 21:24:35,828 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.95,"t":1...":1,"r":1687717476170}]' [118 bytes]
2023-06-25 21:24:35,849 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.68,"t":1...":1,"r":1687717476191}]' [120 bytes]
2023-06-25 21:24:35,851 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.84,"t":1...":1,"r":1687717476194}]' [121 bytes]
2023-06-25 21:24:35,854 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.84,"t":1...":1,"r":1687717476196}]' [118 bytes]
2023-06-25 21:24:35,855 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.84,"t":1...":1,"r":1687717476197}]' [124 bytes]
2023-06-25 21:24:35,859 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397.1,"t":16...":1,"r":1687717476201}]' [118 bytes]
2023-06-25 21:24:35,860 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397.1,"t":16...":1,"r":1687717476201}]' [122 bytes]
2023-06-25 21:24:35,872 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30397.86,"t":1...":1,"r":1687717476214}]' [124 bytes]
2023-06-25 21:24:36,009 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:24:36,009 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:24:36,349 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.42,"t":1...":1,"r":1687717476691}]' [122 bytes]
2023-06-25 21:24:36,349 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.06,"t":1...":1,"r":1687717476691}]' [124 bytes]
2023-06-25 21:24:36,547 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.04,"t":1...":1,"r":1687717476890}]' [124 bytes]
2023-06-25 21:24:36,623 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.04,"t":1...":1,"r":1687717476966}]' [123 bytes]
2023-06-25 21:24:37,385 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.38,"t":1...":1,"r":1687717477727}]' [122 bytes]
2023-06-25 21:24:37,710 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.09,"t":1...":1,"r":1687717478052}]' [123 bytes]
2023-06-25 21:24:37,710 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.09,"t":1...":1,"r":1687717478052}]' [361 bytes]
2023-06-25 21:24:37,711 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.94,"t":1...":1,"r":1687717478052}]' [123 bytes]
2023-06-25 21:24:37,899 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.5,"t":16...:23,"r":1687717478241}]' [297 bytes]
2023-06-25 21:24:38,674 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.92,"t":1...":1,"r":1687717479017}]' [124 bytes]
2023-06-25 21:24:39,363 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.89,"t":1...":1,"r":1687717479704}]' [122 bytes]
2023-06-25 21:24:39,363 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.91,"t":1...":1,"r":1687717479704}]' [124 bytes]
2023-06-25 21:24:39,688 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.36,"t":1...":1,"r":1687717480030}]' [124 bytes]
2023-06-25 21:24:39,993 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.39,"t":1...":1,"r":1687717480335}]' [124 bytes]
2023-06-25 21:24:41,010 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:24:41,010 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:24:41,467 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.83,"t":1...":1,"r":1687717481809}]' [123 bytes]
2023-06-25 21:24:41,846 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.52,"t":1...":1,"r":1687717482189}]' [122 bytes]
2023-06-25 21:24:41,847 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.52,"t":1...":1,"r":1687717482189}]' [604 bytes]
2023-06-25 21:24:41,993 DEBUG protocol 14776 21916 % sending keepalive ping
2023-06-25 21:24:41,993 DEBUG protocol 14776 21916 > PING 32 e1 f0 e6 [binary, 4 bytes]
2023-06-25 21:24:42,094 DEBUG protocol 14776 21916 < PONG 32 e1 f0 e6 [binary, 4 bytes]
2023-06-25 21:24:42,094 DEBUG protocol 14776 21916 % received keepalive pong
2023-06-25 21:24:42,293 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.49,"t":1...":1,"r":1687717482636}]' [124 bytes]
2023-06-25 21:24:42,742 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.9,"t":16...":1,"r":1687717483083}]' [123 bytes]
2023-06-25 21:24:43,878 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.4,"t":16...":1,"r":1687717484220}]' [123 bytes]
2023-06-25 21:24:44,049 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.36,"t":1...":1,"r":1687717484392}]' [122 bytes]
2023-06-25 21:24:44,050 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.37,"t":1...":1,"r":1687717484392}]' [245 bytes]
2023-06-25 21:24:45,361 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.39,"t":1...":1,"r":1687717485704}]' [124 bytes]
2023-06-25 21:24:46,009 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:24:46,009 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:24:46,292 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401,"t":1687...":6,"r":1687717486634}]' [121 bytes]
2023-06-25 21:24:46,301 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402,"t":1687...":6,"r":1687717486644}]' [121 bytes]
2023-06-25 21:24:47,056 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.36,"t":1...":1,"r":1687717487399}]' [124 bytes]
2023-06-25 21:24:47,575 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.36,"t":1...":1,"r":1687717487918}]' [124 bytes]
2023-06-25 21:24:47,607 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.36,"t":1...":1,"r":1687717487948}]' [122 bytes]
2023-06-25 21:24:47,928 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.56,"t":1...":1,"r":1687717488271}]' [124 bytes]
2023-06-25 21:24:48,649 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.01,"t":1...":1,"r":1687717488992}]' [124 bytes]
2023-06-25 21:24:48,917 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.01,"t":1...":1,"r":1687717489260}]' [123 bytes]
2023-06-25 21:24:51,009 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:24:51,009 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:24:51,847 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.74,"t":1...":1,"r":1687717492189}]' [124 bytes]
2023-06-25 21:24:52,037 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.74,"t":1...":1,"r":1687717492380}]' [124 bytes]
2023-06-25 21:24:52,450 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.19,"t":1...":1,"r":1687717492793}]' [120 bytes]
2023-06-25 21:24:53,247 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.5,"t":16...:23,"r":1687717493590}]' [151 bytes]
2023-06-25 21:24:53,317 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.6,"t":16...":1,"r":1687717493659}]' [122 bytes]
2023-06-25 21:24:53,619 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.61,"t":1...":1,"r":1687717493962}]' [124 bytes]
2023-06-25 21:24:54,088 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.63,"t":1...":1,"r":1687717494430}]' [124 bytes]
2023-06-25 21:24:54,299 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.51,"t":1...":1,"r":1687717494642}]' [124 bytes]
2023-06-25 21:24:55,462 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.97,"t":1...":1,"r":1687717495805}]' [124 bytes]
2023-06-25 21:24:55,630 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30381.4,"t":16...:23,"r":1687717495973}]' [294 bytes]
2023-06-25 21:24:55,631 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30379.4,"t":16...:23,"r":1687717495973}]' [1797 bytes]
2023-06-25 21:24:56,008 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:24:56,009 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:24:56,107 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.97,"t":1...":1,"r":1687717496450}]' [124 bytes]
2023-06-25 21:24:56,365 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.51,"t":1...":1,"r":1687717496708}]' [124 bytes]
2023-06-25 21:24:57,399 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.47,"t":1...":1,"r":1687717497742}]' [124 bytes]
2023-06-25 21:24:57,548 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.88,"t":1...":1,"r":1687717497891}]' [124 bytes]
2023-06-25 21:24:59,045 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.89,"t":1...":1,"r":1687717499388}]' [118 bytes]
2023-06-25 21:24:59,045 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.34,"t":1...":1,"r":1687717499388}]' [362 bytes]
2023-06-25 21:24:59,081 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.43,"t":1...":1,"r":1687717499424}]' [124 bytes]
2023-06-25 21:24:59,091 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.88,"t":1...":1,"r":1687717499433}]' [124 bytes]
2023-06-25 21:24:59,632 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.88,"t":1...":1,"r":1687717499976}]' [124 bytes]
2023-06-25 21:24:59,633 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.88,"t":1...":1,"r":1687717499976}]' [124 bytes]
2023-06-25 21:24:59,650 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.88,"t":1...":1,"r":1687717499993}]' [122 bytes]
2023-06-25 21:24:59,706 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.88,"t":1...":1,"r":1687717500047}]' [123 bytes]
2023-06-25 21:24:59,748 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.4,"t":16...":1,"r":1687717500090}]' [123 bytes]
2023-06-25 21:24:59,867 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.41,"t":1...":1,"r":1687717500210}]' [124 bytes]
2023-06-25 21:24:59,867 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30394.41,"t":1...":1,"r":1687717500210}]' [477 bytes]
2023-06-25 21:25:00,473 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.27,"t":1...":1,"r":1687717500811}]' [122 bytes]
2023-06-25 21:25:00,473 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.26,"t":1...":1,"r":1687717500811}]' [124 bytes]
2023-06-25 21:25:00,555 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.57,"t":1...":1,"r":1687717500898}]' [124 bytes]
2023-06-25 21:25:00,617 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.57,"t":1...":1,"r":1687717500960}]' [124 bytes]
2023-06-25 21:25:00,741 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.6,"t":16...":1,"r":1687717501084}]' [122 bytes]
2023-06-25 21:25:01,009 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:25:01,009 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:25:01,414 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.43,"t":1...":1,"r":1687717501718}]' [123 bytes]
2023-06-25 21:25:01,537 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.7,"t":16...":1,"r":1687717501880}]' [123 bytes]
2023-06-25 21:25:02,096 DEBUG protocol 14776 21916 % sending keepalive ping
2023-06-25 21:25:02,096 DEBUG protocol 14776 21916 > PING 0d ff f0 f4 [binary, 4 bytes]
2023-06-25 21:25:02,197 DEBUG protocol 14776 21916 < PONG 0d ff f0 f4 [binary, 4 bytes]
2023-06-25 21:25:02,197 DEBUG protocol 14776 21916 % received keepalive pong
2023-06-25 21:25:02,347 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.43,"t":1...":1,"r":1687717502690}]' [120 bytes]
2023-06-25 21:25:02,375 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396.43,"t":1...":1,"r":1687717502718}]' [123 bytes]
2023-06-25 21:25:02,564 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396,"t":1687...":6,"r":1687717502907}]' [116 bytes]
2023-06-25 21:25:02,580 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396,"t":1687...":6,"r":1687717502923}]' [121 bytes]
2023-06-25 21:25:02,581 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30396,"t":1687...":6,"r":1687717502924}]' [120 bytes]
2023-06-25 21:25:02,869 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.83,"t":1...":1,"r":1687717503212}]' [120 bytes]
2023-06-25 21:25:02,877 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.83,"t":1...":1,"r":1687717503220}]' [123 bytes]
2023-06-25 21:25:02,901 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.07,"t":1...":1,"r":1687717503245}]' [124 bytes]
2023-06-25 21:25:02,955 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398,"t":1687...":6,"r":1687717503299}]' [116 bytes]
2023-06-25 21:25:03,000 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398,"t":1687...":6,"r":1687717503343}]' [119 bytes]
2023-06-25 21:25:03,420 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399,"t":1687...":6,"r":1687717503763}]' [120 bytes]
2023-06-25 21:25:03,776 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.35,"t":1...":1,"r":1687717504119}]' [124 bytes]
2023-06-25 21:25:03,868 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380.5,"t":16...:23,"r":1687717504211}]' [297 bytes]
2023-06-25 21:25:04,387 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.4,"t":16...":1,"r":1687717504730}]' [122 bytes]
2023-06-25 21:25:04,822 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.42,"t":1...":1,"r":1687717505165}]' [124 bytes]
2023-06-25 21:25:05,383 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.39,"t":1...":1,"r":1687717505727}]' [123 bytes]
2023-06-25 21:25:05,483 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.39,"t":1...":1,"r":1687717505826}]' [122 bytes]
2023-06-25 21:25:05,484 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.4,"t":16...":1,"r":1687717505826}]' [1222 bytes]
2023-06-25 21:25:05,520 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.83,"t":1...":1,"r":1687717505864}]' [124 bytes]
2023-06-25 21:25:05,743 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.79,"t":1...":1,"r":1687717506087}]' [120 bytes]
2023-06-25 21:25:05,760 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.79,"t":1...":1,"r":1687717506103}]' [124 bytes]
2023-06-25 21:25:05,762 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.79,"t":1...":1,"r":1687717506103}]' [365 bytes]
2023-06-25 21:25:05,762 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.93,"t":1...":1,"r":1687717506103}]' [363 bytes]
2023-06-25 21:25:05,767 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.94,"t":1...":1,"r":1687717506110}]' [124 bytes]
2023-06-25 21:25:05,773 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.14,"t":1...":1,"r":1687717506116}]' [120 bytes]
2023-06-25 21:25:05,776 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.14,"t":1...":1,"r":1687717506120}]' [120 bytes]
2023-06-25 21:25:05,782 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.14,"t":1...":1,"r":1687717506126}]' [120 bytes]
2023-06-25 21:25:06,008 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:25:06,009 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:25:06,181 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30380.5,"t":16...:23,"r":1687717506524}]' [151 bytes]
2023-06-25 21:25:06,389 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.69,"t":1...":1,"r":1687717506733}]' [122 bytes]
2023-06-25 21:25:06,391 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.36,"t":1...":1,"r":1687717506734}]' [247 bytes]
2023-06-25 21:25:06,560 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404,"t":1687...":6,"r":1687717506903}]' [120 bytes]
2023-06-25 21:25:06,578 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404,"t":1687...":6,"r":1687717506922}]' [121 bytes]
2023-06-25 21:25:06,594 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407,"t":1687...":6,"r":1687717506937}]' [115 bytes]
2023-06-25 21:25:06,594 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407,"t":1687...":6,"r":1687717506939}]' [120 bytes]
2023-06-25 21:25:07,344 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.05,"t":1...":1,"r":1687717507687}]' [124 bytes]
2023-06-25 21:25:07,389 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.35,"t":1...":1,"r":1687717507733}]' [122 bytes]
2023-06-25 21:25:07,446 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.04,"t":1...":1,"r":1687717507789}]' [124 bytes]
2023-06-25 21:25:07,458 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.58,"t":1...":1,"r":1687717507800}]' [124 bytes]
2023-06-25 21:25:07,459 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.04,"t":1...":1,"r":1687717507801}]' [124 bytes]
2023-06-25 21:25:07,606 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.79,"t":1...":1,"r":1687717507949}]' [122 bytes]
2023-06-25 21:25:07,607 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.79,"t":1...":1,"r":1687717507949}]' [602 bytes]
2023-06-25 21:25:07,710 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.86,"t":1...":1,"r":1687717508054}]' [123 bytes]
2023-06-25 21:25:08,389 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.54,"t":1...":1,"r":1687717508732}]' [122 bytes]
2023-06-25 21:25:08,389 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.54,"t":1...":1,"r":1687717508732}]' [122 bytes]
2023-06-25 21:25:08,744 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.02,"t":1...":1,"r":1687717509087}]' [124 bytes]
2023-06-25 21:25:09,123 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.01,"t":1...":1,"r":1687717509467}]' [124 bytes]
2023-06-25 21:25:09,383 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.01,"t":1...":1,"r":1687717509726}]' [123 bytes]
2023-06-25 21:25:09,836 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.02,"t":1...":1,"r":1687717510180}]' [124 bytes]
2023-06-25 21:25:10,193 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.07,"t":1...":1,"r":1687717510537}]' [119 bytes]
2023-06-25 21:25:10,193 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.07,"t":1...":1,"r":1687717510537}]' [124 bytes]
2023-06-25 21:25:10,384 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.03,"t":1...":1,"r":1687717510727}]' [120 bytes]
2023-06-25 21:25:10,782 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.36,"t":1...":1,"r":1687717511119}]' [122 bytes]
2023-06-25 21:25:11,008 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:25:11,008 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:25:11,213 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.72,"t":1...":1,"r":1687717511557}]' [118 bytes]
2023-06-25 21:25:11,213 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.71,"t":1...":1,"r":1687717511557}]' [123 bytes]
2023-06-25 21:25:11,385 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.46,"t":1...":1,"r":1687717511729}]' [123 bytes]
2023-06-25 21:25:11,394 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.46,"t":1...":1,"r":1687717511737}]' [123 bytes]
2023-06-25 21:25:11,395 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.46,"t":1...":1,"r":1687717511737}]' [733 bytes]
2023-06-25 21:25:11,422 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.58,"t":1...":1,"r":1687717511765}]' [121 bytes]
2023-06-25 21:25:11,432 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.58,"t":1...":1,"r":1687717511776}]' [121 bytes]
2023-06-25 21:25:11,489 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408,"t":1687...":2,"r":1687717511832}]' [232 bytes]
2023-06-25 21:25:11,543 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408,"t":1687...":2,"r":1687717511886}]' [116 bytes]
2023-06-25 21:25:11,543 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408,"t":1687...":2,"r":1687717511886}]' [117 bytes]
2023-06-25 21:25:12,177 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.48,"t":1...":1,"r":1687717512521}]' [123 bytes]
2023-06-25 21:25:12,262 INFO autoreload 14776 13304 C:\Users\Evert\Desktop\Django\monreal\trading\data_feed.py changed, reloading.
2023-06-25 21:25:12,544 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.18,"t":1...":1,"r":1687717512888}]' [122 bytes]
2023-06-25 21:25:12,544 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.19,"t":1...":1,"r":1687717512888}]' [124 bytes]
2023-06-25 21:25:12,724 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409,"t":1687...":6,"r":1687717513067}]' [121 bytes]
2023-06-25 21:25:12,923 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418,"t":1687...":2,"r":1687717513266}]' [117 bytes]
2023-06-25 21:25:12,967 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409,"t":1687...":6,"r":1687717513309}]' [121 bytes]
2023-06-25 21:25:13,014 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418,"t":1687...":2,"r":1687717513358}]' [117 bytes]
2023-06-25 21:25:13,607 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.24,"t":1...":1,"r":1687717513950}]' [124 bytes]
2023-06-25 21:25:14,677 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.45,"t":1...":1,"r":1687717515021}]' [124 bytes]
2023-06-25 21:25:15,477 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414,"t":1687...":6,"r":1687717515820}]' [118 bytes]
2023-06-25 21:25:15,528 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.51,"t":1...":1,"r":1687717515871}]' [124 bytes]
2023-06-25 21:25:16,010 DEBUG protocol 14776 21916 < PING '' [0 bytes]
2023-06-25 21:25:16,010 DEBUG protocol 14776 21916 > PONG '' [0 bytes]
2023-06-25 21:25:16,147 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.39,"t":1...":1,"r":1687717516490}]' [121 bytes]
2023-06-25 21:25:16,213 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.58,"t":1...":1,"r":1687717516552}]' [120 bytes]
2023-06-25 21:25:16,366 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.45,"t":1...":1,"r":1687717516709}]' [121 bytes]
2023-06-25 21:25:16,406 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.26,"t":1...":1,"r":1687717516750}]' [123 bytes]
2023-06-25 21:25:16,777 DEBUG protocol 14776 21916 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.14,"t":1...":1,"r":1687717517120}]' [124 bytes]
2023-06-25 21:25:55,956 INFO autoreload 22060 19052 Watching for file changes with StatReloader
2023-06-25 21:25:56,183 DEBUG proactor_events 22060 15808 Using proactor: IocpProactor
2023-06-25 21:25:56,186 DEBUG __init__ 22060 15808 connect: wss://socket.polygon.io/crypto
2023-06-25 21:25:56,352 DEBUG protocol 22060 15808 = connection is CONNECTING
2023-06-25 21:25:56,460 DEBUG client 22060 15808 > GET /crypto HTTP/1.1
2023-06-25 21:25:56,460 DEBUG client 22060 15808 > Host: socket.polygon.io
2023-06-25 21:25:56,460 DEBUG client 22060 15808 > Upgrade: websocket
2023-06-25 21:25:56,460 DEBUG client 22060 15808 > Connection: Upgrade
2023-06-25 21:25:56,460 DEBUG client 22060 15808 > Sec-WebSocket-Key: r2OeSu/6Yc0WJ3o8RYvE+Q==
2023-06-25 21:25:56,460 DEBUG client 22060 15808 > Sec-WebSocket-Version: 13
2023-06-25 21:25:56,460 DEBUG client 22060 15808 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:25:56,460 DEBUG client 22060 15808 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:25:56,664 DEBUG client 22060 15808 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:25:56,665 DEBUG client 22060 15808 < Server: nginx/1.19.2
2023-06-25 21:25:56,665 DEBUG client 22060 15808 < Date: Sun, 25 Jun 2023 18:25:57 GMT
2023-06-25 21:25:56,665 DEBUG client 22060 15808 < Connection: upgrade
2023-06-25 21:25:56,665 DEBUG client 22060 15808 < Upgrade: websocket
2023-06-25 21:25:56,665 DEBUG client 22060 15808 < Sec-WebSocket-Accept: vCxJQsMO1m0P/KnkPkZtw3lFARo=
2023-06-25 21:25:56,665 DEBUG client 22060 15808 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:25:56,665 DEBUG protocol 22060 15808 = connection is OPEN
2023-06-25 21:25:56,666 DEBUG protocol 22060 15808 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:25:56,666 DEBUG __init__ 22060 15808 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:25:56,666 DEBUG __init__ 22060 15808 authing...
2023-06-25 21:25:56,667 DEBUG protocol 22060 15808 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:25:56,773 DEBUG protocol 22060 15808 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:25:56,773 DEBUG __init__ 22060 15808 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:25:56,773 DEBUG __init__ 22060 15808 reconciling: set() {'XT.BTC-USD'}
2023-06-25 21:25:56,774 DEBUG __init__ 22060 15808 subbing: XT.BTC-USD
2023-06-25 21:25:56,774 DEBUG protocol 22060 15808 > TEXT '{"action": "subscribe", "params": "XT.BTC-USD"}' [47 bytes]
2023-06-25 21:25:56,876 DEBUG protocol 22060 15808 < TEXT '[{"ev":"status","status":"success","message":"s...ribed to: XT.BTC-USD"}]' [74 bytes]
2023-06-25 21:25:56,876 DEBUG __init__ 22060 15808 status: subscribed to: XT.BTC-USD
2023-06-25 21:25:57,097 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30426.57,"t":1...":1,"r":1687717557441}]' [124 bytes]
2023-06-25 21:25:59,243 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30426.28,"t":1...":1,"r":1687717559588}]' [118 bytes]
2023-06-25 21:25:59,244 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30426.28,"t":1...":1,"r":1687717559588}]' [124 bytes]
2023-06-25 21:25:59,788 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30426.94,"t":1...":1,"r":1687717560133}]' [124 bytes]
2023-06-25 21:26:00,703 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30426.94,"t":1...":1,"r":1687717561048}]' [123 bytes]
2023-06-25 21:26:00,810 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.5,"t":16...:23,"r":1687717561154}]' [299 bytes]
2023-06-25 21:26:00,811 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.5,"t":16...:23,"r":1687717561154}]' [301 bytes]
2023-06-25 21:26:00,933 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30426.94,"t":1...":1,"r":1687717561278}]' [124 bytes]
2023-06-25 21:26:01,665 DEBUG protocol 22060 15808 < PING '' [0 bytes]
2023-06-25 21:26:01,665 DEBUG protocol 22060 15808 > PONG '' [0 bytes]
2023-06-25 21:26:02,416 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30427.74,"t":1...":1,"r":1687717562760}]' [124 bytes]
2023-06-25 21:26:02,959 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30428.52,"t":1...":1,"r":1687717563302}]' [124 bytes]
2023-06-25 21:26:03,751 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30426.97,"t":1...":1,"r":1687717564096}]' [122 bytes]
2023-06-25 21:26:03,752 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30426.97,"t":1...":1,"r":1687717564096}]' [838 bytes]
2023-06-25 21:26:04,399 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30425.9,"t":16...":1,"r":1687717564744}]' [123 bytes]
2023-06-25 21:26:04,947 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30425.99,"t":1...":1,"r":1687717565291}]' [124 bytes]
2023-06-25 21:26:06,526 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30428.69,"t":1...":1,"r":1687717566870}]' [118 bytes]
2023-06-25 21:26:06,526 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30428.69,"t":1...":1,"r":1687717566870}]' [123 bytes]
2023-06-25 21:26:06,664 DEBUG protocol 22060 15808 < PING '' [0 bytes]
2023-06-25 21:26:06,664 DEBUG protocol 22060 15808 > PONG '' [0 bytes]
2023-06-25 21:26:07,672 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30429,"t":1687...":6,"r":1687717568016}]' [121 bytes]
2023-06-25 21:26:07,935 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30429.26,"t":1...":1,"r":1687717568280}]' [123 bytes]
2023-06-25 21:26:08,366 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30429.25,"t":1...":1,"r":1687717568710}]' [240 bytes]
2023-06-25 21:26:08,521 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30427.27,"t":1...":1,"r":1687717568866}]' [124 bytes]
2023-06-25 21:26:09,269 DEBUG proactor_events 4600 3408 Using proactor: IocpProactor
2023-06-25 21:26:09,272 DEBUG __init__ 4600 3408 connect: wss://socket.polygon.io/crypto
2023-06-25 21:26:09,295 DEBUG functional 4600 4024 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-25 21:26:09,295 DEBUG functional 4600 4024 
def backend_cleanup():
    return 1

2023-06-25 21:26:09,296 DEBUG functional 4600 4024 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-25 21:26:09,296 DEBUG functional 4600 4024 
def xmap(task, it):
    return 1

2023-06-25 21:26:09,296 DEBUG functional 4600 4024 
def chain(*args, **kwargs):
    return 1

2023-06-25 21:26:09,297 DEBUG functional 4600 4024 
def debug_task(self):
    return 1

2023-06-25 21:26:09,297 DEBUG functional 4600 4024 
def xstarmap(task, it):
    return 1

2023-06-25 21:26:09,297 DEBUG functional 4600 4024 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-25 21:26:09,298 DEBUG functional 4600 4024 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-25 21:26:09,298 DEBUG functional 4600 4024 
def chunks(task, it, n):
    return 1

2023-06-25 21:26:09,298 DEBUG functional 4600 4024 
def get_current_buy_price(symbol):
    return 1

2023-06-25 21:26:09,394 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30426.03,"t":1...":1,"r":1687717569739}]' [124 bytes]
2023-06-25 21:26:09,495 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.9,"t":16...:23,"r":1687717569838}]' [296 bytes]
2023-06-25 21:26:09,495 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.1,"t":16...:23,"r":1687717569838}]' [1620 bytes]
2023-06-25 21:26:09,495 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414.2,"t":16...:23,"r":1687717569838}]' [151 bytes]
2023-06-25 21:26:09,495 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414.3,"t":16...:23,"r":1687717569838}]' [146 bytes]
2023-06-25 21:26:09,495 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414.4,"t":16...:23,"r":1687717569838}]' [441 bytes]
2023-06-25 21:26:09,496 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30416,"t":1687...:23,"r":1687717569838}]' [149 bytes]
2023-06-25 21:26:09,519 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30426.03,"t":1...":1,"r":1687717569864}]' [124 bytes]
2023-06-25 21:26:09,525 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30426.03,"t":1...":1,"r":1687717569870}]' [124 bytes]
2023-06-25 21:26:10,294 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30426.02,"t":1...":1,"r":1687717570638}]' [123 bytes]
2023-06-25 21:26:10,295 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30426.02,"t":1...":1,"r":1687717570638}]' [608 bytes]
2023-06-25 21:26:10,953 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30426.02,"t":1...":1,"r":1687717571297}]' [124 bytes]
2023-06-25 21:26:11,221 DEBUG proactor_events 8788 16072 Using proactor: IocpProactor
2023-06-25 21:26:11,224 DEBUG __init__ 8788 16072 connect: wss://socket.polygon.io/crypto
2023-06-25 21:26:11,233 DEBUG proactor_events 16196 10248 Using proactor: IocpProactor
2023-06-25 21:26:11,236 DEBUG __init__ 16196 10248 connect: wss://socket.polygon.io/crypto
2023-06-25 21:26:11,664 DEBUG protocol 22060 15808 < PING '' [0 bytes]
2023-06-25 21:26:11,664 DEBUG protocol 22060 15808 > PONG '' [0 bytes]
2023-06-25 21:26:11,836 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30426.03,"t":1...":1,"r":1687717572182}]' [124 bytes]
2023-06-25 21:26:11,870 DEBUG protocol 22060 15808 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 21:26:11,870 DEBUG protocol 22060 15808 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:26:11,870 DEBUG protocol 22060 15808 = connection is CLOSING
2023-06-25 21:26:11,870 DEBUG protocol 22060 15808 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:26:11,870 DEBUG protocol 22060 15808 = connection is CLOSED
2023-06-25 21:26:11,870 DEBUG __init__ 22060 15808 status: Maximum number of connections exceeded.
2023-06-25 21:26:11,871 DEBUG protocol 22060 15808 x closing TCP connection
2023-06-25 21:26:11,871 DEBUG __init__ 22060 15808 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 21:26:11,975 DEBUG protocol 22060 15808 = connection is CONNECTING
2023-06-25 21:26:12,081 DEBUG client 22060 15808 > GET /crypto HTTP/1.1
2023-06-25 21:26:12,081 DEBUG client 22060 15808 > Host: socket.polygon.io
2023-06-25 21:26:12,081 DEBUG client 22060 15808 > Upgrade: websocket
2023-06-25 21:26:12,081 DEBUG client 22060 15808 > Connection: Upgrade
2023-06-25 21:26:12,082 DEBUG client 22060 15808 > Sec-WebSocket-Key: yzT/jG0jXszZ3+YnHtyawA==
2023-06-25 21:26:12,082 DEBUG client 22060 15808 > Sec-WebSocket-Version: 13
2023-06-25 21:26:12,082 DEBUG client 22060 15808 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:26:12,082 DEBUG client 22060 15808 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:26:12,284 DEBUG client 22060 15808 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:26:12,284 DEBUG client 22060 15808 < Server: nginx/1.19.2
2023-06-25 21:26:12,284 DEBUG client 22060 15808 < Date: Sun, 25 Jun 2023 18:26:12 GMT
2023-06-25 21:26:12,284 DEBUG client 22060 15808 < Connection: upgrade
2023-06-25 21:26:12,284 DEBUG client 22060 15808 < Upgrade: websocket
2023-06-25 21:26:12,284 DEBUG client 22060 15808 < Sec-WebSocket-Accept: 7k9x4oL3AhqNyREiEeN+j+wg8wU=
2023-06-25 21:26:12,284 DEBUG client 22060 15808 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:26:12,284 DEBUG protocol 22060 15808 = connection is OPEN
2023-06-25 21:26:12,285 DEBUG protocol 22060 15808 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:26:12,285 DEBUG __init__ 22060 15808 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:26:12,285 DEBUG __init__ 22060 15808 authing...
2023-06-25 21:26:12,285 DEBUG protocol 22060 15808 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:26:12,388 DEBUG protocol 22060 15808 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:26:12,388 DEBUG __init__ 22060 15808 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:26:12,388 DEBUG __init__ 22060 15808 reconciling: set() {'XT.BTC-USD'}
2023-06-25 21:26:12,389 DEBUG __init__ 22060 15808 subbing: XT.BTC-USD
2023-06-25 21:26:12,389 DEBUG protocol 22060 15808 > TEXT '{"action": "subscribe", "params": "XT.BTC-USD"}' [47 bytes]
2023-06-25 21:26:12,491 DEBUG protocol 22060 15808 < TEXT '[{"ev":"status","status":"success","message":"s...ribed to: XT.BTC-USD"}]' [74 bytes]
2023-06-25 21:26:12,492 DEBUG __init__ 22060 15808 status: subscribed to: XT.BTC-USD
2023-06-25 21:26:12,795 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30423.96,"t":1...":1,"r":1687717573141}]' [118 bytes]
2023-06-25 21:26:12,796 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30423.96,"t":1...":1,"r":1687717573141}]' [123 bytes]
2023-06-25 21:26:13,067 DEBUG proactor_events 8032 17416 Using proactor: IocpProactor
2023-06-25 21:26:13,070 DEBUG __init__ 8032 17416 connect: wss://socket.polygon.io/crypto
2023-06-25 21:26:13,164 DEBUG proactor_events 22180 16752 Using proactor: IocpProactor
2023-06-25 21:26:13,167 DEBUG __init__ 22180 16752 connect: wss://socket.polygon.io/crypto
2023-06-25 21:26:13,760 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30423.96,"t":1...":1,"r":1687717574104}]' [118 bytes]
2023-06-25 21:26:13,760 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30423.96,"t":1...":1,"r":1687717574104}]' [124 bytes]
2023-06-25 21:26:14,751 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30423.96,"t":1...":1,"r":1687717575096}]' [124 bytes]
2023-06-25 21:26:15,490 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30426.23,"t":1...":1,"r":1687717575835}]' [124 bytes]
2023-06-25 21:26:15,716 DEBUG proactor_events 9744 18732 Using proactor: IocpProactor
2023-06-25 21:26:15,719 DEBUG __init__ 9744 18732 connect: wss://socket.polygon.io/crypto
2023-06-25 21:26:15,724 DEBUG proactor_events 10800 19344 Using proactor: IocpProactor
2023-06-25 21:26:15,727 DEBUG __init__ 10800 19344 connect: wss://socket.polygon.io/crypto
2023-06-25 21:26:15,892 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30429,"t":1687...":6,"r":1687717576236}]' [121 bytes]
2023-06-25 21:26:16,081 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30426.22,"t":1...":1,"r":1687717576426}]' [123 bytes]
2023-06-25 21:26:16,661 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30424.43,"t":1...":1,"r":1687717577006}]' [124 bytes]
2023-06-25 21:26:16,884 DEBUG protocol 22060 15808 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 21:26:16,884 DEBUG protocol 22060 15808 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:26:16,884 DEBUG protocol 22060 15808 = connection is CLOSING
2023-06-25 21:26:16,884 DEBUG protocol 22060 15808 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:26:16,884 DEBUG protocol 22060 15808 = connection is CLOSED
2023-06-25 21:26:16,884 DEBUG __init__ 22060 15808 status: Maximum number of connections exceeded.
2023-06-25 21:26:16,885 DEBUG protocol 22060 15808 x closing TCP connection
2023-06-25 21:26:16,885 DEBUG __init__ 22060 15808 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 21:26:16,990 DEBUG protocol 22060 15808 = connection is CONNECTING
2023-06-25 21:26:17,095 DEBUG client 22060 15808 > GET /crypto HTTP/1.1
2023-06-25 21:26:17,095 DEBUG client 22060 15808 > Host: socket.polygon.io
2023-06-25 21:26:17,095 DEBUG client 22060 15808 > Upgrade: websocket
2023-06-25 21:26:17,095 DEBUG client 22060 15808 > Connection: Upgrade
2023-06-25 21:26:17,095 DEBUG client 22060 15808 > Sec-WebSocket-Key: U/1q2nh+0xzmIT33bCyvdA==
2023-06-25 21:26:17,095 DEBUG client 22060 15808 > Sec-WebSocket-Version: 13
2023-06-25 21:26:17,095 DEBUG client 22060 15808 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:26:17,095 DEBUG client 22060 15808 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:26:17,306 DEBUG client 22060 15808 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:26:17,306 DEBUG client 22060 15808 < Server: nginx/1.19.2
2023-06-25 21:26:17,306 DEBUG client 22060 15808 < Date: Sun, 25 Jun 2023 18:26:17 GMT
2023-06-25 21:26:17,306 DEBUG client 22060 15808 < Connection: upgrade
2023-06-25 21:26:17,306 DEBUG client 22060 15808 < Upgrade: websocket
2023-06-25 21:26:17,306 DEBUG client 22060 15808 < Sec-WebSocket-Accept: umnjNIZgWcXzCsusaSZxDM5Cw0E=
2023-06-25 21:26:17,306 DEBUG client 22060 15808 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:26:17,307 DEBUG protocol 22060 15808 = connection is OPEN
2023-06-25 21:26:17,307 DEBUG protocol 22060 15808 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:26:17,307 DEBUG __init__ 22060 15808 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:26:17,307 DEBUG __init__ 22060 15808 authing...
2023-06-25 21:26:17,307 DEBUG protocol 22060 15808 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:26:17,410 DEBUG protocol 22060 15808 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:26:17,410 DEBUG __init__ 22060 15808 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:26:17,410 DEBUG __init__ 22060 15808 reconciling: set() {'XT.BTC-USD'}
2023-06-25 21:26:17,411 DEBUG __init__ 22060 15808 subbing: XT.BTC-USD
2023-06-25 21:26:17,411 DEBUG protocol 22060 15808 > TEXT '{"action": "subscribe", "params": "XT.BTC-USD"}' [47 bytes]
2023-06-25 21:26:17,514 DEBUG protocol 22060 15808 < TEXT '[{"ev":"status","status":"success","message":"s...ribed to: XT.BTC-USD"}]' [74 bytes]
2023-06-25 21:26:17,514 DEBUG __init__ 22060 15808 status: subscribed to: XT.BTC-USD
2023-06-25 21:26:17,712 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30423.06,"t":1...":1,"r":1687717578056}]' [123 bytes]
2023-06-25 21:26:17,994 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421.73,"t":1...":1,"r":1687717578339}]' [122 bytes]
2023-06-25 21:26:17,995 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421.7,"t":16...":1,"r":1687717578340}]' [365 bytes]
2023-06-25 21:26:17,998 DEBUG proactor_events 13540 11888 Using proactor: IocpProactor
2023-06-25 21:26:18,001 DEBUG __init__ 13540 11888 connect: wss://socket.polygon.io/crypto
2023-06-25 21:26:18,062 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421.51,"t":1...":1,"r":1687717578406}]' [124 bytes]
2023-06-25 21:26:18,634 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421.51,"t":1...":1,"r":1687717578978}]' [122 bytes]
2023-06-25 21:26:18,634 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421.51,"t":1...":1,"r":1687717578978}]' [366 bytes]
2023-06-25 21:26:19,171 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30422.27,"t":1...":1,"r":1687717579516}]' [124 bytes]
2023-06-25 21:26:19,180 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30422.27,"t":1...":1,"r":1687717579525}]' [124 bytes]
2023-06-25 21:26:20,029 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30423.23,"t":1...":1,"r":1687717580374}]' [123 bytes]
2023-06-25 21:26:20,656 DEBUG protocol 22060 15808 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30423.33,"t":1...":1,"r":1687717580998}]' [123 bytes]
2023-06-25 21:27:49,063 INFO autoreload 22268 21644 Watching for file changes with StatReloader
2023-06-25 21:27:49,288 DEBUG proactor_events 22268 13044 Using proactor: IocpProactor
2023-06-25 21:27:49,291 DEBUG __init__ 22268 13044 connect: wss://socket.polygon.io/crypto
2023-06-25 21:27:49,454 DEBUG protocol 22268 13044 = connection is CONNECTING
2023-06-25 21:27:49,557 DEBUG client 22268 13044 > GET /crypto HTTP/1.1
2023-06-25 21:27:49,557 DEBUG client 22268 13044 > Host: socket.polygon.io
2023-06-25 21:27:49,557 DEBUG client 22268 13044 > Upgrade: websocket
2023-06-25 21:27:49,557 DEBUG client 22268 13044 > Connection: Upgrade
2023-06-25 21:27:49,557 DEBUG client 22268 13044 > Sec-WebSocket-Key: wYYhN/NNWcEU7MH38wh5HA==
2023-06-25 21:27:49,557 DEBUG client 22268 13044 > Sec-WebSocket-Version: 13
2023-06-25 21:27:49,557 DEBUG client 22268 13044 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:27:49,557 DEBUG client 22268 13044 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:27:49,753 DEBUG client 22268 13044 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:27:49,753 DEBUG client 22268 13044 < Server: nginx/1.19.2
2023-06-25 21:27:49,753 DEBUG client 22268 13044 < Date: Sun, 25 Jun 2023 18:27:50 GMT
2023-06-25 21:27:49,753 DEBUG client 22268 13044 < Connection: upgrade
2023-06-25 21:27:49,753 DEBUG client 22268 13044 < Upgrade: websocket
2023-06-25 21:27:49,753 DEBUG client 22268 13044 < Sec-WebSocket-Accept: Gq6YT3TVDyd5rJPixKEY4tfL970=
2023-06-25 21:27:49,753 DEBUG client 22268 13044 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:27:49,753 DEBUG protocol 22268 13044 = connection is OPEN
2023-06-25 21:27:49,754 DEBUG protocol 22268 13044 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:27:49,754 DEBUG __init__ 22268 13044 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:27:49,754 DEBUG __init__ 22268 13044 authing...
2023-06-25 21:27:49,755 DEBUG protocol 22268 13044 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:27:49,871 DEBUG protocol 22268 13044 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:27:49,872 DEBUG __init__ 22268 13044 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:27:49,872 DEBUG __init__ 22268 13044 reconciling: set() {'XT.BTC-USD'}
2023-06-25 21:27:49,872 DEBUG __init__ 22268 13044 subbing: XT.BTC-USD
2023-06-25 21:27:49,873 DEBUG protocol 22268 13044 > TEXT '{"action": "subscribe", "params": "XT.BTC-USD"}' [47 bytes]
2023-06-25 21:27:49,972 DEBUG protocol 22268 13044 < TEXT '[{"ev":"status","status":"success","message":"s...ribed to: XT.BTC-USD"}]' [74 bytes]
2023-06-25 21:27:49,972 DEBUG __init__ 22268 13044 status: subscribed to: XT.BTC-USD
2023-06-25 21:27:50,053 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414.85,"t":1...":1,"r":1687717670400}]' [120 bytes]
2023-06-25 21:27:50,053 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414.85,"t":1...":1,"r":1687717670401}]' [124 bytes]
2023-06-25 21:27:51,000 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415.35,"t":1...":1,"r":1687717671347}]' [124 bytes]
2023-06-25 21:27:51,156 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.5,"t":16...":1,"r":1687717671504}]' [123 bytes]
2023-06-25 21:27:51,157 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.49,"t":1...":1,"r":1687717671504}]' [842 bytes]
2023-06-25 21:27:51,158 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.17,"t":1...":1,"r":1687717671506}]' [367 bytes]
2023-06-25 21:27:52,056 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.97,"t":1...":1,"r":1687717672404}]' [122 bytes]
2023-06-25 21:27:53,103 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415.33,"t":1...":1,"r":1687717673450}]' [124 bytes]
2023-06-25 21:27:53,468 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415.78,"t":1...":1,"r":1687717673815}]' [124 bytes]
2023-06-25 21:27:53,879 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415.77,"t":1...":1,"r":1687717674226}]' [123 bytes]
2023-06-25 21:27:54,375 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417,"t":1687...":6,"r":1687717674722}]' [121 bytes]
2023-06-25 21:27:54,457 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.03,"t":1...":1,"r":1687717674804}]' [124 bytes]
2023-06-25 21:27:54,753 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:27:54,753 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:27:55,211 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.03,"t":1...":1,"r":1687717675558}]' [124 bytes]
2023-06-25 21:27:55,287 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415.79,"t":1...":1,"r":1687717675634}]' [123 bytes]
2023-06-25 21:27:55,701 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.31,"t":1...":1,"r":1687717676048}]' [124 bytes]
2023-06-25 21:27:55,882 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.05,"t":1...":1,"r":1687717676229}]' [124 bytes]
2023-06-25 21:27:55,961 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.05,"t":1...":1,"r":1687717676309}]' [124 bytes]
2023-06-25 21:27:55,962 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.07,"t":1...":1,"r":1687717676309}]' [243 bytes]
2023-06-25 21:27:56,228 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419.41,"t":1...":1,"r":1687717676576}]' [122 bytes]
2023-06-25 21:27:56,229 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419.41,"t":1...":1,"r":1687717676576}]' [124 bytes]
2023-06-25 21:27:56,465 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419.39,"t":1...":1,"r":1687717676812}]' [123 bytes]
2023-06-25 21:27:56,524 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419.39,"t":1...":1,"r":1687717676872}]' [124 bytes]
2023-06-25 21:27:56,720 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419,"t":1687...":6,"r":1687717677067}]' [120 bytes]
2023-06-25 21:27:56,730 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414,"t":1687...":6,"r":1687717677078}]' [121 bytes]
2023-06-25 21:27:57,574 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419,"t":1687...":1,"r":1687717677921}]' [121 bytes]
2023-06-25 21:27:58,350 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.94,"t":1...":1,"r":1687717678697}]' [118 bytes]
2023-06-25 21:27:58,351 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.95,"t":1...":1,"r":1687717678697}]' [487 bytes]
2023-06-25 21:27:58,963 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.75,"t":1...":1,"r":1687717679311}]' [124 bytes]
2023-06-25 21:27:59,663 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.34,"t":1...":1,"r":1687717680011}]' [122 bytes]
2023-06-25 21:27:59,664 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.34,"t":1...":1,"r":1687717680011}]' [600 bytes]
2023-06-25 21:27:59,753 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:27:59,753 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:28:00,205 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419,"t":1687...":6,"r":1687717680553}]' [121 bytes]
2023-06-25 21:28:00,538 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421,"t":1687...":6,"r":1687717680858}]' [121 bytes]
2023-06-25 21:28:00,645 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30420.22,"t":1...":1,"r":1687717680983}]' [124 bytes]
2023-06-25 21:28:00,682 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30420.22,"t":1...":1,"r":1687717681029}]' [124 bytes]
2023-06-25 21:28:01,383 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.9,"t":16...:23,"r":1687717681730}]' [299 bytes]
2023-06-25 21:28:01,558 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30420.09,"t":1...":1,"r":1687717681905}]' [124 bytes]
2023-06-25 21:28:01,941 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.17,"t":1...":1,"r":1687717682289}]' [124 bytes]
2023-06-25 21:28:02,488 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415.87,"t":1...":1,"r":1687717682835}]' [121 bytes]
2023-06-25 21:28:02,488 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415.7,"t":16...":1,"r":1687717682835}]' [123 bytes]
2023-06-25 21:28:02,505 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415.7,"t":16...":1,"r":1687717682852}]' [123 bytes]
2023-06-25 21:28:02,963 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414,"t":1687...":1,"r":1687717683310}]' [121 bytes]
2023-06-25 21:28:03,729 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.05,"t":1...":1,"r":1687717684076}]' [124 bytes]
2023-06-25 21:28:04,566 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.48,"t":1...":1,"r":1687717684913}]' [124 bytes]
2023-06-25 21:28:04,753 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:28:04,753 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:28:05,323 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.48,"t":1...":1,"r":1687717685670}]' [124 bytes]
2023-06-25 21:28:05,504 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.29,"t":1...":1,"r":1687717685851}]' [123 bytes]
2023-06-25 21:28:05,504 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414.79,"t":1...":1,"r":1687717685851}]' [124 bytes]
2023-06-25 21:28:05,570 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.48,"t":1...":1,"r":1687717685917}]' [123 bytes]
2023-06-25 21:28:05,872 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.99,"t":1...":1,"r":1687717686220}]' [123 bytes]
2023-06-25 21:28:05,965 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.98,"t":1...":1,"r":1687717686312}]' [124 bytes]
2023-06-25 21:28:06,408 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.98,"t":1...":1,"r":1687717686756}]' [124 bytes]
2023-06-25 21:28:06,872 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.3,"t":16...:23,"r":1687717687219}]' [151 bytes]
2023-06-25 21:28:06,873 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.4,"t":16...:23,"r":1687717687219}]' [150 bytes]
2023-06-25 21:28:06,960 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.23,"t":1...":1,"r":1687717687307}]' [124 bytes]
2023-06-25 21:28:08,396 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30431,"t":1687...":2,"r":1687717688744}]' [117 bytes]
2023-06-25 21:28:08,397 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30431,"t":1687...":2,"r":1687717688744}]' [122 bytes]
2023-06-25 21:28:08,452 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30431,"t":1687...":2,"r":1687717688799}]' [117 bytes]
2023-06-25 21:28:08,455 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30431,"t":1687...":2,"r":1687717688803}]' [122 bytes]
2023-06-25 21:28:09,412 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.48,"t":1...":1,"r":1687717689759}]' [121 bytes]
2023-06-25 21:28:09,449 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.48,"t":1...":1,"r":1687717689797}]' [121 bytes]
2023-06-25 21:28:09,663 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.48,"t":1...":1,"r":1687717690011}]' [124 bytes]
2023-06-25 21:28:09,753 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:28:09,753 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:28:09,781 DEBUG protocol 22268 13044 % sending keepalive ping
2023-06-25 21:28:09,781 DEBUG protocol 22268 13044 > PING 63 32 aa 55 [binary, 4 bytes]
2023-06-25 21:28:09,949 DEBUG protocol 22268 13044 < PONG 63 32 aa 55 [binary, 4 bytes]
2023-06-25 21:28:09,950 DEBUG protocol 22268 13044 % received keepalive pong
2023-06-25 21:28:10,280 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.47,"t":1...":1,"r":1687717690628}]' [121 bytes]
2023-06-25 21:28:10,281 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.07,"t":1...":1,"r":1687717690628}]' [124 bytes]
2023-06-25 21:28:11,836 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.69,"t":1...":1,"r":1687717692184}]' [124 bytes]
2023-06-25 21:28:13,448 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.55,"t":1...":1,"r":1687717693796}]' [124 bytes]
2023-06-25 21:28:14,752 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:28:14,752 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:28:16,130 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.83,"t":1...":1,"r":1687717696478}]' [124 bytes]
2023-06-25 21:28:16,131 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.83,"t":1...":1,"r":1687717696478}]' [957 bytes]
2023-06-25 21:28:16,524 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.87,"t":1...":1,"r":1687717696871}]' [124 bytes]
2023-06-25 21:28:17,343 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.87,"t":1...":1,"r":1687717697691}]' [124 bytes]
2023-06-25 21:28:17,469 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.86,"t":1...":1,"r":1687717697816}]' [124 bytes]
2023-06-25 21:28:18,876 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.87,"t":1...":1,"r":1687717699224}]' [122 bytes]
2023-06-25 21:28:18,930 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.87,"t":1...":1,"r":1687717699278}]' [124 bytes]
2023-06-25 21:28:19,178 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.87,"t":1...":1,"r":1687717699526}]' [124 bytes]
2023-06-25 21:28:19,616 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.87,"t":1...":1,"r":1687717699963}]' [123 bytes]
2023-06-25 21:28:19,752 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:28:19,752 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:28:20,337 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.86,"t":1...":1,"r":1687717700685}]' [123 bytes]
2023-06-25 21:28:21,154 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.87,"t":1...":1,"r":1687717701503}]' [124 bytes]
2023-06-25 21:28:21,628 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.8,"t":16...:23,"r":1687717701976}]' [151 bytes]
2023-06-25 21:28:21,629 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.5,"t":16...:23,"r":1687717701976}]' [895 bytes]
2023-06-25 21:28:21,675 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.3,"t":16...:23,"r":1687717702023}]' [151 bytes]
2023-06-25 21:28:21,675 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.3,"t":16...:23,"r":1687717702023}]' [151 bytes]
2023-06-25 21:28:22,339 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.87,"t":1...":1,"r":1687717702687}]' [123 bytes]
2023-06-25 21:28:22,599 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.86,"t":1...":1,"r":1687717702947}]' [124 bytes]
2023-06-25 21:28:22,620 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410,"t":1687...":1,"r":1687717702968}]' [120 bytes]
2023-06-25 21:28:22,621 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.96,"t":1...":1,"r":1687717702968}]' [124 bytes]
2023-06-25 21:28:22,652 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.96,"t":1...":1,"r":1687717703001}]' [123 bytes]
2023-06-25 21:28:22,886 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.29,"t":1...":1,"r":1687717703234}]' [124 bytes]
2023-06-25 21:28:22,949 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.1,"t":16...":1,"r":1687717703297}]' [123 bytes]
2023-06-25 21:28:23,445 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.23,"t":1...":1,"r":1687717703792}]' [122 bytes]
2023-06-25 21:28:23,445 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.22,"t":1...":1,"r":1687717703792}]' [122 bytes]
2023-06-25 21:28:23,480 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.08,"t":1...":1,"r":1687717703829}]' [124 bytes]
2023-06-25 21:28:24,541 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399,"t":1687...:23,"r":1687717704889}]' [145 bytes]
2023-06-25 21:28:24,741 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30398.9,"t":16...:23,"r":1687717705090}]' [299 bytes]
2023-06-25 21:28:24,743 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30385.5,"t":16...:23,"r":1687717705090}]' [151 bytes]
2023-06-25 21:28:24,750 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.57,"t":1...":1,"r":1687717705098}]' [122 bytes]
2023-06-25 21:28:24,752 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:28:24,752 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:28:25,096 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.25,"t":1...":1,"r":1687717705445}]' [124 bytes]
2023-06-25 21:28:25,666 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.51,"t":1...":1,"r":1687717706013}]' [124 bytes]
2023-06-25 21:28:26,137 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.5,"t":16...":1,"r":1687717706483}]' [117 bytes]
2023-06-25 21:28:26,138 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.51,"t":1...":1,"r":1687717706483}]' [123 bytes]
2023-06-25 21:28:26,536 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.67,"t":1...":1,"r":1687717706884}]' [123 bytes]
2023-06-25 21:28:27,315 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.95,"t":1...":1,"r":1687717707663}]' [124 bytes]
2023-06-25 21:28:27,559 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.94,"t":1...":1,"r":1687717707907}]' [124 bytes]
2023-06-25 21:28:27,995 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402,"t":1687...":6,"r":1687717708343}]' [115 bytes]
2023-06-25 21:28:27,996 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.93,"t":1...":1,"r":1687717708344}]' [124 bytes]
2023-06-25 21:28:29,752 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:28:29,753 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:28:29,945 DEBUG protocol 22268 13044 % sending keepalive ping
2023-06-25 21:28:29,945 DEBUG protocol 22268 13044 > PING e0 0e 36 a7 [binary, 4 bytes]
2023-06-25 21:28:30,043 DEBUG protocol 22268 13044 < PONG e0 0e 36 a7 [binary, 4 bytes]
2023-06-25 21:28:30,043 DEBUG protocol 22268 13044 % received keepalive pong
2023-06-25 21:28:30,570 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.24,"t":1...":1,"r":1687717710918}]' [124 bytes]
2023-06-25 21:28:30,732 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.25,"t":1...":1,"r":1687717711080}]' [124 bytes]
2023-06-25 21:28:31,429 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.25,"t":1...":1,"r":1687717711777}]' [124 bytes]
2023-06-25 21:28:31,845 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.24,"t":1...":1,"r":1687717712194}]' [124 bytes]
2023-06-25 21:28:32,078 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404,"t":1687...":6,"r":1687717712424}]' [121 bytes]
2023-06-25 21:28:32,484 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.12,"t":1...":1,"r":1687717712831}]' [124 bytes]
2023-06-25 21:28:32,484 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.12,"t":1...":1,"r":1687717712831}]' [243 bytes]
2023-06-25 21:28:32,688 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406,"t":1687...":6,"r":1687717713036}]' [115 bytes]
2023-06-25 21:28:32,980 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.05,"t":1...":1,"r":1687717713328}]' [124 bytes]
2023-06-25 21:28:33,044 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.05,"t":1...":1,"r":1687717713392}]' [124 bytes]
2023-06-25 21:28:33,044 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.04,"t":1...":1,"r":1687717713392}]' [245 bytes]
2023-06-25 21:28:33,087 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.47,"t":1...":1,"r":1687717713435}]' [124 bytes]
2023-06-25 21:28:33,254 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.86,"t":1...":1,"r":1687717713601}]' [124 bytes]
2023-06-25 21:28:33,545 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.95,"t":1...":1,"r":1687717713893}]' [124 bytes]
2023-06-25 21:28:34,296 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.99,"t":1...":1,"r":1687717714645}]' [124 bytes]
2023-06-25 21:28:34,751 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:28:34,752 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:28:34,924 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.42,"t":1...":1,"r":1687717715273}]' [121 bytes]
2023-06-25 21:28:34,939 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.43,"t":1...":1,"r":1687717715288}]' [124 bytes]
2023-06-25 21:28:35,947 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.47,"t":1...":1,"r":1687717716295}]' [123 bytes]
2023-06-25 21:28:36,368 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.4,"t":16...":1,"r":1687717716716}]' [121 bytes]
2023-06-25 21:28:36,368 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.41,"t":1...":1,"r":1687717716716}]' [365 bytes]
2023-06-25 21:28:36,867 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410,"t":1687...":6,"r":1687717717213}]' [118 bytes]
2023-06-25 21:28:36,943 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.41,"t":1...":1,"r":1687717717288}]' [122 bytes]
2023-06-25 21:28:36,944 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.41,"t":1...":1,"r":1687717717288}]' [245 bytes]
2023-06-25 21:28:36,958 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.03,"t":1...":1,"r":1687717717306}]' [121 bytes]
2023-06-25 21:28:37,033 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.7,"t":16...:23,"r":1687717717382}]' [149 bytes]
2023-06-25 21:28:37,034 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.7,"t":16...:23,"r":1687717717382}]' [590 bytes]
2023-06-25 21:28:37,094 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.3,"t":16...:23,"r":1687717717442}]' [151 bytes]
2023-06-25 21:28:37,094 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.3,"t":16...:23,"r":1687717717442}]' [151 bytes]
2023-06-25 21:28:37,169 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.44,"t":1...":1,"r":1687717717517}]' [122 bytes]
2023-06-25 21:28:37,169 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.53,"t":1...":1,"r":1687717717517}]' [600 bytes]
2023-06-25 21:28:37,170 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.9,"t":16...:23,"r":1687717717519}]' [151 bytes]
2023-06-25 21:28:37,171 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30387.9,"t":16...:23,"r":1687717717519}]' [150 bytes]
2023-06-25 21:28:37,177 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.1,"t":16...:23,"r":1687717717526}]' [151 bytes]
2023-06-25 21:28:37,203 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.32,"t":1...":1,"r":1687717717552}]' [124 bytes]
2023-06-25 21:28:38,237 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.2,"t":16...:23,"r":1687717718584}]' [146 bytes]
2023-06-25 21:28:38,237 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.2,"t":16...:23,"r":1687717718584}]' [151 bytes]
2023-06-25 21:28:38,317 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.38,"t":1...":1,"r":1687717718665}]' [124 bytes]
2023-06-25 21:28:38,318 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.37,"t":1...":1,"r":1687717718665}]' [370 bytes]
2023-06-25 21:28:39,394 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.2,"t":16...":1,"r":1687717719743}]' [123 bytes]
2023-06-25 21:28:39,752 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:28:39,752 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:28:40,113 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.47,"t":1...":1,"r":1687717720460}]' [124 bytes]
2023-06-25 21:28:40,339 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.36,"t":1...":1,"r":1687717720688}]' [123 bytes]
2023-06-25 21:28:40,770 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.42,"t":1...":1,"r":1687717721118}]' [124 bytes]
2023-06-25 21:28:40,910 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.8,"t":16...:23,"r":1687717721257}]' [151 bytes]
2023-06-25 21:28:40,910 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.9,"t":16...:23,"r":1687717721257}]' [151 bytes]
2023-06-25 21:28:41,433 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.28,"t":1...":1,"r":1687717721781}]' [124 bytes]
2023-06-25 21:28:41,977 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.28,"t":1...":1,"r":1687717722325}]' [124 bytes]
2023-06-25 21:28:41,978 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.53,"t":1...":1,"r":1687717722325}]' [365 bytes]
2023-06-25 21:28:42,018 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.2,"t":16...:23,"r":1687717722367}]' [151 bytes]
2023-06-25 21:28:42,018 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.2,"t":16...:23,"r":1687717722367}]' [151 bytes]
2023-06-25 21:28:43,736 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30388.3,"t":16...:23,"r":1687717724084}]' [297 bytes]
2023-06-25 21:28:43,736 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391.2,"t":16...:23,"r":1687717724084}]' [301 bytes]
2023-06-25 21:28:44,187 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389,"t":1687...:23,"r":1687717724536}]' [143 bytes]
2023-06-25 21:28:44,188 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389,"t":1687...:23,"r":1687717724536}]' [440 bytes]
2023-06-25 21:28:44,261 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.52,"t":1...":1,"r":1687717724609}]' [124 bytes]
2023-06-25 21:28:44,752 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:28:44,752 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:28:45,051 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.51,"t":1...":1,"r":1687717725399}]' [124 bytes]
2023-06-25 21:28:45,051 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.51,"t":1...":1,"r":1687717725399}]' [240 bytes]
2023-06-25 21:28:45,619 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410,"t":1687...":1,"r":1687717725967}]' [120 bytes]
2023-06-25 21:28:45,646 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410,"t":1687...":1,"r":1687717725993}]' [121 bytes]
2023-06-25 21:28:45,646 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.01,"t":1...":1,"r":1687717725993}]' [124 bytes]
2023-06-25 21:28:46,008 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.95,"t":1...":1,"r":1687717726357}]' [124 bytes]
2023-06-25 21:28:46,216 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.01,"t":1...":1,"r":1687717726564}]' [124 bytes]
2023-06-25 21:28:46,218 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.08,"t":1...":1,"r":1687717726565}]' [124 bytes]
2023-06-25 21:28:46,244 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.07,"t":1...":1,"r":1687717726592}]' [124 bytes]
2023-06-25 21:28:46,340 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.02,"t":1...":1,"r":1687717726688}]' [123 bytes]
2023-06-25 21:28:47,405 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.82,"t":1...":1,"r":1687717727754}]' [124 bytes]
2023-06-25 21:28:47,637 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.16,"t":1...":1,"r":1687717727987}]' [124 bytes]
2023-06-25 21:28:48,687 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.82,"t":1...":1,"r":1687717729036}]' [124 bytes]
2023-06-25 21:28:48,823 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.78,"t":1...":1,"r":1687717729172}]' [124 bytes]
2023-06-25 21:28:49,415 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.35,"t":1...":1,"r":1687717729764}]' [124 bytes]
2023-06-25 21:28:49,426 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.04,"t":1...":1,"r":1687717729774}]' [118 bytes]
2023-06-25 21:28:49,752 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:28:49,752 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:28:50,060 DEBUG protocol 22268 13044 % sending keepalive ping
2023-06-25 21:28:50,060 DEBUG protocol 22268 13044 > PING 60 e1 7e 0b [binary, 4 bytes]
2023-06-25 21:28:50,158 DEBUG protocol 22268 13044 < PONG 60 e1 7e 0b [binary, 4 bytes]
2023-06-25 21:28:50,159 DEBUG protocol 22268 13044 % received keepalive pong
2023-06-25 21:28:50,552 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.12,"t":1...":1,"r":1687717730901}]' [124 bytes]
2023-06-25 21:28:50,650 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.13,"t":1...":1,"r":1687717730999}]' [124 bytes]
2023-06-25 21:28:50,967 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.08,"t":1...":1,"r":1687717731316}]' [122 bytes]
2023-06-25 21:28:50,968 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.72,"t":1...":1,"r":1687717731316}]' [124 bytes]
2023-06-25 21:28:51,205 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.63,"t":1...":1,"r":1687717731554}]' [120 bytes]
2023-06-25 21:28:51,456 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.86,"t":1...":1,"r":1687717731804}]' [124 bytes]
2023-06-25 21:28:51,456 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.86,"t":1...":1,"r":1687717731804}]' [729 bytes]
2023-06-25 21:28:51,457 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.79,"t":1...":1,"r":1687717731804}]' [124 bytes]
2023-06-25 21:28:51,461 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.76,"t":1...":1,"r":1687717731809}]' [122 bytes]
2023-06-25 21:28:51,461 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.75,"t":1...":1,"r":1687717731809}]' [609 bytes]
2023-06-25 21:28:51,462 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.47,"t":1...":1,"r":1687717731810}]' [124 bytes]
2023-06-25 21:28:51,462 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.27,"t":1...":1,"r":1687717731810}]' [124 bytes]
2023-06-25 21:28:51,462 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.24,"t":1...":1,"r":1687717731810}]' [246 bytes]
2023-06-25 21:28:52,686 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.85,"t":1...":1,"r":1687717733035}]' [124 bytes]
2023-06-25 21:28:54,400 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.7,"t":16...":1,"r":1687717734748}]' [123 bytes]
2023-06-25 21:28:54,561 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408,"t":1687...":6,"r":1687717734909}]' [117 bytes]
2023-06-25 21:28:54,752 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:28:54,752 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:28:54,933 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.15,"t":1...":1,"r":1687717735281}]' [124 bytes]
2023-06-25 21:28:55,147 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.13,"t":1...":1,"r":1687717735495}]' [124 bytes]
2023-06-25 21:28:55,986 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.78,"t":1...":1,"r":1687717736335}]' [123 bytes]
2023-06-25 21:28:59,072 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.62,"t":1...":1,"r":1687717739421}]' [122 bytes]
2023-06-25 21:28:59,072 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.62,"t":1...":1,"r":1687717739421}]' [604 bytes]
2023-06-25 21:28:59,119 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.53,"t":1...":1,"r":1687717739467}]' [124 bytes]
2023-06-25 21:28:59,751 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:28:59,751 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:28:59,761 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.47,"t":1...":1,"r":1687717740111}]' [124 bytes]
2023-06-25 21:28:59,978 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409,"t":1687...":6,"r":1687717740327}]' [121 bytes]
2023-06-25 21:29:00,864 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.1,"t":16...:23,"r":1687717741214}]' [149 bytes]
2023-06-25 21:29:00,865 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30391.2,"t":16...:23,"r":1687717741214}]' [300 bytes]
2023-06-25 21:29:01,399 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.69,"t":1...":1,"r":1687717741747}]' [122 bytes]
2023-06-25 21:29:01,488 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.69,"t":1...":1,"r":1687717741837}]' [122 bytes]
2023-06-25 21:29:01,488 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.89,"t":1...":1,"r":1687717741837}]' [124 bytes]
2023-06-25 21:29:02,881 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409,"t":1687...":6,"r":1687717743229}]' [118 bytes]
2023-06-25 21:29:03,118 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409,"t":1687...":6,"r":1687717743466}]' [121 bytes]
2023-06-25 21:29:03,350 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409,"t":1687...":6,"r":1687717743700}]' [121 bytes]
2023-06-25 21:29:03,361 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409,"t":1687...":6,"r":1687717743710}]' [121 bytes]
2023-06-25 21:29:03,486 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.44,"t":1...":1,"r":1687717743835}]' [124 bytes]
2023-06-25 21:29:03,715 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.77,"t":1...":1,"r":1687717744064}]' [124 bytes]
2023-06-25 21:29:04,425 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.36,"t":1...":1,"r":1687717744773}]' [487 bytes]
2023-06-25 21:29:04,426 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.45,"t":1...":1,"r":1687717744773}]' [733 bytes]
2023-06-25 21:29:04,752 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:29:04,752 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:29:06,293 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.06,"t":1...":1,"r":1687717746642}]' [122 bytes]
2023-06-25 21:29:06,293 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.06,"t":1...":1,"r":1687717746642}]' [123 bytes]
2023-06-25 21:29:06,512 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.07,"t":1...":1,"r":1687717746862}]' [124 bytes]
2023-06-25 21:29:06,520 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.41,"t":1...":1,"r":1687717746868}]' [123 bytes]
2023-06-25 21:29:06,971 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.18,"t":1...":1,"r":1687717747319}]' [122 bytes]
2023-06-25 21:29:07,016 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.35,"t":1...":1,"r":1687717747365}]' [124 bytes]
2023-06-25 21:29:08,404 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.1,"t":16...":1,"r":1687717748753}]' [123 bytes]
2023-06-25 21:29:08,871 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.35,"t":1...":1,"r":1687717749220}]' [124 bytes]
2023-06-25 21:29:09,098 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.08,"t":1...":1,"r":1687717749447}]' [124 bytes]
2023-06-25 21:29:09,190 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.34,"t":1...":1,"r":1687717749540}]' [120 bytes]
2023-06-25 21:29:09,191 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.34,"t":1...":1,"r":1687717749540}]' [118 bytes]
2023-06-25 21:29:09,721 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.45,"t":1...":1,"r":1687717750070}]' [124 bytes]
2023-06-25 21:29:09,751 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:29:09,751 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:29:09,799 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409,"t":1687...":6,"r":1687717750147}]' [121 bytes]
2023-06-25 21:29:10,055 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.73,"t":1...":1,"r":1687717750404}]' [122 bytes]
2023-06-25 21:29:10,167 DEBUG protocol 22268 13044 % sending keepalive ping
2023-06-25 21:29:10,167 DEBUG protocol 22268 13044 > PING c1 f4 ae 98 [binary, 4 bytes]
2023-06-25 21:29:10,264 DEBUG protocol 22268 13044 < PONG c1 f4 ae 98 [binary, 4 bytes]
2023-06-25 21:29:10,264 DEBUG protocol 22268 13044 % received keepalive pong
2023-06-25 21:29:11,822 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.73,"t":1...":1,"r":1687717752171}]' [124 bytes]
2023-06-25 21:29:12,169 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.72,"t":1...":1,"r":1687717752517}]' [123 bytes]
2023-06-25 21:29:12,555 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.73,"t":1...":1,"r":1687717752904}]' [124 bytes]
2023-06-25 21:29:12,773 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.97,"t":1...":1,"r":1687717753122}]' [123 bytes]
2023-06-25 21:29:12,773 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.29,"t":1...":1,"r":1687717753122}]' [124 bytes]
2023-06-25 21:29:13,688 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.88,"t":1...":1,"r":1687717754038}]' [122 bytes]
2023-06-25 21:29:13,689 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.33,"t":1...":1,"r":1687717754038}]' [124 bytes]
2023-06-25 21:29:14,740 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.29,"t":1...":1,"r":1687717755090}]' [124 bytes]
2023-06-25 21:29:14,751 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:29:14,751 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:29:14,756 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.29,"t":1...":1,"r":1687717755105}]' [124 bytes]
2023-06-25 21:29:14,956 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.86,"t":1...":1,"r":1687717755305}]' [124 bytes]
2023-06-25 21:29:14,956 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.48,"t":1...":1,"r":1687717755305}]' [124 bytes]
2023-06-25 21:29:16,266 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30408.61,"t":1...":1,"r":1687717756608}]' [119 bytes]
2023-06-25 21:29:16,721 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.09,"t":1...":1,"r":1687717757071}]' [121 bytes]
2023-06-25 21:29:16,745 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.56,"t":1...":1,"r":1687717757094}]' [123 bytes]
2023-06-25 21:29:17,366 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30409.47,"t":1...":1,"r":1687717757716}]' [124 bytes]
2023-06-25 21:29:18,205 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.19,"t":1...":1,"r":1687717758554}]' [124 bytes]
2023-06-25 21:29:18,206 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.25,"t":1...":1,"r":1687717758554}]' [604 bytes]
2023-06-25 21:29:18,206 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.55,"t":1...":1,"r":1687717758554}]' [609 bytes]
2023-06-25 21:29:18,243 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.97,"t":1...":1,"r":1687717758593}]' [124 bytes]
2023-06-25 21:29:18,277 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.88,"t":1...":1,"r":1687717758627}]' [121 bytes]
2023-06-25 21:29:19,751 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:29:19,751 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:29:21,975 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30410.6,"t":16...":1,"r":1687717762324}]' [123 bytes]
2023-06-25 21:29:23,073 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.21,"t":1...":1,"r":1687717763422}]' [118 bytes]
2023-06-25 21:29:23,078 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.21,"t":1...":1,"r":1687717763428}]' [124 bytes]
2023-06-25 21:29:23,079 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.64,"t":1...":1,"r":1687717763428}]' [979 bytes]
2023-06-25 21:29:23,082 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.83,"t":1...":1,"r":1687717763432}]' [124 bytes]
2023-06-25 21:29:23,138 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414.86,"t":1...":1,"r":1687717763488}]' [124 bytes]
2023-06-25 21:29:23,139 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414.4,"t":16...":1,"r":1687717763488}]' [607 bytes]
2023-06-25 21:29:23,145 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415,"t":1687...":2,"r":1687717763495}]' [233 bytes]
2023-06-25 21:29:23,146 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30422,"t":1687...":2,"r":1687717763495}]' [241 bytes]
2023-06-25 21:29:23,174 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.99,"t":1...":1,"r":1687717763524}]' [124 bytes]
2023-06-25 21:29:23,201 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414,"t":1687...":6,"r":1687717763551}]' [119 bytes]
2023-06-25 21:29:23,216 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.37,"t":1...":1,"r":1687717763564}]' [120 bytes]
2023-06-25 21:29:23,216 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.37,"t":1...":1,"r":1687717763564}]' [238 bytes]
2023-06-25 21:29:23,222 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30422,"t":1687...":2,"r":1687717763572}]' [241 bytes]
2023-06-25 21:29:23,241 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414,"t":1687...":6,"r":1687717763591}]' [233 bytes]
2023-06-25 21:29:23,243 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415,"t":1687...":2,"r":1687717763593}]' [117 bytes]
2023-06-25 21:29:23,244 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415,"t":1687...":2,"r":1687717763593}]' [117 bytes]
2023-06-25 21:29:23,281 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415,"t":1687...":6,"r":1687717763631}]' [117 bytes]
2023-06-25 21:29:23,375 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.37,"t":1...":1,"r":1687717763725}]' [124 bytes]
2023-06-25 21:29:23,444 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.38,"t":1...":1,"r":1687717763794}]' [124 bytes]
2023-06-25 21:29:23,445 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.39,"t":1...":1,"r":1687717763794}]' [124 bytes]
2023-06-25 21:29:23,446 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30420.06,"t":1...":1,"r":1687717763794}]' [857 bytes]
2023-06-25 21:29:23,613 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30422.99,"t":1...":1,"r":1687717763961}]' [245 bytes]
2023-06-25 21:29:23,764 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30389.1,"t":16...:23,"r":1687717764114}]' [149 bytes]
2023-06-25 21:29:23,765 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30393.9,"t":16...:23,"r":1687717764114}]' [895 bytes]
2023-06-25 21:29:23,971 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.6,"t":16...:23,"r":1687717764321}]' [147 bytes]
2023-06-25 21:29:24,014 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30395.8,"t":16...:23,"r":1687717764364}]' [301 bytes]
2023-06-25 21:29:24,181 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30420.11,"t":1...":1,"r":1687717764531}]' [124 bytes]
2023-06-25 21:29:24,751 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:29:24,751 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:29:26,250 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30422,"t":1687...":6,"r":1687717766599}]' [121 bytes]
2023-06-25 21:29:26,602 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30420.93,"t":1...":1,"r":1687717766951}]' [123 bytes]
2023-06-25 21:29:27,632 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421.68,"t":1...":1,"r":1687717767982}]' [123 bytes]
2023-06-25 21:29:27,974 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421.94,"t":1...":1,"r":1687717768323}]' [124 bytes]
2023-06-25 21:29:28,439 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419.97,"t":1...":1,"r":1687717768788}]' [124 bytes]
2023-06-25 21:29:29,306 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.87,"t":1...":1,"r":1687717769655}]' [124 bytes]
2023-06-25 21:29:29,556 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.87,"t":1...":1,"r":1687717769905}]' [123 bytes]
2023-06-25 21:29:29,751 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:29:29,751 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:29:30,209 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.86,"t":1...":1,"r":1687717770559}]' [240 bytes]
2023-06-25 21:29:30,264 DEBUG protocol 22268 13044 % sending keepalive ping
2023-06-25 21:29:30,264 DEBUG protocol 22268 13044 > PING 21 71 d2 73 [binary, 4 bytes]
2023-06-25 21:29:30,361 DEBUG protocol 22268 13044 < PONG 21 71 d2 73 [binary, 4 bytes]
2023-06-25 21:29:30,362 DEBUG protocol 22268 13044 % received keepalive pong
2023-06-25 21:29:30,552 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.86,"t":1...":1,"r":1687717770902}]' [124 bytes]
2023-06-25 21:29:31,373 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.86,"t":1...":1,"r":1687717771723}]' [124 bytes]
2023-06-25 21:29:31,374 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.86,"t":1...":1,"r":1687717771723}]' [124 bytes]
2023-06-25 21:29:32,376 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.86,"t":1...":1,"r":1687717772726}]' [124 bytes]
2023-06-25 21:29:32,377 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.86,"t":1...":1,"r":1687717772726}]' [477 bytes]
2023-06-25 21:29:32,789 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.86,"t":1...":1,"r":1687717773138}]' [119 bytes]
2023-06-25 21:29:32,789 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.86,"t":1...":1,"r":1687717773138}]' [124 bytes]
2023-06-25 21:29:33,195 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30416,"t":1687...":6,"r":1687717773545}]' [117 bytes]
2023-06-25 21:29:33,226 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.85,"t":1...":1,"r":1687717773575}]' [124 bytes]
2023-06-25 21:29:33,239 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.86,"t":1...":1,"r":1687717773589}]' [124 bytes]
2023-06-25 21:29:33,308 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.85,"t":1...":1,"r":1687717773658}]' [124 bytes]
2023-06-25 21:29:33,374 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.84,"t":1...":1,"r":1687717773723}]' [124 bytes]
2023-06-25 21:29:33,511 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.31,"t":1...":1,"r":1687717773861}]' [124 bytes]
2023-06-25 21:29:34,085 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415.89,"t":1...":1,"r":1687717774434}]' [124 bytes]
2023-06-25 21:29:34,086 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415.89,"t":1...":1,"r":1687717774434}]' [124 bytes]
2023-06-25 21:29:34,139 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30416.2,"t":16...":1,"r":1687717774488}]' [123 bytes]
2023-06-25 21:29:34,190 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30416.2,"t":16...":1,"r":1687717774539}]' [118 bytes]
2023-06-25 21:29:34,371 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.3,"t":16...":1,"r":1687717774721}]' [123 bytes]
2023-06-25 21:29:34,751 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:29:34,751 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:29:34,894 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.3,"t":16...":1,"r":1687717775243}]' [123 bytes]
2023-06-25 21:29:35,379 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.29,"t":1...":1,"r":1687717775729}]' [119 bytes]
2023-06-25 21:29:35,388 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.29,"t":1...":1,"r":1687717775739}]' [119 bytes]
2023-06-25 21:29:35,389 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.3,"t":16...":1,"r":1687717775739}]' [843 bytes]
2023-06-25 21:29:35,389 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.24,"t":1...":1,"r":1687717775739}]' [124 bytes]
2023-06-25 21:29:35,390 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.24,"t":1...":1,"r":1687717775741}]' [124 bytes]
2023-06-25 21:29:35,829 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30416.28,"t":1...":1,"r":1687717776179}]' [123 bytes]
2023-06-25 21:29:37,227 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.6,"t":16...":1,"r":1687717777577}]' [123 bytes]
2023-06-25 21:29:37,996 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.86,"t":1...":1,"r":1687717778345}]' [124 bytes]
2023-06-25 21:29:38,320 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30420.78,"t":1...":1,"r":1687717778670}]' [124 bytes]
2023-06-25 21:29:38,627 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30420,"t":1687...":1,"r":1687717778977}]' [120 bytes]
2023-06-25 21:29:38,805 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419.46,"t":1...":1,"r":1687717779155}]' [124 bytes]
2023-06-25 21:29:39,232 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.61,"t":1...":1,"r":1687717779581}]' [124 bytes]
2023-06-25 21:29:39,751 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:29:39,752 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:29:40,064 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30420.76,"t":1...":1,"r":1687717780413}]' [122 bytes]
2023-06-25 21:29:40,064 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30420.76,"t":1...":1,"r":1687717780413}]' [487 bytes]
2023-06-25 21:29:42,591 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.5,"t":16...:23,"r":1687717782941}]' [301 bytes]
2023-06-25 21:29:43,303 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421.11,"t":1...":1,"r":1687717783653}]' [124 bytes]
2023-06-25 21:29:43,303 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421.83,"t":1...":1,"r":1687717783653}]' [124 bytes]
2023-06-25 21:29:43,834 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419.6,"t":16...":1,"r":1687717784184}]' [123 bytes]
2023-06-25 21:29:44,303 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421.79,"t":1...":1,"r":1687717784652}]' [122 bytes]
2023-06-25 21:29:44,303 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421.79,"t":1...":1,"r":1687717784653}]' [366 bytes]
2023-06-25 21:29:44,509 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30399.4,"t":16...:23,"r":1687717784858}]' [145 bytes]
2023-06-25 21:29:44,750 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:29:44,750 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:29:45,045 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421.75,"t":1...":1,"r":1687717785395}]' [124 bytes]
2023-06-25 21:29:45,252 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421.74,"t":1...":1,"r":1687717785602}]' [124 bytes]
2023-06-25 21:29:45,637 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.21,"t":1...":1,"r":1687717785987}]' [122 bytes]
2023-06-25 21:29:45,638 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.21,"t":1...":1,"r":1687717785987}]' [731 bytes]
2023-06-25 21:29:45,638 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.41,"t":1...":1,"r":1687717785987}]' [124 bytes]
2023-06-25 21:29:46,068 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419.59,"t":1...":1,"r":1687717786417}]' [124 bytes]
2023-06-25 21:29:46,320 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419.59,"t":1...":1,"r":1687717786669}]' [247 bytes]
2023-06-25 21:29:46,443 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418.03,"t":1...":1,"r":1687717786793}]' [124 bytes]
2023-06-25 21:29:48,385 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419.86,"t":1...":1,"r":1687717788736}]' [124 bytes]
2023-06-25 21:29:48,386 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419.87,"t":1...":1,"r":1687717788736}]' [239 bytes]
2023-06-25 21:29:48,846 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419.83,"t":1...":1,"r":1687717789195}]' [124 bytes]
2023-06-25 21:29:48,875 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30419.83,"t":1...":1,"r":1687717789225}]' [121 bytes]
2023-06-25 21:29:49,132 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.48,"t":1...":1,"r":1687717789481}]' [118 bytes]
2023-06-25 21:29:49,132 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.47,"t":1...":1,"r":1687717789482}]' [124 bytes]
2023-06-25 21:29:49,132 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.42,"t":1...":1,"r":1687717789482}]' [366 bytes]
2023-06-25 21:29:49,647 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.36,"t":1...":1,"r":1687717789997}]' [122 bytes]
2023-06-25 21:29:49,651 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30417.36,"t":1...":1,"r":1687717790002}]' [124 bytes]
2023-06-25 21:29:49,750 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:29:49,750 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:29:50,140 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30416.27,"t":1...":1,"r":1687717790490}]' [124 bytes]
2023-06-25 21:29:50,143 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30416.26,"t":1...":1,"r":1687717790493}]' [121 bytes]
2023-06-25 21:29:50,144 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30416.26,"t":1...":1,"r":1687717790493}]' [122 bytes]
2023-06-25 21:29:50,350 DEBUG protocol 22268 13044 % sending keepalive ping
2023-06-25 21:29:50,350 DEBUG protocol 22268 13044 > PING 7d 7b 4f fc [binary, 4 bytes]
2023-06-25 21:29:50,449 DEBUG protocol 22268 13044 < PONG 7d 7b 4f fc [binary, 4 bytes]
2023-06-25 21:29:50,450 DEBUG protocol 22268 13044 % received keepalive pong
2023-06-25 21:29:50,494 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414,"t":1687...":6,"r":1687717790845}]' [115 bytes]
2023-06-25 21:29:51,791 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414.12,"t":1...":1,"r":1687717792141}]' [124 bytes]
2023-06-25 21:29:51,822 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415.83,"t":1...":1,"r":1687717792172}]' [124 bytes]
2023-06-25 21:29:53,410 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415.2,"t":16...":1,"r":1687717793760}]' [356 bytes]
2023-06-25 21:29:53,411 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414.98,"t":1...":1,"r":1687717793760}]' [368 bytes]
2023-06-25 21:29:53,411 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.1,"t":16...":1,"r":1687717793760}]' [123 bytes]
2023-06-25 21:29:53,411 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.08,"t":1...":1,"r":1687717793760}]' [118 bytes]
2023-06-25 21:29:53,412 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.06,"t":1...":1,"r":1687717793762}]' [124 bytes]
2023-06-25 21:29:53,413 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.03,"t":1...":1,"r":1687717793763}]' [609 bytes]
2023-06-25 21:29:53,414 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.5,"t":16...":1,"r":1687717793763}]' [368 bytes]
2023-06-25 21:29:54,750 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:29:54,750 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:29:55,040 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.47,"t":1...":1,"r":1687717795390}]' [124 bytes]
2023-06-25 21:29:55,158 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.47,"t":1...":1,"r":1687717795508}]' [124 bytes]
2023-06-25 21:29:55,334 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.47,"t":1...":1,"r":1687717795684}]' [124 bytes]
2023-06-25 21:29:55,756 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418,"t":1687...":6,"r":1687717796105}]' [121 bytes]
2023-06-25 21:29:55,764 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418,"t":1687...":6,"r":1687717796114}]' [121 bytes]
2023-06-25 21:29:55,869 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414.31,"t":1...":1,"r":1687717796219}]' [124 bytes]
2023-06-25 21:29:56,325 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.47,"t":1...":1,"r":1687717796675}]' [124 bytes]
2023-06-25 21:29:56,325 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.47,"t":1...":1,"r":1687717796675}]' [121 bytes]
2023-06-25 21:29:56,325 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.47,"t":1...":1,"r":1687717796675}]' [118 bytes]
2023-06-25 21:29:56,325 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.47,"t":1...":1,"r":1687717796675}]' [121 bytes]
2023-06-25 21:29:56,325 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.47,"t":1...":1,"r":1687717796675}]' [122 bytes]
2023-06-25 21:29:56,326 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.47,"t":1...":1,"r":1687717796675}]' [122 bytes]
2023-06-25 21:29:56,326 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414.1,"t":16...":1,"r":1687717796675}]' [123 bytes]
2023-06-25 21:29:56,326 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414.31,"t":1...":1,"r":1687717796675}]' [118 bytes]
2023-06-25 21:29:56,326 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414.32,"t":1...":1,"r":1687717796675}]' [246 bytes]
2023-06-25 21:29:56,326 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414.41,"t":1...":1,"r":1687717796675}]' [124 bytes]
2023-06-25 21:29:56,326 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414.8,"t":16...":1,"r":1687717796675}]' [123 bytes]
2023-06-25 21:29:56,326 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415.1,"t":16...":1,"r":1687717796675}]' [123 bytes]
2023-06-25 21:29:56,326 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415.46,"t":1...":1,"r":1687717796675}]' [124 bytes]
2023-06-25 21:29:56,792 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.47,"t":1...":1,"r":1687717797142}]' [123 bytes]
2023-06-25 21:29:58,150 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.47,"t":1...":1,"r":1687717798500}]' [247 bytes]
2023-06-25 21:29:58,206 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.46,"t":1...":1,"r":1687717798556}]' [124 bytes]
2023-06-25 21:29:58,206 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.2,"t":16...":1,"r":1687717798556}]' [123 bytes]
2023-06-25 21:29:58,712 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30414.78,"t":1...":1,"r":1687717799062}]' [124 bytes]
2023-06-25 21:29:59,084 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30415.65,"t":1...":1,"r":1687717799434}]' [124 bytes]
2023-06-25 21:29:59,675 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30418,"t":1687...":6,"r":1687717800025}]' [118 bytes]
2023-06-25 21:29:59,750 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:29:59,750 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:30:00,474 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.44,"t":1...":1,"r":1687717800824}]' [124 bytes]
2023-06-25 21:30:00,655 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.45,"t":1...":1,"r":1687717801005}]' [124 bytes]
2023-06-25 21:30:00,829 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30413.45,"t":1...":1,"r":1687717801179}]' [124 bytes]
2023-06-25 21:30:02,696 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.57,"t":1...":1,"r":1687717803046}]' [124 bytes]
2023-06-25 21:30:02,977 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.85,"t":1...":1,"r":1687717803326}]' [123 bytes]
2023-06-25 21:30:03,950 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30412.82,"t":1...":1,"r":1687717804300}]' [124 bytes]
2023-06-25 21:30:04,750 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:30:04,750 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:30:04,940 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.57,"t":1...":1,"r":1687717805291}]' [124 bytes]
2023-06-25 21:30:05,417 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30411.56,"t":1...":1,"r":1687717805767}]' [124 bytes]
2023-06-25 21:30:05,548 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30430,"t":1687...":2,"r":1687717805899}]' [117 bytes]
2023-06-25 21:30:05,549 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30430,"t":1687...":2,"r":1687717805899}]' [117 bytes]
2023-06-25 21:30:05,591 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30430,"t":1687...":2,"r":1687717805942}]' [233 bytes]
2023-06-25 21:30:05,636 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.33,"t":1...":1,"r":1687717805986}]' [124 bytes]
2023-06-25 21:30:05,685 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.21,"t":1...":1,"r":1687717806033}]' [124 bytes]
2023-06-25 21:30:06,193 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421,"t":1687...":2,"r":1687717806543}]' [118 bytes]
2023-06-25 21:30:06,251 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30421,"t":1687...":2,"r":1687717806601}]' [118 bytes]
2023-06-25 21:30:06,767 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.2,"t":16...":1,"r":1687717807118}]' [121 bytes]
2023-06-25 21:30:06,767 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30407.2,"t":16...":1,"r":1687717807118}]' [121 bytes]
2023-06-25 21:30:07,090 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.64,"t":1...":1,"r":1687717807441}]' [124 bytes]
2023-06-25 21:30:07,228 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.47,"t":1...":1,"r":1687717807578}]' [124 bytes]
2023-06-25 21:30:07,401 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.72,"t":1...":1,"r":1687717807752}]' [124 bytes]
2023-06-25 21:30:07,917 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.37,"t":1...":1,"r":1687717808268}]' [121 bytes]
2023-06-25 21:30:07,917 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.37,"t":1...":1,"r":1687717808268}]' [241 bytes]
2023-06-25 21:30:07,973 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.36,"t":1...":1,"r":1687717808324}]' [124 bytes]
2023-06-25 21:30:08,070 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30406.36,"t":1...":1,"r":1687717808421}]' [123 bytes]
2023-06-25 21:30:08,753 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.92,"t":1...":1,"r":1687717809103}]' [124 bytes]
2023-06-25 21:30:09,750 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:30:09,750 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:30:09,779 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.75,"t":1...":1,"r":1687717810130}]' [124 bytes]
2023-06-25 21:30:09,936 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.74,"t":1...":1,"r":1687717810224}]' [121 bytes]
2023-06-25 21:30:10,046 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.47,"t":1...":1,"r":1687717810309}]' [121 bytes]
2023-06-25 21:30:10,047 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.47,"t":1...":1,"r":1687717810309}]' [239 bytes]
2023-06-25 21:30:10,462 DEBUG protocol 22268 13044 % sending keepalive ping
2023-06-25 21:30:10,462 DEBUG protocol 22268 13044 > PING 09 3d d5 e4 [binary, 4 bytes]
2023-06-25 21:30:10,560 DEBUG protocol 22268 13044 < PONG 09 3d d5 e4 [binary, 4 bytes]
2023-06-25 21:30:10,560 DEBUG protocol 22268 13044 % received keepalive pong
2023-06-25 21:30:10,674 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.49,"t":1...":1,"r":1687717811024}]' [123 bytes]
2023-06-25 21:30:12,068 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.4,"t":16...":1,"r":1687717812418}]' [123 bytes]
2023-06-25 21:30:12,069 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.4,"t":16...":1,"r":1687717812418}]' [479 bytes]
2023-06-25 21:30:12,069 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.53,"t":1...":1,"r":1687717812418}]' [124 bytes]
2023-06-25 21:30:12,177 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.89,"t":1...":1,"r":1687717812528}]' [124 bytes]
2023-06-25 21:30:12,962 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.49,"t":1...":1,"r":1687717813313}]' [118 bytes]
2023-06-25 21:30:12,963 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.48,"t":1...":1,"r":1687717813313}]' [124 bytes]
2023-06-25 21:30:12,968 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.11,"t":1...":1,"r":1687717813318}]' [124 bytes]
2023-06-25 21:30:13,127 DEBUG proactor_events 20888 3296 Using proactor: IocpProactor
2023-06-25 21:30:13,129 DEBUG __init__ 20888 3296 connect: wss://socket.polygon.io/crypto
2023-06-25 21:30:13,151 DEBUG functional 20888 5032 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-25 21:30:13,152 DEBUG functional 20888 5032 
def backend_cleanup():
    return 1

2023-06-25 21:30:13,152 DEBUG functional 20888 5032 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-25 21:30:13,153 DEBUG functional 20888 5032 
def xmap(task, it):
    return 1

2023-06-25 21:30:13,153 DEBUG functional 20888 5032 
def chain(*args, **kwargs):
    return 1

2023-06-25 21:30:13,153 DEBUG functional 20888 5032 
def debug_task(self):
    return 1

2023-06-25 21:30:13,154 DEBUG functional 20888 5032 
def xstarmap(task, it):
    return 1

2023-06-25 21:30:13,154 DEBUG functional 20888 5032 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-25 21:30:13,154 DEBUG functional 20888 5032 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-25 21:30:13,155 DEBUG functional 20888 5032 
def chunks(task, it, n):
    return 1

2023-06-25 21:30:13,155 DEBUG functional 20888 5032 
def get_current_buy_price(symbol):
    return 1

2023-06-25 21:30:13,493 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.12,"t":1...":1,"r":1687717813843}]' [124 bytes]
2023-06-25 21:30:13,933 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.56,"t":1...":1,"r":1687717814277}]' [122 bytes]
2023-06-25 21:30:13,937 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.56,"t":1...":1,"r":1687717814288}]' [124 bytes]
2023-06-25 21:30:14,341 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.84,"t":1...":1,"r":1687717814689}]' [124 bytes]
2023-06-25 21:30:14,750 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:30:14,750 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:30:15,534 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.18,"t":1...":1,"r":1687717815885}]' [122 bytes]
2023-06-25 21:30:15,535 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.18,"t":1...":1,"r":1687717815885}]' [483 bytes]
2023-06-25 21:30:15,618 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.74,"t":1...":1,"r":1687717815966}]' [123 bytes]
2023-06-25 21:30:16,045 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.08,"t":1...":1,"r":1687717816395}]' [124 bytes]
2023-06-25 21:30:16,253 DEBUG protocol 22268 13044 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 21:30:16,253 DEBUG protocol 22268 13044 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:30:16,253 DEBUG protocol 22268 13044 = connection is CLOSING
2023-06-25 21:30:16,253 DEBUG protocol 22268 13044 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:30:16,253 DEBUG protocol 22268 13044 = connection is CLOSED
2023-06-25 21:30:16,254 DEBUG __init__ 22268 13044 status: Maximum number of connections exceeded.
2023-06-25 21:30:16,254 DEBUG protocol 22268 13044 x closing TCP connection
2023-06-25 21:30:16,255 DEBUG __init__ 22268 13044 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 21:30:16,358 DEBUG protocol 22268 13044 = connection is CONNECTING
2023-06-25 21:30:16,465 DEBUG client 22268 13044 > GET /crypto HTTP/1.1
2023-06-25 21:30:16,465 DEBUG client 22268 13044 > Host: socket.polygon.io
2023-06-25 21:30:16,465 DEBUG client 22268 13044 > Upgrade: websocket
2023-06-25 21:30:16,465 DEBUG client 22268 13044 > Connection: Upgrade
2023-06-25 21:30:16,465 DEBUG client 22268 13044 > Sec-WebSocket-Key: Utn7NDeDl4pHR006fbp16Q==
2023-06-25 21:30:16,466 DEBUG client 22268 13044 > Sec-WebSocket-Version: 13
2023-06-25 21:30:16,466 DEBUG client 22268 13044 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:30:16,466 DEBUG client 22268 13044 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:30:16,504 DEBUG proactor_events 10792 13436 Using proactor: IocpProactor
2023-06-25 21:30:16,508 DEBUG __init__ 10792 13436 connect: wss://socket.polygon.io/crypto
2023-06-25 21:30:16,663 DEBUG proactor_events 6908 13008 Using proactor: IocpProactor
2023-06-25 21:30:16,669 DEBUG client 22268 13044 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:30:16,668 DEBUG __init__ 6908 13008 connect: wss://socket.polygon.io/crypto
2023-06-25 21:30:16,669 DEBUG client 22268 13044 < Server: nginx/1.19.2
2023-06-25 21:30:16,669 DEBUG client 22268 13044 < Date: Sun, 25 Jun 2023 18:30:17 GMT
2023-06-25 21:30:16,669 DEBUG client 22268 13044 < Connection: upgrade
2023-06-25 21:30:16,669 DEBUG client 22268 13044 < Upgrade: websocket
2023-06-25 21:30:16,669 DEBUG client 22268 13044 < Sec-WebSocket-Accept: ehm0oAePkmTNGiQ3WF4L1vbeh8A=
2023-06-25 21:30:16,669 DEBUG client 22268 13044 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:30:16,670 DEBUG protocol 22268 13044 = connection is OPEN
2023-06-25 21:30:16,670 DEBUG protocol 22268 13044 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:30:16,670 DEBUG __init__ 22268 13044 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:30:16,670 DEBUG __init__ 22268 13044 authing...
2023-06-25 21:30:16,671 DEBUG protocol 22268 13044 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:30:16,676 DEBUG proactor_events 19356 12252 Using proactor: IocpProactor
2023-06-25 21:30:16,682 DEBUG __init__ 19356 12252 connect: wss://socket.polygon.io/crypto
2023-06-25 21:30:16,703 DEBUG proactor_events 18696 9640 Using proactor: IocpProactor
2023-06-25 21:30:16,708 DEBUG __init__ 18696 9640 connect: wss://socket.polygon.io/crypto
2023-06-25 21:30:16,732 DEBUG proactor_events 14796 11640 Using proactor: IocpProactor
2023-06-25 21:30:16,735 DEBUG proactor_events 17132 2384 Using proactor: IocpProactor
2023-06-25 21:30:16,737 DEBUG __init__ 14796 11640 connect: wss://socket.polygon.io/crypto
2023-06-25 21:30:16,739 DEBUG proactor_events 22400 22492 Using proactor: IocpProactor
2023-06-25 21:30:16,739 DEBUG __init__ 17132 2384 connect: wss://socket.polygon.io/crypto
2023-06-25 21:30:16,743 DEBUG proactor_events 528 14080 Using proactor: IocpProactor
2023-06-25 21:30:16,743 DEBUG __init__ 22400 22492 connect: wss://socket.polygon.io/crypto
2023-06-25 21:30:16,745 DEBUG __init__ 528 14080 connect: wss://socket.polygon.io/crypto
2023-06-25 21:30:16,759 DEBUG proactor_events 22248 9332 Using proactor: IocpProactor
2023-06-25 21:30:16,764 DEBUG __init__ 22248 9332 connect: wss://socket.polygon.io/crypto
2023-06-25 21:30:16,769 DEBUG proactor_events 17424 18872 Using proactor: IocpProactor
2023-06-25 21:30:16,772 DEBUG __init__ 17424 18872 connect: wss://socket.polygon.io/crypto
2023-06-25 21:30:16,778 DEBUG protocol 22268 13044 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:30:16,779 DEBUG __init__ 22268 13044 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:30:16,779 DEBUG __init__ 22268 13044 reconciling: set() {'XT.BTC-USD'}
2023-06-25 21:30:16,779 DEBUG __init__ 22268 13044 subbing: XT.BTC-USD
2023-06-25 21:30:16,780 DEBUG protocol 22268 13044 > TEXT '{"action": "subscribe", "params": "XT.BTC-USD"}' [47 bytes]
2023-06-25 21:30:16,816 DEBUG proactor_events 4592 14860 Using proactor: IocpProactor
2023-06-25 21:30:16,819 DEBUG __init__ 4592 14860 connect: wss://socket.polygon.io/crypto
2023-06-25 21:30:16,835 DEBUG proactor_events 9268 3916 Using proactor: IocpProactor
2023-06-25 21:30:16,838 DEBUG __init__ 9268 3916 connect: wss://socket.polygon.io/crypto
2023-06-25 21:30:16,889 DEBUG protocol 22268 13044 < TEXT '[{"ev":"status","status":"success","message":"s...ribed to: XT.BTC-USD"}]' [74 bytes]
2023-06-25 21:30:16,889 DEBUG __init__ 22268 13044 status: subscribed to: XT.BTC-USD
2023-06-25 21:30:17,391 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.62,"t":1...":1,"r":1687717817741}]' [122 bytes]
2023-06-25 21:30:17,391 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.62,"t":1...":1,"r":1687717817741}]' [361 bytes]
2023-06-25 21:30:17,439 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.92,"t":1...":1,"r":1687717817789}]' [124 bytes]
2023-06-25 21:30:17,694 DEBUG protocol 22268 13044 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 21:30:17,695 DEBUG protocol 22268 13044 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:30:17,695 DEBUG protocol 22268 13044 = connection is CLOSING
2023-06-25 21:30:17,695 DEBUG protocol 22268 13044 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:30:17,695 DEBUG protocol 22268 13044 = connection is CLOSED
2023-06-25 21:30:17,696 DEBUG __init__ 22268 13044 status: Maximum number of connections exceeded.
2023-06-25 21:30:17,696 DEBUG protocol 22268 13044 x closing TCP connection
2023-06-25 21:30:17,696 DEBUG __init__ 22268 13044 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 21:30:17,796 DEBUG protocol 22268 13044 = connection is CONNECTING
2023-06-25 21:30:17,903 DEBUG client 22268 13044 > GET /crypto HTTP/1.1
2023-06-25 21:30:17,903 DEBUG client 22268 13044 > Host: socket.polygon.io
2023-06-25 21:30:17,903 DEBUG client 22268 13044 > Upgrade: websocket
2023-06-25 21:30:17,903 DEBUG client 22268 13044 > Connection: Upgrade
2023-06-25 21:30:17,903 DEBUG client 22268 13044 > Sec-WebSocket-Key: pHdQGF3Il1Jjrz6+BbuEvg==
2023-06-25 21:30:17,903 DEBUG client 22268 13044 > Sec-WebSocket-Version: 13
2023-06-25 21:30:17,903 DEBUG client 22268 13044 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:30:17,903 DEBUG client 22268 13044 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:30:18,103 DEBUG client 22268 13044 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:30:18,103 DEBUG client 22268 13044 < Server: nginx/1.19.2
2023-06-25 21:30:18,103 DEBUG client 22268 13044 < Date: Sun, 25 Jun 2023 18:30:18 GMT
2023-06-25 21:30:18,103 DEBUG client 22268 13044 < Connection: upgrade
2023-06-25 21:30:18,103 DEBUG client 22268 13044 < Upgrade: websocket
2023-06-25 21:30:18,104 DEBUG client 22268 13044 < Sec-WebSocket-Accept: cAHTENQJT0inz501Jcm+CeSeeOY=
2023-06-25 21:30:18,104 DEBUG client 22268 13044 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:30:18,104 DEBUG protocol 22268 13044 = connection is OPEN
2023-06-25 21:30:18,104 DEBUG protocol 22268 13044 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:30:18,104 DEBUG __init__ 22268 13044 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:30:18,105 DEBUG __init__ 22268 13044 authing...
2023-06-25 21:30:18,105 DEBUG protocol 22268 13044 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:30:18,206 DEBUG protocol 22268 13044 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:30:18,206 DEBUG __init__ 22268 13044 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:30:18,207 DEBUG __init__ 22268 13044 reconciling: set() {'XT.BTC-USD'}
2023-06-25 21:30:18,207 DEBUG __init__ 22268 13044 subbing: XT.BTC-USD
2023-06-25 21:30:18,207 DEBUG protocol 22268 13044 > TEXT '{"action": "subscribe", "params": "XT.BTC-USD"}' [47 bytes]
2023-06-25 21:30:18,306 DEBUG protocol 22268 13044 < TEXT '[{"ev":"status","status":"success","message":"s...ribed to: XT.BTC-USD"}]' [74 bytes]
2023-06-25 21:30:18,307 DEBUG __init__ 22268 13044 status: subscribed to: XT.BTC-USD
2023-06-25 21:30:18,976 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.41,"t":1...":1,"r":1687717819320}]' [124 bytes]
2023-06-25 21:30:19,072 DEBUG proactor_events 6880 11012 Using proactor: IocpProactor
2023-06-25 21:30:19,075 DEBUG __init__ 6880 11012 connect: wss://socket.polygon.io/crypto
2023-06-25 21:30:19,111 DEBUG proactor_events 21892 11424 Using proactor: IocpProactor
2023-06-25 21:30:19,111 DEBUG proactor_events 9300 3568 Using proactor: IocpProactor
2023-06-25 21:30:19,113 DEBUG proactor_events 22072 22320 Using proactor: IocpProactor
2023-06-25 21:30:19,114 DEBUG __init__ 21892 11424 connect: wss://socket.polygon.io/crypto
2023-06-25 21:30:19,113 DEBUG __init__ 9300 3568 connect: wss://socket.polygon.io/crypto
2023-06-25 21:30:19,117 DEBUG __init__ 22072 22320 connect: wss://socket.polygon.io/crypto
2023-06-25 21:30:19,856 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.49,"t":1...":1,"r":1687717820207}]' [122 bytes]
2023-06-25 21:30:19,858 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.49,"t":1...":1,"r":1687717820208}]' [122 bytes]
2023-06-25 21:30:20,716 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.7,"t":16...":1,"r":1687717821067}]' [121 bytes]
2023-06-25 21:30:20,717 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.7,"t":16...":1,"r":1687717821067}]' [839 bytes]
2023-06-25 21:30:21,126 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.65,"t":1...":1,"r":1687717821477}]' [123 bytes]
2023-06-25 21:30:21,126 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.95,"t":1...":1,"r":1687717821477}]' [124 bytes]
2023-06-25 21:30:21,164 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.96,"t":1...":1,"r":1687717821512}]' [122 bytes]
2023-06-25 21:30:21,274 DEBUG protocol 22268 13044 < TEXT '[{"ev":"status","status":"max_connections","mes...onnections exceeded."}]' [96 bytes]
2023-06-25 21:30:21,274 DEBUG protocol 22268 13044 < CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:30:21,274 DEBUG protocol 22268 13044 = connection is CLOSING
2023-06-25 21:30:21,274 DEBUG protocol 22268 13044 > CLOSE 1008 (policy violation) [2 bytes]
2023-06-25 21:30:21,275 DEBUG protocol 22268 13044 = connection is CLOSED
2023-06-25 21:30:21,275 DEBUG __init__ 22268 13044 status: Maximum number of connections exceeded.
2023-06-25 21:30:21,276 DEBUG protocol 22268 13044 x closing TCP connection
2023-06-25 21:30:21,276 DEBUG __init__ 22268 13044 connection closed (ERR): received 1008 (policy violation); then sent 1008 (policy violation)
2023-06-25 21:30:21,380 DEBUG protocol 22268 13044 = connection is CONNECTING
2023-06-25 21:30:21,485 DEBUG client 22268 13044 > GET /crypto HTTP/1.1
2023-06-25 21:30:21,485 DEBUG client 22268 13044 > Host: socket.polygon.io
2023-06-25 21:30:21,485 DEBUG client 22268 13044 > Upgrade: websocket
2023-06-25 21:30:21,486 DEBUG client 22268 13044 > Connection: Upgrade
2023-06-25 21:30:21,486 DEBUG client 22268 13044 > Sec-WebSocket-Key: F5uIIOe77tR3GchZ2fjHFw==
2023-06-25 21:30:21,486 DEBUG client 22268 13044 > Sec-WebSocket-Version: 13
2023-06-25 21:30:21,486 DEBUG client 22268 13044 > Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2023-06-25 21:30:21,486 DEBUG client 22268 13044 > User-Agent: Python/3.10 websockets/10.4
2023-06-25 21:30:21,689 DEBUG client 22268 13044 < HTTP/1.1 101 Switching Protocols
2023-06-25 21:30:21,689 DEBUG client 22268 13044 < Server: nginx/1.19.2
2023-06-25 21:30:21,689 DEBUG client 22268 13044 < Date: Sun, 25 Jun 2023 18:30:22 GMT
2023-06-25 21:30:21,689 DEBUG client 22268 13044 < Connection: upgrade
2023-06-25 21:30:21,689 DEBUG client 22268 13044 < Upgrade: websocket
2023-06-25 21:30:21,689 DEBUG client 22268 13044 < Sec-WebSocket-Accept: n6KZ7DTyp1V8n7jR6OK80aTBmzU=
2023-06-25 21:30:21,689 DEBUG client 22268 13044 < Strict-Transport-Security: max-age=15724800; includeSubDomains
2023-06-25 21:30:21,689 DEBUG protocol 22268 13044 = connection is OPEN
2023-06-25 21:30:21,690 DEBUG protocol 22268 13044 < TEXT '[{"ev":"status","status":"connected","message":"Connected Successfully"}]' [73 bytes]
2023-06-25 21:30:21,690 DEBUG __init__ 22268 13044 connected: [{"ev":"status","status":"connected","message":"Connected Successfully"}]
2023-06-25 21:30:21,690 DEBUG __init__ 22268 13044 authing...
2023-06-25 21:30:21,690 DEBUG protocol 22268 13044 > TEXT '{"action": "auth", "params": "znfXR7OLa31mT1BPHuSl60vIl_syeOoQ"}' [64 bytes]
2023-06-25 21:30:21,792 DEBUG protocol 22268 13044 < TEXT '[{"ev":"status","status":"auth_success","message":"authenticated"}]' [67 bytes]
2023-06-25 21:30:21,792 DEBUG __init__ 22268 13044 authed: [{"ev":"status","status":"auth_success","message":"authenticated"}]
2023-06-25 21:30:21,793 DEBUG __init__ 22268 13044 reconciling: set() {'XT.BTC-USD'}
2023-06-25 21:30:21,793 DEBUG __init__ 22268 13044 subbing: XT.BTC-USD
2023-06-25 21:30:21,793 DEBUG protocol 22268 13044 > TEXT '{"action": "subscribe", "params": "XT.BTC-USD"}' [47 bytes]
2023-06-25 21:30:21,896 DEBUG protocol 22268 13044 < TEXT '[{"ev":"status","status":"success","message":"s...ribed to: XT.BTC-USD"}]' [74 bytes]
2023-06-25 21:30:21,896 DEBUG __init__ 22268 13044 status: subscribed to: XT.BTC-USD
2023-06-25 21:30:22,203 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.79,"t":1...":1,"r":1687717822554}]' [124 bytes]
2023-06-25 21:30:23,799 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.2,"t":16...:23,"r":1687717824150}]' [146 bytes]
2023-06-25 21:30:24,849 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.1,"t":16...":1,"r":1687717825199}]' [121 bytes]
2023-06-25 21:30:24,849 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.1,"t":16...":1,"r":1687717825199}]' [121 bytes]
2023-06-25 21:30:25,048 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.25,"t":1...":1,"r":1687717825399}]' [124 bytes]
2023-06-25 21:30:25,722 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.09,"t":1...":1,"r":1687717826073}]' [124 bytes]
2023-06-25 21:30:26,187 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.32,"t":1...":1,"r":1687717826538}]' [124 bytes]
2023-06-25 21:30:26,423 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.32,"t":1...":1,"r":1687717826773}]' [124 bytes]
2023-06-25 21:30:26,423 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.45,"t":1...":1,"r":1687717826774}]' [366 bytes]
2023-06-25 21:30:26,457 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.31,"t":1...":1,"r":1687717826808}]' [124 bytes]
2023-06-25 21:30:26,689 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:30:26,689 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:30:26,786 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.65,"t":1...":1,"r":1687717827137}]' [122 bytes]
2023-06-25 21:30:26,787 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30400.65,"t":1...":1,"r":1687717827137}]' [124 bytes]
2023-06-25 21:30:28,293 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30405.32,"t":1...":1,"r":1687717828645}]' [124 bytes]
2023-06-25 21:30:29,051 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.2,"t":16...":1,"r":1687717829402}]' [123 bytes]
2023-06-25 21:30:29,052 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.2,"t":16...":1,"r":1687717829402}]' [123 bytes]
2023-06-25 21:30:29,285 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.2,"t":16...:23,"r":1687717829636}]' [146 bytes]
2023-06-25 21:30:30,284 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.42,"t":1...":1,"r":1687717830635}]' [124 bytes]
2023-06-25 21:30:30,284 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30403.42,"t":1...":1,"r":1687717830635}]' [118 bytes]
2023-06-25 21:30:30,988 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.02,"t":1...":1,"r":1687717831332}]' [124 bytes]
2023-06-25 21:30:31,433 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.02,"t":1...":1,"r":1687717831776}]' [124 bytes]
2023-06-25 21:30:31,453 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30404.02,"t":1...":1,"r":1687717831805}]' [122 bytes]
2023-06-25 21:30:31,688 DEBUG protocol 22268 13044 < PING '' [0 bytes]
2023-06-25 21:30:31,689 DEBUG protocol 22268 13044 > PONG '' [0 bytes]
2023-06-25 21:30:32,588 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.09,"t":1...":1,"r":1687717832940}]' [121 bytes]
2023-06-25 21:30:32,786 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30390.2,"t":16...:23,"r":1687717833138}]' [151 bytes]
2023-06-25 21:30:33,338 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.58,"t":1...":1,"r":1687717833690}]' [124 bytes]
2023-06-25 21:30:33,532 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.1,"t":16...":1,"r":1687717833884}]' [119 bytes]
2023-06-25 21:30:33,974 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.28,"t":1...":1,"r":1687717834326}]' [123 bytes]
2023-06-25 21:30:34,350 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30402.27,"t":1...":1,"r":1687717834702}]' [123 bytes]
2023-06-25 21:30:34,382 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.11,"t":1...":1,"r":1687717834734}]' [118 bytes]
2023-06-25 21:30:34,382 DEBUG protocol 22268 13044 < TEXT '[{"ev":"XT","pair":"BTC-USD","p":30401.1,"t":16...":1,"r":1687717834734}]' [123 bytes]
2023-06-26 11:13:41,778 INFO autoreload 21308 6540 Watching for file changes with StatReloader
2023-06-26 11:14:00,105 DEBUG functional 14548 13060 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 11:14:00,106 DEBUG functional 14548 13060 
def backend_cleanup():
    return 1

2023-06-26 11:14:00,106 DEBUG functional 14548 13060 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 11:14:00,106 DEBUG functional 14548 13060 
def xmap(task, it):
    return 1

2023-06-26 11:14:00,107 DEBUG functional 14548 13060 
def chain(*args, **kwargs):
    return 1

2023-06-26 11:14:00,107 DEBUG functional 14548 13060 
def debug_task(self):
    return 1

2023-06-26 11:14:00,107 DEBUG functional 14548 13060 
def xstarmap(task, it):
    return 1

2023-06-26 11:14:00,108 DEBUG functional 14548 13060 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 11:14:00,108 DEBUG functional 14548 13060 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 11:14:00,108 DEBUG functional 14548 13060 
def chunks(task, it, n):
    return 1

2023-06-26 11:14:00,109 DEBUG functional 14548 13060 
def get_current_buy_price(symbol):
    return 1

2023-06-26 11:15:14,997 INFO autoreload 21956 21772 Watching for file changes with StatReloader
2023-06-26 11:15:24,937 DEBUG functional 11980 8956 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 11:15:24,937 DEBUG functional 11980 8956 
def backend_cleanup():
    return 1

2023-06-26 11:15:24,938 DEBUG functional 11980 8956 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 11:15:24,938 DEBUG functional 11980 8956 
def xmap(task, it):
    return 1

2023-06-26 11:15:24,939 DEBUG functional 11980 8956 
def chain(*args, **kwargs):
    return 1

2023-06-26 11:15:24,939 DEBUG functional 11980 8956 
def debug_task(self):
    return 1

2023-06-26 11:15:24,939 DEBUG functional 11980 8956 
def xstarmap(task, it):
    return 1

2023-06-26 11:15:24,940 DEBUG functional 11980 8956 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 11:15:24,940 DEBUG functional 11980 8956 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 11:15:24,940 DEBUG functional 11980 8956 
def chunks(task, it, n):
    return 1

2023-06-26 11:15:24,941 DEBUG functional 11980 8956 
def get_current_buy_price(symbol):
    return 1

2023-06-26 11:15:48,154 DEBUG functional 12512 20760 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 11:15:48,154 DEBUG functional 12512 20760 
def backend_cleanup():
    return 1

2023-06-26 11:15:48,154 DEBUG functional 12512 20760 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 11:15:48,155 DEBUG functional 12512 20760 
def xmap(task, it):
    return 1

2023-06-26 11:15:48,155 DEBUG functional 12512 20760 
def chain(*args, **kwargs):
    return 1

2023-06-26 11:15:48,155 DEBUG functional 12512 20760 
def debug_task(self):
    return 1

2023-06-26 11:15:48,156 DEBUG functional 12512 20760 
def xstarmap(task, it):
    return 1

2023-06-26 11:15:48,156 DEBUG functional 12512 20760 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 11:15:48,156 DEBUG functional 12512 20760 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 11:15:48,157 DEBUG functional 12512 20760 
def chunks(task, it, n):
    return 1

2023-06-26 11:15:48,157 DEBUG functional 12512 20760 
def get_current_buy_price(symbol):
    return 1

2023-06-26 11:16:10,878 INFO autoreload 21956 21772 C:\Users\Evert\Desktop\Django\monreal\monreal\settings.py changed, reloading.
2023-06-26 11:16:19,415 INFO autoreload 7616 14388 Watching for file changes with StatReloader
2023-06-26 11:16:26,343 DEBUG functional 6264 20712 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 11:16:26,344 DEBUG functional 6264 20712 
def backend_cleanup():
    return 1

2023-06-26 11:16:26,344 DEBUG functional 6264 20712 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 11:16:26,344 DEBUG functional 6264 20712 
def xmap(task, it):
    return 1

2023-06-26 11:16:26,345 DEBUG functional 6264 20712 
def chain(*args, **kwargs):
    return 1

2023-06-26 11:16:26,345 DEBUG functional 6264 20712 
def debug_task(self):
    return 1

2023-06-26 11:16:26,345 DEBUG functional 6264 20712 
def xstarmap(task, it):
    return 1

2023-06-26 11:16:26,346 DEBUG functional 6264 20712 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 11:16:26,346 DEBUG functional 6264 20712 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 11:16:26,346 DEBUG functional 6264 20712 
def chunks(task, it, n):
    return 1

2023-06-26 11:16:26,347 DEBUG functional 6264 20712 
def get_current_buy_price(symbol):
    return 1

2023-06-26 11:16:34,855 DEBUG functional 16012 7664 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 11:16:34,855 DEBUG functional 16012 7664 
def backend_cleanup():
    return 1

2023-06-26 11:16:34,856 DEBUG functional 16012 7664 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 11:16:34,856 DEBUG functional 16012 7664 
def xmap(task, it):
    return 1

2023-06-26 11:16:34,857 DEBUG functional 16012 7664 
def chain(*args, **kwargs):
    return 1

2023-06-26 11:16:34,857 DEBUG functional 16012 7664 
def debug_task(self):
    return 1

2023-06-26 11:16:34,857 DEBUG functional 16012 7664 
def xstarmap(task, it):
    return 1

2023-06-26 11:16:34,858 DEBUG functional 16012 7664 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 11:16:34,858 DEBUG functional 16012 7664 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 11:16:34,858 DEBUG functional 16012 7664 
def chunks(task, it, n):
    return 1

2023-06-26 11:16:34,859 DEBUG functional 16012 7664 
def get_current_buy_price(symbol):
    return 1

2023-06-26 11:54:30,147 INFO autoreload 1228 14488 Watching for file changes with StatReloader
2023-06-26 11:54:48,442 DEBUG functional 16268 16016 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 11:54:48,442 DEBUG functional 16268 16016 
def backend_cleanup():
    return 1

2023-06-26 11:54:48,442 DEBUG functional 16268 16016 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 11:54:48,443 DEBUG functional 16268 16016 
def xmap(task, it):
    return 1

2023-06-26 11:54:48,443 DEBUG functional 16268 16016 
def chain(*args, **kwargs):
    return 1

2023-06-26 11:54:48,443 DEBUG functional 16268 16016 
def debug_task(self):
    return 1

2023-06-26 11:54:48,444 DEBUG functional 16268 16016 
def xstarmap(task, it):
    return 1

2023-06-26 11:54:48,444 DEBUG functional 16268 16016 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 11:54:48,445 DEBUG functional 16268 16016 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 11:54:48,445 DEBUG functional 16268 16016 
def chunks(task, it, n):
    return 1

2023-06-26 11:54:48,446 DEBUG functional 16268 16016 
def get_current_buy_price(symbol):
    return 1

2023-06-26 11:55:05,548 DEBUG functional 17792 22836 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 11:55:05,548 DEBUG functional 17792 22836 
def backend_cleanup():
    return 1

2023-06-26 11:55:05,548 DEBUG functional 17792 22836 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 11:55:05,549 DEBUG functional 17792 22836 
def xmap(task, it):
    return 1

2023-06-26 11:55:05,549 DEBUG functional 17792 22836 
def chain(*args, **kwargs):
    return 1

2023-06-26 11:55:05,550 DEBUG functional 17792 22836 
def debug_task(self):
    return 1

2023-06-26 11:55:05,550 DEBUG functional 17792 22836 
def xstarmap(task, it):
    return 1

2023-06-26 11:55:05,551 DEBUG functional 17792 22836 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 11:55:05,551 DEBUG functional 17792 22836 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 11:55:05,551 DEBUG functional 17792 22836 
def chunks(task, it, n):
    return 1

2023-06-26 11:55:05,552 DEBUG functional 17792 22836 
def get_current_buy_price(symbol):
    return 1

2023-06-26 11:57:35,962 INFO autoreload 22652 20340 Watching for file changes with StatReloader
2023-06-26 11:57:50,042 DEBUG functional 8092 23344 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 11:57:50,043 DEBUG functional 8092 23344 
def backend_cleanup():
    return 1

2023-06-26 11:57:50,043 DEBUG functional 8092 23344 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 11:57:50,044 DEBUG functional 8092 23344 
def xmap(task, it):
    return 1

2023-06-26 11:57:50,044 DEBUG functional 8092 23344 
def chain(*args, **kwargs):
    return 1

2023-06-26 11:57:50,044 DEBUG functional 8092 23344 
def debug_task(self):
    return 1

2023-06-26 11:57:50,045 DEBUG functional 8092 23344 
def xstarmap(task, it):
    return 1

2023-06-26 11:57:50,045 DEBUG functional 8092 23344 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 11:57:50,045 DEBUG functional 8092 23344 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 11:57:50,046 DEBUG functional 8092 23344 
def chunks(task, it, n):
    return 1

2023-06-26 11:57:50,046 DEBUG functional 8092 23344 
def get_current_buy_price(symbol):
    return 1

2023-06-26 11:58:01,308 DEBUG functional 23400 22344 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 11:58:01,308 DEBUG functional 23400 22344 
def backend_cleanup():
    return 1

2023-06-26 11:58:01,309 DEBUG functional 23400 22344 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 11:58:01,309 DEBUG functional 23400 22344 
def xmap(task, it):
    return 1

2023-06-26 11:58:01,309 DEBUG functional 23400 22344 
def chain(*args, **kwargs):
    return 1

2023-06-26 11:58:01,310 DEBUG functional 23400 22344 
def debug_task(self):
    return 1

2023-06-26 11:58:01,310 DEBUG functional 23400 22344 
def xstarmap(task, it):
    return 1

2023-06-26 11:58:01,310 DEBUG functional 23400 22344 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 11:58:01,311 DEBUG functional 23400 22344 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 11:58:01,311 DEBUG functional 23400 22344 
def chunks(task, it, n):
    return 1

2023-06-26 11:58:01,311 DEBUG functional 23400 22344 
def get_current_buy_price(symbol):
    return 1

2023-06-26 11:58:39,647 INFO autoreload 5488 1976 Watching for file changes with StatReloader
2023-06-26 11:58:45,898 DEBUG functional 20992 19524 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 11:58:45,899 DEBUG functional 20992 19524 
def backend_cleanup():
    return 1

2023-06-26 11:58:45,899 DEBUG functional 20992 19524 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 11:58:45,900 DEBUG functional 20992 19524 
def xmap(task, it):
    return 1

2023-06-26 11:58:45,900 DEBUG functional 20992 19524 
def chain(*args, **kwargs):
    return 1

2023-06-26 11:58:45,900 DEBUG functional 20992 19524 
def debug_task(self):
    return 1

2023-06-26 11:58:45,901 DEBUG functional 20992 19524 
def xstarmap(task, it):
    return 1

2023-06-26 11:58:45,901 DEBUG functional 20992 19524 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 11:58:45,901 DEBUG functional 20992 19524 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 11:58:45,902 DEBUG functional 20992 19524 
def chunks(task, it, n):
    return 1

2023-06-26 11:58:45,902 DEBUG functional 20992 19524 
def get_current_buy_price(symbol):
    return 1

2023-06-26 11:58:53,926 DEBUG functional 24172 10636 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 11:58:53,926 DEBUG functional 24172 10636 
def backend_cleanup():
    return 1

2023-06-26 11:58:53,927 DEBUG functional 24172 10636 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 11:58:53,927 DEBUG functional 24172 10636 
def xmap(task, it):
    return 1

2023-06-26 11:58:53,927 DEBUG functional 24172 10636 
def chain(*args, **kwargs):
    return 1

2023-06-26 11:58:53,928 DEBUG functional 24172 10636 
def debug_task(self):
    return 1

2023-06-26 11:58:53,928 DEBUG functional 24172 10636 
def xstarmap(task, it):
    return 1

2023-06-26 11:58:53,928 DEBUG functional 24172 10636 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 11:58:53,929 DEBUG functional 24172 10636 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 11:58:53,929 DEBUG functional 24172 10636 
def chunks(task, it, n):
    return 1

2023-06-26 11:58:53,930 DEBUG functional 24172 10636 
def get_current_buy_price(symbol):
    return 1

2023-06-26 12:01:44,356 INFO autoreload 18648 19684 Watching for file changes with StatReloader
2023-06-26 12:01:50,621 DEBUG functional 6580 4512 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:01:50,621 DEBUG functional 6580 4512 
def backend_cleanup():
    return 1

2023-06-26 12:01:50,622 DEBUG functional 6580 4512 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:01:50,622 DEBUG functional 6580 4512 
def xmap(task, it):
    return 1

2023-06-26 12:01:50,622 DEBUG functional 6580 4512 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:01:50,623 DEBUG functional 6580 4512 
def debug_task(self):
    return 1

2023-06-26 12:01:50,623 DEBUG functional 6580 4512 
def xstarmap(task, it):
    return 1

2023-06-26 12:01:50,623 DEBUG functional 6580 4512 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:01:50,624 DEBUG functional 6580 4512 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:01:50,624 DEBUG functional 6580 4512 
def chunks(task, it, n):
    return 1

2023-06-26 12:01:50,624 DEBUG functional 6580 4512 
def get_current_buy_price(symbol):
    return 1

2023-06-26 12:01:59,802 DEBUG functional 18376 5452 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:01:59,802 DEBUG functional 18376 5452 
def backend_cleanup():
    return 1

2023-06-26 12:01:59,803 DEBUG functional 18376 5452 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:01:59,803 DEBUG functional 18376 5452 
def xmap(task, it):
    return 1

2023-06-26 12:01:59,804 DEBUG functional 18376 5452 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:01:59,804 DEBUG functional 18376 5452 
def debug_task(self):
    return 1

2023-06-26 12:01:59,805 DEBUG functional 18376 5452 
def xstarmap(task, it):
    return 1

2023-06-26 12:01:59,805 DEBUG functional 18376 5452 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:01:59,805 DEBUG functional 18376 5452 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:01:59,806 DEBUG functional 18376 5452 
def chunks(task, it, n):
    return 1

2023-06-26 12:01:59,806 DEBUG functional 18376 5452 
def get_current_buy_price(symbol):
    return 1

2023-06-26 12:03:36,311 INFO autoreload 18648 19684 C:\Users\Evert\Desktop\Django\monreal\monreal\settings.py changed, reloading.
2023-06-26 12:03:37,846 INFO autoreload 22000 23456 Watching for file changes with StatReloader
2023-06-26 12:03:43,490 DEBUG functional 18856 13736 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:03:43,491 DEBUG functional 18856 13736 
def backend_cleanup():
    return 1

2023-06-26 12:03:43,491 DEBUG functional 18856 13736 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:03:43,492 DEBUG functional 18856 13736 
def xmap(task, it):
    return 1

2023-06-26 12:03:43,492 DEBUG functional 18856 13736 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:03:43,492 DEBUG functional 18856 13736 
def debug_task(self):
    return 1

2023-06-26 12:03:43,493 DEBUG functional 18856 13736 
def xstarmap(task, it):
    return 1

2023-06-26 12:03:43,493 DEBUG functional 18856 13736 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:03:43,493 DEBUG functional 18856 13736 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:03:43,494 DEBUG functional 18856 13736 
def chunks(task, it, n):
    return 1

2023-06-26 12:03:43,494 DEBUG functional 18856 13736 
def get_current_buy_price(symbol):
    return 1

2023-06-26 12:03:51,126 DEBUG functional 24180 17760 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:03:51,127 DEBUG functional 24180 17760 
def backend_cleanup():
    return 1

2023-06-26 12:03:51,127 DEBUG functional 24180 17760 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:03:51,128 DEBUG functional 24180 17760 
def xmap(task, it):
    return 1

2023-06-26 12:03:51,128 DEBUG functional 24180 17760 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:03:51,128 DEBUG functional 24180 17760 
def debug_task(self):
    return 1

2023-06-26 12:03:51,129 DEBUG functional 24180 17760 
def xstarmap(task, it):
    return 1

2023-06-26 12:03:51,129 DEBUG functional 24180 17760 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:03:51,130 DEBUG functional 24180 17760 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:03:51,130 DEBUG functional 24180 17760 
def chunks(task, it, n):
    return 1

2023-06-26 12:03:51,130 DEBUG functional 24180 17760 
def get_current_buy_price(symbol):
    return 1

2023-06-26 12:05:35,047 INFO autoreload 22000 23456 C:\Users\Evert\Desktop\Django\monreal\monreal\settings.py changed, reloading.
2023-06-26 12:05:36,547 INFO autoreload 23740 16088 Watching for file changes with StatReloader
2023-06-26 12:05:43,416 DEBUG functional 20396 11208 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:05:43,417 DEBUG functional 20396 11208 
def backend_cleanup():
    return 1

2023-06-26 12:05:43,417 DEBUG functional 20396 11208 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:05:43,418 DEBUG functional 20396 11208 
def xmap(task, it):
    return 1

2023-06-26 12:05:43,418 DEBUG functional 20396 11208 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:05:43,418 DEBUG functional 20396 11208 
def debug_task(self):
    return 1

2023-06-26 12:05:43,419 DEBUG functional 20396 11208 
def xstarmap(task, it):
    return 1

2023-06-26 12:05:43,419 DEBUG functional 20396 11208 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:05:43,420 DEBUG functional 20396 11208 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:05:43,421 DEBUG functional 20396 11208 
def chunks(task, it, n):
    return 1

2023-06-26 12:05:43,421 DEBUG functional 20396 11208 
def get_current_buy_price(symbol):
    return 1

2023-06-26 12:05:51,098 DEBUG functional 18300 9228 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:05:51,099 DEBUG functional 18300 9228 
def backend_cleanup():
    return 1

2023-06-26 12:05:51,099 DEBUG functional 18300 9228 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:05:51,099 DEBUG functional 18300 9228 
def xmap(task, it):
    return 1

2023-06-26 12:05:51,100 DEBUG functional 18300 9228 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:05:51,100 DEBUG functional 18300 9228 
def debug_task(self):
    return 1

2023-06-26 12:05:51,100 DEBUG functional 18300 9228 
def xstarmap(task, it):
    return 1

2023-06-26 12:05:51,101 DEBUG functional 18300 9228 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:05:51,101 DEBUG functional 18300 9228 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:05:51,101 DEBUG functional 18300 9228 
def chunks(task, it, n):
    return 1

2023-06-26 12:05:51,102 DEBUG functional 18300 9228 
def get_current_buy_price(symbol):
    return 1

2023-06-26 12:06:10,974 INFO autoreload 23740 16088 C:\Users\Evert\Desktop\Django\monreal\monreal\settings.py changed, reloading.
2023-06-26 12:06:12,587 INFO autoreload 10072 10232 Watching for file changes with StatReloader
2023-06-26 12:06:20,168 DEBUG functional 9428 13388 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:06:20,169 DEBUG functional 9428 13388 
def backend_cleanup():
    return 1

2023-06-26 12:06:20,170 DEBUG functional 9428 13388 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:06:20,170 DEBUG functional 9428 13388 
def xmap(task, it):
    return 1

2023-06-26 12:06:20,171 DEBUG functional 9428 13388 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:06:20,171 DEBUG functional 9428 13388 
def debug_task(self):
    return 1

2023-06-26 12:06:20,171 DEBUG functional 9428 13388 
def xstarmap(task, it):
    return 1

2023-06-26 12:06:20,172 DEBUG functional 9428 13388 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:06:20,172 DEBUG functional 9428 13388 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:06:20,172 DEBUG functional 9428 13388 
def chunks(task, it, n):
    return 1

2023-06-26 12:06:20,173 DEBUG functional 9428 13388 
def get_current_buy_price(symbol):
    return 1

2023-06-26 12:09:48,776 INFO autoreload 10072 10232 C:\Users\Evert\Desktop\Django\monreal\monreal\celery.py changed, reloading.
2023-06-26 12:09:50,335 INFO autoreload 3172 16820 Watching for file changes with StatReloader
2023-06-26 12:09:57,701 DEBUG functional 24088 11428 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:09:57,701 DEBUG functional 24088 11428 
def backend_cleanup():
    return 1

2023-06-26 12:09:57,702 DEBUG functional 24088 11428 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:09:57,702 DEBUG functional 24088 11428 
def xmap(task, it):
    return 1

2023-06-26 12:09:57,702 DEBUG functional 24088 11428 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:09:57,703 DEBUG functional 24088 11428 
def debug_task(self):
    return 1

2023-06-26 12:09:57,703 DEBUG functional 24088 11428 
def xstarmap(task, it):
    return 1

2023-06-26 12:09:57,703 DEBUG functional 24088 11428 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:09:57,704 DEBUG functional 24088 11428 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:09:57,704 DEBUG functional 24088 11428 
def chunks(task, it, n):
    return 1

2023-06-26 12:09:57,704 DEBUG functional 24088 11428 
def get_current_buy_price(symbol):
    return 1

2023-06-26 12:10:05,385 DEBUG functional 11376 8568 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:10:05,386 DEBUG functional 11376 8568 
def backend_cleanup():
    return 1

2023-06-26 12:10:05,386 DEBUG functional 11376 8568 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:10:05,387 DEBUG functional 11376 8568 
def xmap(task, it):
    return 1

2023-06-26 12:10:05,387 DEBUG functional 11376 8568 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:10:05,387 DEBUG functional 11376 8568 
def debug_task(self):
    return 1

2023-06-26 12:10:05,388 DEBUG functional 11376 8568 
def xstarmap(task, it):
    return 1

2023-06-26 12:10:05,388 DEBUG functional 11376 8568 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:10:05,388 DEBUG functional 11376 8568 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:10:05,389 DEBUG functional 11376 8568 
def chunks(task, it, n):
    return 1

2023-06-26 12:10:05,389 DEBUG functional 11376 8568 
def get_current_buy_price(symbol):
    return 1

2023-06-26 12:11:13,300 INFO autoreload 3172 16820 C:\Users\Evert\Desktop\Django\monreal\monreal\settings.py changed, reloading.
2023-06-26 12:11:14,968 INFO autoreload 16904 15448 Watching for file changes with StatReloader
2023-06-26 12:11:21,290 DEBUG functional 10140 9556 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:11:21,291 DEBUG functional 10140 9556 
def backend_cleanup():
    return 1

2023-06-26 12:11:21,291 DEBUG functional 10140 9556 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:11:21,292 DEBUG functional 10140 9556 
def xmap(task, it):
    return 1

2023-06-26 12:11:21,292 DEBUG functional 10140 9556 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:11:21,292 DEBUG functional 10140 9556 
def debug_task(self):
    return 1

2023-06-26 12:11:21,293 DEBUG functional 10140 9556 
def xstarmap(task, it):
    return 1

2023-06-26 12:11:21,293 DEBUG functional 10140 9556 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:11:21,294 DEBUG functional 10140 9556 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:11:21,294 DEBUG functional 10140 9556 
def chunks(task, it, n):
    return 1

2023-06-26 12:11:21,295 DEBUG functional 10140 9556 
def get_current_buy_price(symbol):
    return 1

2023-06-26 12:11:27,783 DEBUG functional 13168 11764 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:11:27,784 DEBUG functional 13168 11764 
def backend_cleanup():
    return 1

2023-06-26 12:11:27,784 DEBUG functional 13168 11764 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:11:27,785 DEBUG functional 13168 11764 
def xmap(task, it):
    return 1

2023-06-26 12:11:27,785 DEBUG functional 13168 11764 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:11:27,785 DEBUG functional 13168 11764 
def debug_task(self):
    return 1

2023-06-26 12:11:27,786 DEBUG functional 13168 11764 
def xstarmap(task, it):
    return 1

2023-06-26 12:11:27,786 DEBUG functional 13168 11764 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:11:27,786 DEBUG functional 13168 11764 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:11:27,787 DEBUG functional 13168 11764 
def chunks(task, it, n):
    return 1

2023-06-26 12:11:27,787 DEBUG functional 13168 11764 
def get_current_buy_price(symbol):
    return 1

2023-06-26 12:15:16,295 INFO autoreload 9264 14672 Watching for file changes with StatReloader
2023-06-26 12:15:30,391 DEBUG functional 17320 23704 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:15:30,392 DEBUG functional 17320 23704 
def backend_cleanup():
    return 1

2023-06-26 12:15:30,392 DEBUG functional 17320 23704 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:15:30,393 DEBUG functional 17320 23704 
def debug_task(self):
    return 1

2023-06-26 12:15:30,393 DEBUG functional 17320 23704 
def xmap(task, it):
    return 1

2023-06-26 12:15:30,393 DEBUG functional 17320 23704 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:15:30,394 DEBUG functional 17320 23704 
def xstarmap(task, it):
    return 1

2023-06-26 12:15:30,394 DEBUG functional 17320 23704 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:15:30,394 DEBUG functional 17320 23704 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:15:30,395 DEBUG functional 17320 23704 
def chunks(task, it, n):
    return 1

2023-06-26 12:15:50,920 DEBUG functional 7160 23124 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:15:50,921 DEBUG functional 7160 23124 
def backend_cleanup():
    return 1

2023-06-26 12:15:50,921 DEBUG functional 7160 23124 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:15:50,922 DEBUG functional 7160 23124 
def debug_task(self):
    return 1

2023-06-26 12:15:50,922 DEBUG functional 7160 23124 
def xmap(task, it):
    return 1

2023-06-26 12:15:50,922 DEBUG functional 7160 23124 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:15:50,923 DEBUG functional 7160 23124 
def xstarmap(task, it):
    return 1

2023-06-26 12:15:50,923 DEBUG functional 7160 23124 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:15:50,923 DEBUG functional 7160 23124 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:15:50,924 DEBUG functional 7160 23124 
def chunks(task, it, n):
    return 1

2023-06-26 12:20:37,220 INFO autoreload 9264 14672 C:\Users\Evert\Desktop\Django\monreal\monreal\celery.py changed, reloading.
2023-06-26 12:20:38,922 INFO autoreload 24004 19532 Watching for file changes with StatReloader
2023-06-26 12:21:13,469 INFO autoreload 13492 15872 Watching for file changes with StatReloader
2023-06-26 12:21:20,331 DEBUG functional 6832 14632 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:21:20,332 DEBUG functional 6832 14632 
def backend_cleanup():
    return 1

2023-06-26 12:21:20,332 DEBUG functional 6832 14632 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:21:20,332 DEBUG functional 6832 14632 
def debug_task(self):
    return 1

2023-06-26 12:21:20,333 DEBUG functional 6832 14632 
def xmap(task, it):
    return 1

2023-06-26 12:21:20,333 DEBUG functional 6832 14632 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:21:20,333 DEBUG functional 6832 14632 
def xstarmap(task, it):
    return 1

2023-06-26 12:21:20,334 DEBUG functional 6832 14632 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:21:20,334 DEBUG functional 6832 14632 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:21:20,334 DEBUG functional 6832 14632 
def chunks(task, it, n):
    return 1

2023-06-26 12:23:10,860 INFO autoreload 13492 15872 C:\Users\Evert\Desktop\Django\monreal\monreal\celery.py changed, reloading.
2023-06-26 12:23:12,491 INFO autoreload 21956 11772 Watching for file changes with StatReloader
2023-06-26 12:23:20,418 DEBUG functional 24028 13432 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:23:20,419 DEBUG functional 24028 13432 
def backend_cleanup():
    return 1

2023-06-26 12:23:20,419 DEBUG functional 24028 13432 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:23:20,419 DEBUG functional 24028 13432 
def debug_task(self):
    return 1

2023-06-26 12:23:20,420 DEBUG functional 24028 13432 
def xmap(task, it):
    return 1

2023-06-26 12:23:20,420 DEBUG functional 24028 13432 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:23:20,420 DEBUG functional 24028 13432 
def xstarmap(task, it):
    return 1

2023-06-26 12:23:20,421 DEBUG functional 24028 13432 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:23:20,421 DEBUG functional 24028 13432 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:23:20,421 DEBUG functional 24028 13432 
def chunks(task, it, n):
    return 1

2023-06-26 12:25:33,790 INFO autoreload 21956 11772 C:\Users\Evert\Desktop\Django\monreal\monreal\celery.py changed, reloading.
2023-06-26 12:25:35,515 INFO autoreload 2228 4008 Watching for file changes with StatReloader
2023-06-26 12:25:45,088 INFO autoreload 23076 23276 Watching for file changes with StatReloader
2023-06-26 12:25:53,186 DEBUG functional 4036 13340 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:25:53,187 DEBUG functional 4036 13340 
def backend_cleanup():
    return 1

2023-06-26 12:25:53,187 DEBUG functional 4036 13340 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:25:53,188 DEBUG functional 4036 13340 
def debug_task(self):
    return 1

2023-06-26 12:25:53,188 DEBUG functional 4036 13340 
def xmap(task, it):
    return 1

2023-06-26 12:25:53,188 DEBUG functional 4036 13340 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:25:53,188 DEBUG functional 4036 13340 
def xstarmap(task, it):
    return 1

2023-06-26 12:25:53,189 DEBUG functional 4036 13340 
def redis_test():
    return 1

2023-06-26 12:25:53,189 DEBUG functional 4036 13340 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:25:53,190 DEBUG functional 4036 13340 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:25:53,190 DEBUG functional 4036 13340 
def chunks(task, it, n):
    return 1

2023-06-26 12:26:25,973 INFO autoreload 23076 23276 C:\Users\Evert\Desktop\Django\monreal\monreal\settings.py changed, reloading.
2023-06-26 12:26:27,721 INFO autoreload 18172 10952 Watching for file changes with StatReloader
2023-06-26 12:26:35,134 INFO autoreload 5760 22836 Watching for file changes with StatReloader
2023-06-26 12:26:42,762 DEBUG functional 16320 3448 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:26:42,763 DEBUG functional 16320 3448 
def backend_cleanup():
    return 1

2023-06-26 12:26:42,763 DEBUG functional 16320 3448 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:26:42,763 DEBUG functional 16320 3448 
def debug_task(self):
    return 1

2023-06-26 12:26:42,764 DEBUG functional 16320 3448 
def xmap(task, it):
    return 1

2023-06-26 12:26:42,764 DEBUG functional 16320 3448 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:26:42,764 DEBUG functional 16320 3448 
def xstarmap(task, it):
    return 1

2023-06-26 12:26:42,765 DEBUG functional 16320 3448 
def redis_test():
    return 1

2023-06-26 12:26:42,765 DEBUG functional 16320 3448 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:26:42,765 DEBUG functional 16320 3448 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:26:42,766 DEBUG functional 16320 3448 
def chunks(task, it, n):
    return 1

2023-06-26 12:28:01,521 INFO autoreload 5760 22836 C:\Users\Evert\Desktop\Django\monreal\monreal\celery.py changed, reloading.
2023-06-26 12:28:03,340 INFO autoreload 24460 9164 Watching for file changes with StatReloader
2023-06-26 12:30:02,218 INFO autoreload 19888 20708 Watching for file changes with StatReloader
2023-06-26 12:30:08,865 DEBUG functional 1132 13848 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:30:08,866 DEBUG functional 1132 13848 
def backend_cleanup():
    return 1

2023-06-26 12:30:08,866 DEBUG functional 1132 13848 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:30:08,866 DEBUG functional 1132 13848 
def debug_task(self):
    return 1

2023-06-26 12:30:08,867 DEBUG functional 1132 13848 
def xmap(task, it):
    return 1

2023-06-26 12:30:08,867 DEBUG functional 1132 13848 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:30:08,867 DEBUG functional 1132 13848 
def xstarmap(task, it):
    return 1

2023-06-26 12:30:08,868 DEBUG functional 1132 13848 
def redis_test():
    return 1

2023-06-26 12:30:08,868 DEBUG functional 1132 13848 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:30:08,868 DEBUG functional 1132 13848 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:30:08,869 DEBUG functional 1132 13848 
def chunks(task, it, n):
    return 1

2023-06-26 12:34:43,552 INFO autoreload 19888 20708 C:\Users\Evert\Desktop\Django\monreal\monreal\celery.py changed, reloading.
2023-06-26 12:34:45,323 INFO autoreload 6668 19908 Watching for file changes with StatReloader
2023-06-26 12:34:57,885 DEBUG functional 23356 16420 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:34:57,886 DEBUG functional 23356 16420 
def backend_cleanup():
    return 1

2023-06-26 12:34:57,886 DEBUG functional 23356 16420 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:34:57,887 DEBUG functional 23356 16420 
def debug_task(self):
    return 1

2023-06-26 12:34:57,887 DEBUG functional 23356 16420 
def xmap(task, it):
    return 1

2023-06-26 12:34:57,887 DEBUG functional 23356 16420 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:34:57,888 DEBUG functional 23356 16420 
def xstarmap(task, it):
    return 1

2023-06-26 12:34:57,888 DEBUG functional 23356 16420 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:34:57,888 DEBUG functional 23356 16420 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:34:57,889 DEBUG functional 23356 16420 
def chunks(task, it, n):
    return 1

2023-06-26 12:35:20,923 INFO autoreload 6668 19908 C:\Users\Evert\Desktop\Django\monreal\monreal\celery.py changed, reloading.
2023-06-26 12:35:22,658 INFO autoreload 14092 23744 Watching for file changes with StatReloader
2023-06-26 12:35:32,505 INFO autoreload 14020 1984 Watching for file changes with StatReloader
2023-06-26 12:35:40,796 DEBUG functional 16976 23656 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:35:40,797 DEBUG functional 16976 23656 
def backend_cleanup():
    return 1

2023-06-26 12:35:40,797 DEBUG functional 16976 23656 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:35:40,797 DEBUG functional 16976 23656 
def debug_task(self):
    return 1

2023-06-26 12:35:40,798 DEBUG functional 16976 23656 
def xmap(task, it):
    return 1

2023-06-26 12:35:40,798 DEBUG functional 16976 23656 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:35:40,798 DEBUG functional 16976 23656 
def xstarmap(task, it):
    return 1

2023-06-26 12:35:40,799 DEBUG functional 16976 23656 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:35:40,799 DEBUG functional 16976 23656 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:35:40,800 DEBUG functional 16976 23656 
def chunks(task, it, n):
    return 1

2023-06-26 12:36:40,779 INFO autoreload 24316 19492 Watching for file changes with StatReloader
2023-06-26 12:37:03,125 DEBUG functional 22588 13860 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:37:03,125 DEBUG functional 22588 13860 
def backend_cleanup():
    return 1

2023-06-26 12:37:03,126 DEBUG functional 22588 13860 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:37:03,126 DEBUG functional 22588 13860 
def debug_task(self):
    return 1

2023-06-26 12:37:03,126 DEBUG functional 22588 13860 
def xmap(task, it):
    return 1

2023-06-26 12:37:03,127 DEBUG functional 22588 13860 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:37:03,127 DEBUG functional 22588 13860 
def xstarmap(task, it):
    return 1

2023-06-26 12:37:03,127 DEBUG functional 22588 13860 
def redis_test():
    return 1

2023-06-26 12:37:03,128 DEBUG functional 22588 13860 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:37:03,128 DEBUG functional 22588 13860 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:37:03,128 DEBUG functional 22588 13860 
def chunks(task, it, n):
    return 1

2023-06-26 12:44:19,524 INFO autoreload 18208 23600 Watching for file changes with StatReloader
2023-06-26 12:44:28,178 DEBUG functional 17288 21772 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:44:28,178 DEBUG functional 17288 21772 
def backend_cleanup():
    return 1

2023-06-26 12:44:28,178 DEBUG functional 17288 21772 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:44:28,179 DEBUG functional 17288 21772 
def debug_task(self):
    return 1

2023-06-26 12:44:28,179 DEBUG functional 17288 21772 
def xmap(task, it):
    return 1

2023-06-26 12:44:28,179 DEBUG functional 17288 21772 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:44:28,180 DEBUG functional 17288 21772 
def xstarmap(task, it):
    return 1

2023-06-26 12:44:28,180 DEBUG functional 17288 21772 
def redis_test():
    return 1

2023-06-26 12:44:28,180 DEBUG functional 17288 21772 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:44:28,181 DEBUG functional 17288 21772 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:44:28,181 DEBUG functional 17288 21772 
def chunks(task, it, n):
    return 1

2023-06-26 12:48:47,575 INFO autoreload 18208 23600 C:\Users\Evert\Desktop\Django\monreal\monreal\celery.py changed, reloading.
2023-06-26 12:48:49,127 INFO autoreload 22972 13408 Watching for file changes with StatReloader
2023-06-26 12:48:55,870 DEBUG functional 11956 17348 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:48:55,871 DEBUG functional 11956 17348 
def backend_cleanup():
    return 1

2023-06-26 12:48:55,871 DEBUG functional 11956 17348 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:48:55,871 DEBUG functional 11956 17348 
def debug_task(self):
    return 1

2023-06-26 12:48:55,872 DEBUG functional 11956 17348 
def xmap(task, it):
    return 1

2023-06-26 12:48:55,872 DEBUG functional 11956 17348 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:48:55,872 DEBUG functional 11956 17348 
def xstarmap(task, it):
    return 1

2023-06-26 12:48:55,873 DEBUG functional 11956 17348 
def redis_test():
    return 1

2023-06-26 12:48:55,873 DEBUG functional 11956 17348 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:48:55,873 DEBUG functional 11956 17348 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:48:55,874 DEBUG functional 11956 17348 
def chunks(task, it, n):
    return 1

2023-06-26 12:49:59,023 INFO autoreload 22972 13408 C:\Users\Evert\Desktop\Django\monreal\monreal\settings.py changed, reloading.
2023-06-26 12:50:00,590 INFO autoreload 16316 2904 Watching for file changes with StatReloader
2023-06-26 12:50:13,534 INFO autoreload 14388 24532 Watching for file changes with StatReloader
2023-06-26 12:50:20,474 DEBUG functional 18984 6576 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:50:20,475 DEBUG functional 18984 6576 
def backend_cleanup():
    return 1

2023-06-26 12:50:20,475 DEBUG functional 18984 6576 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:50:20,475 DEBUG functional 18984 6576 
def debug_task(self):
    return 1

2023-06-26 12:50:20,476 DEBUG functional 18984 6576 
def xmap(task, it):
    return 1

2023-06-26 12:50:20,476 DEBUG functional 18984 6576 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:50:20,476 DEBUG functional 18984 6576 
def xstarmap(task, it):
    return 1

2023-06-26 12:50:20,477 DEBUG functional 18984 6576 
def redis_test():
    return 1

2023-06-26 12:50:20,477 DEBUG functional 18984 6576 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:50:20,477 DEBUG functional 18984 6576 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:50:20,478 DEBUG functional 18984 6576 
def chunks(task, it, n):
    return 1

2023-06-26 12:50:33,934 DEBUG functional 22728 22724 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:50:33,934 DEBUG functional 22728 22724 
def backend_cleanup():
    return 1

2023-06-26 12:50:33,935 DEBUG functional 22728 22724 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:50:33,935 DEBUG functional 22728 22724 
def debug_task(self):
    return 1

2023-06-26 12:50:33,936 DEBUG functional 22728 22724 
def xmap(task, it):
    return 1

2023-06-26 12:50:33,936 DEBUG functional 22728 22724 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:50:33,936 DEBUG functional 22728 22724 
def xstarmap(task, it):
    return 1

2023-06-26 12:50:33,936 DEBUG functional 22728 22724 
def redis_test():
    return 1

2023-06-26 12:50:33,937 DEBUG functional 22728 22724 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:50:33,937 DEBUG functional 22728 22724 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:50:33,938 DEBUG functional 22728 22724 
def chunks(task, it, n):
    return 1

2023-06-26 12:50:55,533 INFO autoreload 14388 24532 C:\Users\Evert\Desktop\Django\monreal\monreal\settings.py changed, reloading.
2023-06-26 12:50:57,015 INFO autoreload 23212 22904 Watching for file changes with StatReloader
2023-06-26 12:51:10,127 DEBUG functional 21968 19772 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:51:10,127 DEBUG functional 21968 19772 
def backend_cleanup():
    return 1

2023-06-26 12:51:10,127 DEBUG functional 21968 19772 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:51:10,128 DEBUG functional 21968 19772 
def debug_task(self):
    return 1

2023-06-26 12:51:10,128 DEBUG functional 21968 19772 
def xmap(task, it):
    return 1

2023-06-26 12:51:10,128 DEBUG functional 21968 19772 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:51:10,129 DEBUG functional 21968 19772 
def xstarmap(task, it):
    return 1

2023-06-26 12:51:10,129 DEBUG functional 21968 19772 
def redis_test():
    return 1

2023-06-26 12:51:10,129 DEBUG functional 21968 19772 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:51:10,130 DEBUG functional 21968 19772 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:51:10,130 DEBUG functional 21968 19772 
def chunks(task, it, n):
    return 1

2023-06-26 12:51:18,146 DEBUG functional 23068 1736 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:51:18,147 DEBUG functional 23068 1736 
def backend_cleanup():
    return 1

2023-06-26 12:51:18,147 DEBUG functional 23068 1736 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:51:18,147 DEBUG functional 23068 1736 
def debug_task(self):
    return 1

2023-06-26 12:51:18,148 DEBUG functional 23068 1736 
def xmap(task, it):
    return 1

2023-06-26 12:51:18,148 DEBUG functional 23068 1736 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:51:18,148 DEBUG functional 23068 1736 
def xstarmap(task, it):
    return 1

2023-06-26 12:51:18,149 DEBUG functional 23068 1736 
def redis_test():
    return 1

2023-06-26 12:51:18,149 DEBUG functional 23068 1736 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:51:18,149 DEBUG functional 23068 1736 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:51:18,150 DEBUG functional 23068 1736 
def chunks(task, it, n):
    return 1

2023-06-26 12:52:11,268 INFO autoreload 23212 22904 C:\Users\Evert\Desktop\Django\monreal\monreal\celery.py changed, reloading.
2023-06-26 12:52:12,863 INFO autoreload 6540 8956 Watching for file changes with StatReloader
2023-06-26 12:52:20,732 DEBUG functional 20844 9568 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:52:20,732 DEBUG functional 20844 9568 
def backend_cleanup():
    return 1

2023-06-26 12:52:20,733 DEBUG functional 20844 9568 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:52:20,733 DEBUG functional 20844 9568 
def debug_task(self):
    return 1

2023-06-26 12:52:20,733 DEBUG functional 20844 9568 
def xmap(task, it):
    return 1

2023-06-26 12:52:20,733 DEBUG functional 20844 9568 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:52:20,734 DEBUG functional 20844 9568 
def xstarmap(task, it):
    return 1

2023-06-26 12:52:20,734 DEBUG functional 20844 9568 
def redis_test():
    return 1

2023-06-26 12:52:20,735 DEBUG functional 20844 9568 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:52:20,735 DEBUG functional 20844 9568 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:52:20,735 DEBUG functional 20844 9568 
def chunks(task, it, n):
    return 1

2023-06-26 12:52:28,002 DEBUG functional 20908 22000 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:52:28,003 DEBUG functional 20908 22000 
def backend_cleanup():
    return 1

2023-06-26 12:52:28,003 DEBUG functional 20908 22000 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:52:28,004 DEBUG functional 20908 22000 
def debug_task(self):
    return 1

2023-06-26 12:52:28,004 DEBUG functional 20908 22000 
def xmap(task, it):
    return 1

2023-06-26 12:52:28,004 DEBUG functional 20908 22000 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:52:28,005 DEBUG functional 20908 22000 
def xstarmap(task, it):
    return 1

2023-06-26 12:52:28,005 DEBUG functional 20908 22000 
def redis_test():
    return 1

2023-06-26 12:52:28,005 DEBUG functional 20908 22000 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:52:28,006 DEBUG functional 20908 22000 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:52:28,006 DEBUG functional 20908 22000 
def chunks(task, it, n):
    return 1

2023-06-26 12:53:42,146 INFO autoreload 6540 8956 C:\Users\Evert\Desktop\Django\monreal\monreal\celery.py changed, reloading.
2023-06-26 12:53:43,736 INFO autoreload 23996 15000 Watching for file changes with StatReloader
2023-06-26 12:53:49,768 DEBUG functional 10112 8132 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:53:49,769 DEBUG functional 10112 8132 
def backend_cleanup():
    return 1

2023-06-26 12:53:49,769 DEBUG functional 10112 8132 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:53:49,769 DEBUG functional 10112 8132 
def debug_task(self):
    return 1

2023-06-26 12:53:49,770 DEBUG functional 10112 8132 
def xmap(task, it):
    return 1

2023-06-26 12:53:49,770 DEBUG functional 10112 8132 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:53:49,770 DEBUG functional 10112 8132 
def xstarmap(task, it):
    return 1

2023-06-26 12:53:49,771 DEBUG functional 10112 8132 
def redis_test():
    return 1

2023-06-26 12:53:49,771 DEBUG functional 10112 8132 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:53:49,771 DEBUG functional 10112 8132 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:53:49,772 DEBUG functional 10112 8132 
def chunks(task, it, n):
    return 1

2023-06-26 12:53:56,392 DEBUG functional 23816 22880 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:53:56,392 DEBUG functional 23816 22880 
def backend_cleanup():
    return 1

2023-06-26 12:53:56,393 DEBUG functional 23816 22880 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:53:56,393 DEBUG functional 23816 22880 
def debug_task(self):
    return 1

2023-06-26 12:53:56,393 DEBUG functional 23816 22880 
def xmap(task, it):
    return 1

2023-06-26 12:53:56,394 DEBUG functional 23816 22880 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:53:56,394 DEBUG functional 23816 22880 
def xstarmap(task, it):
    return 1

2023-06-26 12:53:56,394 DEBUG functional 23816 22880 
def redis_test():
    return 1

2023-06-26 12:53:56,395 DEBUG functional 23816 22880 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:53:56,395 DEBUG functional 23816 22880 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:53:56,395 DEBUG functional 23816 22880 
def chunks(task, it, n):
    return 1

2023-06-26 12:54:43,084 INFO autoreload 23996 15000 C:\Users\Evert\Desktop\Django\monreal\monreal\settings.py changed, reloading.
2023-06-26 12:54:44,571 INFO autoreload 13928 5544 Watching for file changes with StatReloader
2023-06-26 12:55:39,682 INFO autoreload 12872 23756 Watching for file changes with StatReloader
2023-06-26 12:55:46,262 DEBUG functional 12464 21168 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:55:46,263 DEBUG functional 12464 21168 
def backend_cleanup():
    return 1

2023-06-26 12:55:46,263 DEBUG functional 12464 21168 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:55:46,264 DEBUG functional 12464 21168 
def redis_test():
    return 1

2023-06-26 12:55:46,264 DEBUG functional 12464 21168 
def debug_task(self):
    return 1

2023-06-26 12:55:46,264 DEBUG functional 12464 21168 
def xmap(task, it):
    return 1

2023-06-26 12:55:46,265 DEBUG functional 12464 21168 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:55:46,265 DEBUG functional 12464 21168 
def xstarmap(task, it):
    return 1

2023-06-26 12:55:46,265 DEBUG functional 12464 21168 
def redis_test():
    return 1

2023-06-26 12:55:46,266 DEBUG functional 12464 21168 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:55:46,266 DEBUG functional 12464 21168 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:55:46,266 DEBUG functional 12464 21168 
def chunks(task, it, n):
    return 1

2023-06-26 12:56:02,599 DEBUG functional 4392 10148 
def redis_test():
    return 1

2023-06-26 12:56:02,599 DEBUG functional 4392 10148 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:56:02,600 DEBUG functional 4392 10148 
def backend_cleanup():
    return 1

2023-06-26 12:56:02,600 DEBUG functional 4392 10148 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:56:02,600 DEBUG functional 4392 10148 
def debug_task(self):
    return 1

2023-06-26 12:56:02,601 DEBUG functional 4392 10148 
def xmap(task, it):
    return 1

2023-06-26 12:56:02,601 DEBUG functional 4392 10148 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:56:02,601 DEBUG functional 4392 10148 
def xstarmap(task, it):
    return 1

2023-06-26 12:56:02,602 DEBUG functional 4392 10148 
def redis_test():
    return 1

2023-06-26 12:56:02,602 DEBUG functional 4392 10148 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:56:02,602 DEBUG functional 4392 10148 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:56:02,603 DEBUG functional 4392 10148 
def chunks(task, it, n):
    return 1

2023-06-26 12:58:13,877 INFO autoreload 14884 23404 Watching for file changes with StatReloader
2023-06-26 12:58:36,661 DEBUG functional 23372 12268 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 12:58:36,662 DEBUG functional 23372 12268 
def debug_task(self):
    return 1

2023-06-26 12:58:36,662 DEBUG functional 23372 12268 
def chunks(task, it, n):
    return 1

2023-06-26 12:58:36,663 DEBUG functional 23372 12268 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 12:58:36,663 DEBUG functional 23372 12268 
def backend_cleanup():
    return 1

2023-06-26 12:58:36,664 DEBUG functional 23372 12268 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 12:58:36,664 DEBUG functional 23372 12268 
def redis_test():
    return 1

2023-06-26 12:58:36,664 DEBUG functional 23372 12268 
def xmap(task, it):
    return 1

2023-06-26 12:58:36,665 DEBUG functional 23372 12268 
def chain(*args, **kwargs):
    return 1

2023-06-26 12:58:36,665 DEBUG functional 23372 12268 
def redis_test():
    return 1

2023-06-26 12:58:36,665 DEBUG functional 23372 12268 
def xstarmap(task, it):
    return 1

2023-06-26 12:58:36,666 DEBUG functional 23372 12268 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 12:59:03,329 INFO autoreload 14884 23404 C:\Users\Evert\Desktop\Django\monreal\monreal\celery.py changed, reloading.
2023-06-26 12:59:04,878 INFO autoreload 22416 15356 Watching for file changes with StatReloader
2023-06-26 12:59:37,101 INFO autoreload 22416 15356 C:\Users\Evert\Desktop\Django\monreal\monreal\celery.py changed, reloading.
2023-06-26 12:59:38,618 INFO autoreload 7304 24556 Watching for file changes with StatReloader
2023-06-26 13:00:06,416 DEBUG functional 24196 13492 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 13:00:06,417 DEBUG functional 24196 13492 
def chunks(task, it, n):
    return 1

2023-06-26 13:00:06,417 DEBUG functional 24196 13492 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 13:00:06,418 DEBUG functional 24196 13492 
def backend_cleanup():
    return 1

2023-06-26 13:00:06,418 DEBUG functional 24196 13492 
def debug_task(self):
    return 1

2023-06-26 13:00:06,419 DEBUG functional 24196 13492 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 13:00:06,419 DEBUG functional 24196 13492 
def redis_test():
    return 1

2023-06-26 13:00:06,419 DEBUG functional 24196 13492 
def xmap(task, it):
    return 1

2023-06-26 13:00:06,420 DEBUG functional 24196 13492 
def chain(*args, **kwargs):
    return 1

2023-06-26 13:00:06,420 DEBUG functional 24196 13492 
def xstarmap(task, it):
    return 1

2023-06-26 13:00:06,420 DEBUG functional 24196 13492 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 13:00:27,250 DEBUG functional 24012 7060 
def redis_test():
    return 1

2023-06-26 13:00:27,251 DEBUG functional 24012 7060 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 13:00:27,251 DEBUG functional 24012 7060 
def backend_cleanup():
    return 1

2023-06-26 13:00:27,252 DEBUG functional 24012 7060 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 13:00:27,252 DEBUG functional 24012 7060 
def xmap(task, it):
    return 1

2023-06-26 13:00:27,252 DEBUG functional 24012 7060 
def chain(*args, **kwargs):
    return 1

2023-06-26 13:00:27,253 DEBUG functional 24012 7060 
def debug_task(self):
    return 1

2023-06-26 13:00:27,253 DEBUG functional 24012 7060 
def xstarmap(task, it):
    return 1

2023-06-26 13:00:27,254 DEBUG functional 24012 7060 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 13:00:27,254 DEBUG functional 24012 7060 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 13:00:27,254 DEBUG functional 24012 7060 
def chunks(task, it, n):
    return 1

2023-06-26 18:20:55,536 INFO autoreload 2580 8692 Watching for file changes with StatReloader
2023-06-26 18:21:13,983 DEBUG functional 7256 16736 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 18:21:13,983 DEBUG functional 7256 16736 
def chunks(task, it, n):
    return 1

2023-06-26 18:21:13,984 DEBUG functional 7256 16736 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 18:21:13,984 DEBUG functional 7256 16736 
def backend_cleanup():
    return 1

2023-06-26 18:21:13,985 DEBUG functional 7256 16736 
def debug_task(self):
    return 1

2023-06-26 18:21:13,985 DEBUG functional 7256 16736 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 18:21:13,985 DEBUG functional 7256 16736 
def xmap(task, it):
    return 1

2023-06-26 18:21:13,986 DEBUG functional 7256 16736 
def chain(*args, **kwargs):
    return 1

2023-06-26 18:21:13,986 DEBUG functional 7256 16736 
def db_update_task():
    return 1

2023-06-26 18:21:13,986 DEBUG functional 7256 16736 
def xstarmap(task, it):
    return 1

2023-06-26 18:21:13,987 DEBUG functional 7256 16736 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 18:21:51,443 DEBUG functional 10728 9692 
def db_update_task():
    return 1

2023-06-26 18:21:51,444 DEBUG functional 10728 9692 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 18:21:51,444 DEBUG functional 10728 9692 
def backend_cleanup():
    return 1

2023-06-26 18:21:51,444 DEBUG functional 10728 9692 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 18:21:51,445 DEBUG functional 10728 9692 
def xmap(task, it):
    return 1

2023-06-26 18:21:51,445 DEBUG functional 10728 9692 
def chain(*args, **kwargs):
    return 1

2023-06-26 18:21:51,445 DEBUG functional 10728 9692 
def debug_task(self):
    return 1

2023-06-26 18:21:51,446 DEBUG functional 10728 9692 
def xstarmap(task, it):
    return 1

2023-06-26 18:21:51,446 DEBUG functional 10728 9692 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 18:21:51,447 DEBUG functional 10728 9692 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 18:21:51,447 DEBUG functional 10728 9692 
def chunks(task, it, n):
    return 1

2023-06-26 18:22:38,855 INFO autoreload 2580 8692 C:\Users\Evert\Desktop\Django\monreal\monreal\settings.py changed, reloading.
2023-06-26 18:22:40,323 INFO autoreload 11948 3372 Watching for file changes with StatReloader
2023-06-26 18:23:01,002 INFO autoreload 12864 14712 Watching for file changes with StatReloader
2023-06-26 18:23:08,887 DEBUG functional 8800 17808 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 18:23:08,888 DEBUG functional 8800 17808 
def chunks(task, it, n):
    return 1

2023-06-26 18:23:08,888 DEBUG functional 8800 17808 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 18:23:08,889 DEBUG functional 8800 17808 
def backend_cleanup():
    return 1

2023-06-26 18:23:08,889 DEBUG functional 8800 17808 
def debug_task(self):
    return 1

2023-06-26 18:23:08,889 DEBUG functional 8800 17808 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 18:23:08,890 DEBUG functional 8800 17808 
def xmap(task, it):
    return 1

2023-06-26 18:23:08,890 DEBUG functional 8800 17808 
def chain(*args, **kwargs):
    return 1

2023-06-26 18:23:08,890 DEBUG functional 8800 17808 
def db_update_task():
    return 1

2023-06-26 18:23:08,891 DEBUG functional 8800 17808 
def xstarmap(task, it):
    return 1

2023-06-26 18:23:08,891 DEBUG functional 8800 17808 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 18:23:18,322 DEBUG functional 11204 11980 
def db_update_task():
    return 1

2023-06-26 18:23:18,323 DEBUG functional 11204 11980 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 18:23:18,323 DEBUG functional 11204 11980 
def backend_cleanup():
    return 1

2023-06-26 18:23:18,324 DEBUG functional 11204 11980 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 18:23:18,324 DEBUG functional 11204 11980 
def xmap(task, it):
    return 1

2023-06-26 18:23:18,324 DEBUG functional 11204 11980 
def chain(*args, **kwargs):
    return 1

2023-06-26 18:23:18,325 DEBUG functional 11204 11980 
def debug_task(self):
    return 1

2023-06-26 18:23:18,325 DEBUG functional 11204 11980 
def xstarmap(task, it):
    return 1

2023-06-26 18:23:18,325 DEBUG functional 11204 11980 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 18:23:18,326 DEBUG functional 11204 11980 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 18:23:18,326 DEBUG functional 11204 11980 
def chunks(task, it, n):
    return 1

2023-06-26 18:24:09,278 DEBUG functional 12068 10276 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 18:24:09,279 DEBUG functional 12068 10276 
def chunks(task, it, n):
    return 1

2023-06-26 18:24:09,279 DEBUG functional 12068 10276 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 18:24:09,279 DEBUG functional 12068 10276 
def backend_cleanup():
    return 1

2023-06-26 18:24:09,280 DEBUG functional 12068 10276 
def debug_task(self):
    return 1

2023-06-26 18:24:09,280 DEBUG functional 12068 10276 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 18:24:09,281 DEBUG functional 12068 10276 
def xmap(task, it):
    return 1

2023-06-26 18:24:09,281 DEBUG functional 12068 10276 
def chain(*args, **kwargs):
    return 1

2023-06-26 18:24:09,281 DEBUG functional 12068 10276 
def db_update_task():
    return 1

2023-06-26 18:24:09,282 DEBUG functional 12068 10276 
def xstarmap(task, it):
    return 1

2023-06-26 18:24:09,282 DEBUG functional 12068 10276 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 18:24:17,371 DEBUG functional 7632 9512 
def db_update_task():
    return 1

2023-06-26 18:24:17,372 DEBUG functional 7632 9512 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 18:24:17,372 DEBUG functional 7632 9512 
def backend_cleanup():
    return 1

2023-06-26 18:24:17,373 DEBUG functional 7632 9512 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 18:24:17,373 DEBUG functional 7632 9512 
def xmap(task, it):
    return 1

2023-06-26 18:24:17,373 DEBUG functional 7632 9512 
def chain(*args, **kwargs):
    return 1

2023-06-26 18:24:17,374 DEBUG functional 7632 9512 
def debug_task(self):
    return 1

2023-06-26 18:24:17,374 DEBUG functional 7632 9512 
def xstarmap(task, it):
    return 1

2023-06-26 18:24:17,374 DEBUG functional 7632 9512 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 18:24:17,374 DEBUG functional 7632 9512 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 18:24:17,375 DEBUG functional 7632 9512 
def chunks(task, it, n):
    return 1

2023-06-26 18:25:59,861 INFO autoreload 13208 2592 Watching for file changes with StatReloader
2023-06-26 18:26:07,192 DEBUG functional 5468 13508 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 18:26:07,193 DEBUG functional 5468 13508 
def chunks(task, it, n):
    return 1

2023-06-26 18:26:07,193 DEBUG functional 5468 13508 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 18:26:07,194 DEBUG functional 5468 13508 
def backend_cleanup():
    return 1

2023-06-26 18:26:07,194 DEBUG functional 5468 13508 
def debug_task(self):
    return 1

2023-06-26 18:26:07,195 DEBUG functional 5468 13508 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 18:26:07,195 DEBUG functional 5468 13508 
def xmap(task, it):
    return 1

2023-06-26 18:26:07,196 DEBUG functional 5468 13508 
def chain(*args, **kwargs):
    return 1

2023-06-26 18:26:07,196 DEBUG functional 5468 13508 
def db_update_task():
    return 1

2023-06-26 18:26:07,196 DEBUG functional 5468 13508 
def xstarmap(task, it):
    return 1

2023-06-26 18:26:07,197 DEBUG functional 5468 13508 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 18:26:16,118 DEBUG functional 15416 6416 
def db_update_task():
    return 1

2023-06-26 18:26:16,119 DEBUG functional 15416 6416 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 18:26:16,119 DEBUG functional 15416 6416 
def backend_cleanup():
    return 1

2023-06-26 18:26:16,119 DEBUG functional 15416 6416 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 18:26:16,120 DEBUG functional 15416 6416 
def xmap(task, it):
    return 1

2023-06-26 18:26:16,120 DEBUG functional 15416 6416 
def chain(*args, **kwargs):
    return 1

2023-06-26 18:26:16,120 DEBUG functional 15416 6416 
def debug_task(self):
    return 1

2023-06-26 18:26:16,121 DEBUG functional 15416 6416 
def xstarmap(task, it):
    return 1

2023-06-26 18:26:16,121 DEBUG functional 15416 6416 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 18:26:16,121 DEBUG functional 15416 6416 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 18:26:16,122 DEBUG functional 15416 6416 
def chunks(task, it, n):
    return 1

2023-06-26 18:35:55,142 INFO autoreload 12000 13232 Watching for file changes with StatReloader
2023-06-26 18:36:12,607 DEBUG functional 6632 3396 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 18:36:12,608 DEBUG functional 6632 3396 
def chunks(task, it, n):
    return 1

2023-06-26 18:36:12,608 DEBUG functional 6632 3396 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 18:36:12,608 DEBUG functional 6632 3396 
def backend_cleanup():
    return 1

2023-06-26 18:36:12,609 DEBUG functional 6632 3396 
def debug_task(self):
    return 1

2023-06-26 18:36:12,609 DEBUG functional 6632 3396 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 18:36:12,609 DEBUG functional 6632 3396 
def xmap(task, it):
    return 1

2023-06-26 18:36:12,610 DEBUG functional 6632 3396 
def chain(*args, **kwargs):
    return 1

2023-06-26 18:36:12,610 DEBUG functional 6632 3396 
def db_update_task():
    return 1

2023-06-26 18:36:12,610 DEBUG functional 6632 3396 
def xstarmap(task, it):
    return 1

2023-06-26 18:36:12,611 DEBUG functional 6632 3396 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 18:36:24,091 DEBUG functional 16672 17524 
def db_update_task():
    return 1

2023-06-26 18:36:24,092 DEBUG functional 16672 17524 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-26 18:36:24,092 DEBUG functional 16672 17524 
def backend_cleanup():
    return 1

2023-06-26 18:36:24,092 DEBUG functional 16672 17524 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-26 18:36:24,093 DEBUG functional 16672 17524 
def xmap(task, it):
    return 1

2023-06-26 18:36:24,093 DEBUG functional 16672 17524 
def chain(*args, **kwargs):
    return 1

2023-06-26 18:36:24,093 DEBUG functional 16672 17524 
def debug_task(self):
    return 1

2023-06-26 18:36:24,094 DEBUG functional 16672 17524 
def xstarmap(task, it):
    return 1

2023-06-26 18:36:24,094 DEBUG functional 16672 17524 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-26 18:36:24,094 DEBUG functional 16672 17524 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-26 18:36:24,095 DEBUG functional 16672 17524 
def chunks(task, it, n):
    return 1

2023-06-26 18:36:36,636 WARNING log 12000 1536 Not Found: /
2023-06-26 18:36:43,376 DEBUG core 12000 1536 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 18:36:43,377 DEBUG core 12000 1536 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 18:36:46,936 DEBUG core 12000 1536 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 18:36:46,936 DEBUG core 12000 1536 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 18:36:47,778 DEBUG core 12000 1536 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 18:36:47,778 DEBUG core 12000 1536 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 18:36:50,567 DEBUG core 12000 1536 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 18:36:50,567 DEBUG core 12000 1536 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 18:36:54,739 DEBUG core 12000 1536 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 18:36:54,739 DEBUG core 12000 1536 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 18:37:01,532 DEBUG core 12000 1536 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 18:37:01,532 DEBUG core 12000 1536 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 18:37:25,171 DEBUG core 12000 1536 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 18:37:25,171 DEBUG core 12000 1536 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 18:37:25,873 DEBUG core 12000 1536 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 18:37:25,874 DEBUG core 12000 1536 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 18:37:26,402 DEBUG core 12000 1536 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 18:37:26,403 DEBUG core 12000 1536 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 18:37:26,826 DEBUG core 12000 1536 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 18:37:26,827 DEBUG core 12000 1536 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 18:37:27,194 DEBUG core 12000 1536 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 18:37:27,194 DEBUG core 12000 1536 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 18:37:50,770 DEBUG core 12000 1536 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 18:37:50,770 DEBUG core 12000 1536 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 18:37:52,536 DEBUG core 12000 1536 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 18:37:52,536 DEBUG core 12000 1536 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 18:37:53,580 DEBUG core 12000 1536 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 18:37:53,580 DEBUG core 12000 1536 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 18:37:55,570 DEBUG core 12000 1536 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 18:37:55,570 DEBUG core 12000 1536 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 18:37:56,851 DEBUG core 12000 1536 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 18:37:56,851 DEBUG core 12000 1536 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 19:25:00,472 INFO autoreload 3392 15048 Watching for file changes with StatReloader
2023-06-26 19:36:13,161 INFO autoreload 20932 20236 Watching for file changes with StatReloader
2023-06-26 19:36:34,582 DEBUG core 20932 20624 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 19:36:34,582 DEBUG core 20932 20624 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 19:36:48,673 DEBUG core 20932 20624 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 19:36:48,673 DEBUG core 20932 20624 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 19:37:11,741 WARNING log 20932 8088 Bad Request: /api/close_positions/
2023-06-26 19:39:59,885 INFO autoreload 12232 6676 Watching for file changes with StatReloader
2023-06-26 19:40:15,762 WARNING log 12232 1352 Bad Request: /api/login/
2023-06-26 19:40:19,254 DEBUG core 12232 18016 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 19:40:19,254 DEBUG core 12232 18016 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 19:40:19,975 DEBUG core 12232 18016 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 19:40:19,975 DEBUG core 12232 18016 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 19:40:30,102 DEBUG core 12232 18016 Successfully imported extension module "markdown.extensions.toc".
2023-06-26 19:40:30,102 DEBUG core 12232 18016 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-26 19:41:00,080 INFO autoreload 12232 6676 C:\Users\Evert\Desktop\Django\monreal\accounts\views.py changed, reloading.
2023-06-26 19:41:01,634 INFO autoreload 19340 9380 Watching for file changes with StatReloader
2023-06-27 12:48:26,835 INFO autoreload 21084 7640 Watching for file changes with StatReloader
2023-06-27 12:48:58,194 DEBUG core 21084 7532 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:48:58,194 DEBUG core 21084 7532 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:48:58,434 WARNING log 21084 7832 Not Found: /favicon.ico
2023-06-27 12:49:11,635 DEBUG functional 21084 14664 
def xstarmap(task, it):
    return 1

2023-06-27 12:49:11,637 DEBUG functional 21084 14664 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 12:49:11,637 DEBUG functional 21084 14664 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 12:49:11,638 DEBUG functional 21084 14664 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 12:49:11,638 DEBUG functional 21084 14664 
def chunks(task, it, n):
    return 1

2023-06-27 12:49:11,638 DEBUG functional 21084 14664 
def debug_task(self):
    return 1

2023-06-27 12:49:11,639 DEBUG functional 21084 14664 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 12:49:11,639 DEBUG functional 21084 14664 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 12:49:11,639 DEBUG functional 21084 14664 
def xmap(task, it):
    return 1

2023-06-27 12:49:11,640 DEBUG functional 21084 14664 
def backend_cleanup():
    return 1

2023-06-27 12:49:11,640 DEBUG functional 21084 14664 
def chain(*args, **kwargs):
    return 1

2023-06-27 12:49:11,640 DEBUG functional 21084 14664 
def db_update_task():
    return 1

2023-06-27 12:49:16,496 DEBUG core 21084 8160 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:49:16,496 DEBUG core 21084 8160 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:49:17,461 DEBUG core 21084 8160 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:49:17,461 DEBUG core 21084 8160 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:49:17,510 WARNING log 21084 8160 Not Found: /favicon.ico
2023-06-27 12:49:18,096 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:49:18,096 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:49:18,728 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:49:18,728 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:49:19,119 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:49:19,119 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:49:19,565 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:49:19,565 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:49:20,008 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:49:20,008 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:49:20,481 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:49:20,481 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:49:20,886 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:49:20,886 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:49:21,243 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:49:21,244 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:49:26,448 WARNING log 21084 14664 Bad Request: /api/close_positions/
2023-06-27 12:49:27,135 WARNING log 21084 14664 Bad Request: /api/close_positions/
2023-06-27 12:49:32,634 WARNING log 21084 14664 Bad Request: /api/close_positions/
2023-06-27 12:49:33,427 WARNING log 21084 14664 Bad Request: /api/close_positions/
2023-06-27 12:49:33,588 WARNING log 21084 14664 Bad Request: /api/close_positions/
2023-06-27 12:49:40,526 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:49:40,526 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:50:17,102 DEBUG functional 4844 12404 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 12:50:17,102 DEBUG functional 4844 12404 
def chunks(task, it, n):
    return 1

2023-06-27 12:50:17,103 DEBUG functional 4844 12404 
def db_update_task():
    return 1

2023-06-27 12:50:17,103 DEBUG functional 4844 12404 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 12:50:17,104 DEBUG functional 4844 12404 
def backend_cleanup():
    return 1

2023-06-27 12:50:17,104 DEBUG functional 4844 12404 
def debug_task(self):
    return 1

2023-06-27 12:50:17,104 DEBUG functional 4844 12404 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 12:50:17,105 DEBUG functional 4844 12404 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 12:50:17,105 DEBUG functional 4844 12404 
def xmap(task, it):
    return 1

2023-06-27 12:50:17,105 DEBUG functional 4844 12404 
def chain(*args, **kwargs):
    return 1

2023-06-27 12:50:17,106 DEBUG functional 4844 12404 
def xstarmap(task, it):
    return 1

2023-06-27 12:50:17,106 DEBUG functional 4844 12404 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 12:50:22,237 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:50:22,237 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:50:22,824 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:50:22,825 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:50:23,257 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:50:23,257 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:50:23,613 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:50:23,613 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:50:33,716 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:50:33,716 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:50:34,150 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:50:34,151 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:50:57,804 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:50:57,805 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:50:58,349 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:50:58,350 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:50:58,769 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:50:58,769 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:50:59,146 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:50:59,147 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:51:16,862 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:51:16,862 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:51:17,367 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:51:17,367 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:51:21,712 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:51:21,712 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:51:22,092 DEBUG core 21084 8216 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:51:22,092 DEBUG core 21084 8216 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:52:26,715 INFO autoreload 21084 7640 C:\Users\Evert\Desktop\Django\monreal\accounts\tasks.py changed, reloading.
2023-06-27 12:55:17,104 INFO autoreload 17684 14044 Watching for file changes with StatReloader
2023-06-27 12:55:45,916 DEBUG functional 1408 5628 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 12:55:45,916 DEBUG functional 1408 5628 
def chunks(task, it, n):
    return 1

2023-06-27 12:55:45,916 DEBUG functional 1408 5628 
def db_update_task():
    return 1

2023-06-27 12:55:45,917 DEBUG functional 1408 5628 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 12:55:45,917 DEBUG functional 1408 5628 
def backend_cleanup():
    return 1

2023-06-27 12:55:45,918 DEBUG functional 1408 5628 
def debug_task(self):
    return 1

2023-06-27 12:55:45,918 DEBUG functional 1408 5628 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 12:55:45,918 DEBUG functional 1408 5628 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 12:55:45,919 DEBUG functional 1408 5628 
def xmap(task, it):
    return 1

2023-06-27 12:55:45,919 DEBUG functional 1408 5628 
def chain(*args, **kwargs):
    return 1

2023-06-27 12:55:45,919 DEBUG functional 1408 5628 
def xstarmap(task, it):
    return 1

2023-06-27 12:55:45,920 DEBUG functional 1408 5628 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 12:56:01,035 DEBUG functional 17684 6140 
def xstarmap(task, it):
    return 1

2023-06-27 12:56:01,037 DEBUG functional 17684 6140 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 12:56:01,038 DEBUG functional 17684 6140 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 12:56:01,038 DEBUG functional 17684 6140 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 12:56:01,038 DEBUG functional 17684 6140 
def chunks(task, it, n):
    return 1

2023-06-27 12:56:01,039 DEBUG functional 17684 6140 
def debug_task(self):
    return 1

2023-06-27 12:56:01,039 DEBUG functional 17684 6140 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 12:56:01,039 DEBUG functional 17684 6140 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 12:56:01,040 DEBUG functional 17684 6140 
def xmap(task, it):
    return 1

2023-06-27 12:56:01,040 DEBUG functional 17684 6140 
def backend_cleanup():
    return 1

2023-06-27 12:56:01,040 DEBUG functional 17684 6140 
def chain(*args, **kwargs):
    return 1

2023-06-27 12:56:01,041 DEBUG functional 17684 6140 
def db_update_task():
    return 1

2023-06-27 12:56:14,458 DEBUG core 17684 20072 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:56:14,458 DEBUG core 17684 20072 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:56:15,288 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:56:15,288 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:56:15,859 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:56:15,859 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:56:16,267 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:56:16,267 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:56:16,596 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:56:16,597 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:56:16,827 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:56:16,827 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:56:16,998 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:56:16,999 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:56:17,156 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:56:17,156 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:56:17,547 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:56:17,547 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:56:17,815 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:56:17,815 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:56:18,049 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:56:18,049 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:56:18,407 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:56:18,407 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:56:18,551 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:56:18,551 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:56:18,739 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:56:18,739 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:57:16,719 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:57:16,720 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:58:24,591 DEBUG functional 2980 13272 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 12:58:24,591 DEBUG functional 2980 13272 
def backend_cleanup():
    return 1

2023-06-27 12:58:24,592 DEBUG functional 2980 13272 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 12:58:24,592 DEBUG functional 2980 13272 
def xmap(task, it):
    return 1

2023-06-27 12:58:24,592 DEBUG functional 2980 13272 
def db_update_task():
    return 1

2023-06-27 12:58:24,593 DEBUG functional 2980 13272 
def chain(*args, **kwargs):
    return 1

2023-06-27 12:58:24,593 DEBUG functional 2980 13272 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 12:58:24,593 DEBUG functional 2980 13272 
def debug_task(self):
    return 1

2023-06-27 12:58:24,594 DEBUG functional 2980 13272 
def xstarmap(task, it):
    return 1

2023-06-27 12:58:24,594 DEBUG functional 2980 13272 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 12:58:24,595 DEBUG functional 2980 13272 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 12:58:24,595 DEBUG functional 2980 13272 
def chunks(task, it, n):
    return 1

2023-06-27 12:58:29,134 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:58:29,134 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:58:29,993 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:58:29,994 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:58:30,578 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:58:30,578 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:58:31,226 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:58:31,226 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:58:31,985 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:58:31,985 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:58:32,696 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:58:32,696 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:58:33,427 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:58:33,427 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:58:33,949 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:58:33,949 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:58:34,609 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:58:34,609 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:58:35,398 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:58:35,399 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:58:47,155 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:58:47,155 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:58:48,635 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:58:48,635 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:58:49,236 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:58:49,237 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:58:49,747 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:58:49,748 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:58:50,184 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:58:50,184 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:58:50,417 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:58:50,417 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:58:50,949 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:58:50,950 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:59:03,413 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:59:03,413 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:59:04,004 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:59:04,004 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:59:04,332 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:59:04,332 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:59:04,563 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:59:04,563 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 12:59:04,789 DEBUG core 17684 18512 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 12:59:04,789 DEBUG core 17684 18512 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:00:43,203 INFO autoreload 21400 17168 Watching for file changes with StatReloader
2023-06-27 13:01:07,621 DEBUG functional 18204 1860 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:01:07,622 DEBUG functional 18204 1860 
def chunks(task, it, n):
    return 1

2023-06-27 13:01:07,622 DEBUG functional 18204 1860 
def db_update_task():
    return 1

2023-06-27 13:01:07,623 DEBUG functional 18204 1860 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:01:07,623 DEBUG functional 18204 1860 
def backend_cleanup():
    return 1

2023-06-27 13:01:07,623 DEBUG functional 18204 1860 
def debug_task(self):
    return 1

2023-06-27 13:01:07,624 DEBUG functional 18204 1860 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:01:07,624 DEBUG functional 18204 1860 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:01:07,625 DEBUG functional 18204 1860 
def xmap(task, it):
    return 1

2023-06-27 13:01:07,625 DEBUG functional 18204 1860 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:01:07,625 DEBUG functional 18204 1860 
def xstarmap(task, it):
    return 1

2023-06-27 13:01:07,626 DEBUG functional 18204 1860 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:01:16,325 DEBUG functional 16304 12676 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:01:16,326 DEBUG functional 16304 12676 
def backend_cleanup():
    return 1

2023-06-27 13:01:16,326 DEBUG functional 16304 12676 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:01:16,327 DEBUG functional 16304 12676 
def xmap(task, it):
    return 1

2023-06-27 13:01:16,327 DEBUG functional 16304 12676 
def db_update_task():
    return 1

2023-06-27 13:01:16,327 DEBUG functional 16304 12676 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:01:16,328 DEBUG functional 16304 12676 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:01:16,328 DEBUG functional 16304 12676 
def debug_task(self):
    return 1

2023-06-27 13:01:16,328 DEBUG functional 16304 12676 
def xstarmap(task, it):
    return 1

2023-06-27 13:01:16,329 DEBUG functional 16304 12676 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:01:16,329 DEBUG functional 16304 12676 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:01:16,330 DEBUG functional 16304 12676 
def chunks(task, it, n):
    return 1

2023-06-27 13:01:19,868 DEBUG core 21400 2620 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:01:19,868 DEBUG core 21400 2620 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:01:21,102 DEBUG core 21400 2620 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:01:21,102 DEBUG core 21400 2620 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:01:21,722 DEBUG core 21400 2620 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:01:21,722 DEBUG core 21400 2620 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:01:22,197 DEBUG core 21400 2620 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:01:22,197 DEBUG core 21400 2620 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:02:58,762 DEBUG functional 13352 16552 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:02:58,763 DEBUG functional 13352 16552 
def chunks(task, it, n):
    return 1

2023-06-27 13:02:58,763 DEBUG functional 13352 16552 
def db_update_task():
    return 1

2023-06-27 13:02:58,764 DEBUG functional 13352 16552 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:02:58,764 DEBUG functional 13352 16552 
def backend_cleanup():
    return 1

2023-06-27 13:02:58,764 DEBUG functional 13352 16552 
def debug_task(self):
    return 1

2023-06-27 13:02:58,765 DEBUG functional 13352 16552 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:02:58,765 DEBUG functional 13352 16552 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:02:58,766 DEBUG functional 13352 16552 
def xmap(task, it):
    return 1

2023-06-27 13:02:58,766 DEBUG functional 13352 16552 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:02:58,766 DEBUG functional 13352 16552 
def xstarmap(task, it):
    return 1

2023-06-27 13:02:58,767 DEBUG functional 13352 16552 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:03:06,658 DEBUG functional 13488 12088 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:03:06,659 DEBUG functional 13488 12088 
def backend_cleanup():
    return 1

2023-06-27 13:03:06,659 DEBUG functional 13488 12088 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:03:06,660 DEBUG functional 13488 12088 
def xmap(task, it):
    return 1

2023-06-27 13:03:06,660 DEBUG functional 13488 12088 
def db_update_task():
    return 1

2023-06-27 13:03:06,660 DEBUG functional 13488 12088 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:03:06,661 DEBUG functional 13488 12088 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:03:06,661 DEBUG functional 13488 12088 
def debug_task(self):
    return 1

2023-06-27 13:03:06,661 DEBUG functional 13488 12088 
def xstarmap(task, it):
    return 1

2023-06-27 13:03:06,662 DEBUG functional 13488 12088 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:03:06,662 DEBUG functional 13488 12088 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:03:06,663 DEBUG functional 13488 12088 
def chunks(task, it, n):
    return 1

2023-06-27 13:03:51,487 INFO autoreload 21400 17168 C:\Users\Evert\Desktop\Django\monreal\accounts\tasks.py changed, reloading.
2023-06-27 13:03:53,057 INFO autoreload 9900 2304 Watching for file changes with StatReloader
2023-06-27 13:05:27,706 INFO autoreload 9900 2304 C:\Users\Evert\Desktop\Django\monreal\accounts\tasks.py changed, reloading.
2023-06-27 13:05:29,267 INFO autoreload 3184 7244 Watching for file changes with StatReloader
2023-06-27 13:05:37,870 INFO autoreload 3184 7244 C:\Users\Evert\Desktop\Django\monreal\accounts\tasks.py changed, reloading.
2023-06-27 13:05:39,410 INFO autoreload 1956 12984 Watching for file changes with StatReloader
2023-06-27 13:05:49,266 INFO autoreload 14876 9668 Watching for file changes with StatReloader
2023-06-27 13:05:59,642 DEBUG functional 9560 3604 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:05:59,642 DEBUG functional 9560 3604 
def chunks(task, it, n):
    return 1

2023-06-27 13:05:59,643 DEBUG functional 9560 3604 
def db_update_task():
    return 1

2023-06-27 13:05:59,643 DEBUG functional 9560 3604 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:05:59,644 DEBUG functional 9560 3604 
def backend_cleanup():
    return 1

2023-06-27 13:05:59,644 DEBUG functional 9560 3604 
def debug_task(self):
    return 1

2023-06-27 13:05:59,644 DEBUG functional 9560 3604 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:05:59,645 DEBUG functional 9560 3604 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:05:59,645 DEBUG functional 9560 3604 
def xmap(task, it):
    return 1

2023-06-27 13:05:59,645 DEBUG functional 9560 3604 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:05:59,646 DEBUG functional 9560 3604 
def xstarmap(task, it):
    return 1

2023-06-27 13:05:59,646 DEBUG functional 9560 3604 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:06:08,338 DEBUG functional 13284 14044 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:06:08,338 DEBUG functional 13284 14044 
def backend_cleanup():
    return 1

2023-06-27 13:06:08,339 DEBUG functional 13284 14044 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:06:08,339 DEBUG functional 13284 14044 
def xmap(task, it):
    return 1

2023-06-27 13:06:08,339 DEBUG functional 13284 14044 
def db_update_task():
    return 1

2023-06-27 13:06:08,340 DEBUG functional 13284 14044 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:06:08,340 DEBUG functional 13284 14044 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:06:08,340 DEBUG functional 13284 14044 
def debug_task(self):
    return 1

2023-06-27 13:06:08,341 DEBUG functional 13284 14044 
def xstarmap(task, it):
    return 1

2023-06-27 13:06:08,341 DEBUG functional 13284 14044 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:06:08,342 DEBUG functional 13284 14044 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:06:08,342 DEBUG functional 13284 14044 
def chunks(task, it, n):
    return 1

2023-06-27 13:06:13,240 DEBUG core 14876 16172 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:06:13,240 DEBUG core 14876 16172 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:06:13,907 DEBUG core 14876 16172 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:06:13,908 DEBUG core 14876 16172 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:06:14,363 DEBUG core 14876 16172 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:06:14,364 DEBUG core 14876 16172 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:06:29,253 DEBUG core 14876 16172 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:06:29,253 DEBUG core 14876 16172 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:06:29,689 DEBUG core 14876 16172 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:06:29,689 DEBUG core 14876 16172 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:06:30,063 DEBUG core 14876 16172 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:06:30,063 DEBUG core 14876 16172 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:06:30,569 DEBUG core 14876 16172 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:06:30,570 DEBUG core 14876 16172 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:09:23,148 INFO autoreload 14876 9668 C:\Users\Evert\Desktop\Django\monreal\accounts\tasks.py changed, reloading.
2023-06-27 13:09:24,699 INFO autoreload 15916 10148 Watching for file changes with StatReloader
2023-06-27 13:09:26,867 INFO autoreload 15916 10148 C:\Users\Evert\Desktop\Django\monreal\accounts\tasks.py changed, reloading.
2023-06-27 13:09:28,473 INFO autoreload 18424 952 Watching for file changes with StatReloader
2023-06-27 13:09:36,978 INFO autoreload 7444 10064 Watching for file changes with StatReloader
2023-06-27 13:09:51,389 DEBUG functional 8104 17768 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:09:51,389 DEBUG functional 8104 17768 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:09:51,389 DEBUG functional 8104 17768 
def chunks(task, it, n):
    return 1

2023-06-27 13:09:51,390 DEBUG functional 8104 17768 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:09:51,390 DEBUG functional 8104 17768 
def backend_cleanup():
    return 1

2023-06-27 13:09:51,391 DEBUG functional 8104 17768 
def debug_task(self):
    return 1

2023-06-27 13:09:51,391 DEBUG functional 8104 17768 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:09:51,391 DEBUG functional 8104 17768 
def xmap(task, it):
    return 1

2023-06-27 13:09:51,392 DEBUG functional 8104 17768 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:09:51,392 DEBUG functional 8104 17768 
def xstarmap(task, it):
    return 1

2023-06-27 13:09:51,392 DEBUG functional 8104 17768 
def db_update_task():
    return 1

2023-06-27 13:09:51,393 DEBUG functional 8104 17768 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:09:54,815 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:09:54,815 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:09:55,380 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:09:55,380 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:06,080 DEBUG functional 5016 11256 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:10:06,081 DEBUG functional 5016 11256 
def backend_cleanup():
    return 1

2023-06-27 13:10:06,081 DEBUG functional 5016 11256 
def db_update_task():
    return 1

2023-06-27 13:10:06,081 DEBUG functional 5016 11256 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:10:06,082 DEBUG functional 5016 11256 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:10:06,082 DEBUG functional 5016 11256 
def xmap(task, it):
    return 1

2023-06-27 13:10:06,082 DEBUG functional 5016 11256 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:10:06,082 DEBUG functional 5016 11256 
def debug_task(self):
    return 1

2023-06-27 13:10:06,083 DEBUG functional 5016 11256 
def xstarmap(task, it):
    return 1

2023-06-27 13:10:06,083 DEBUG functional 5016 11256 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:10:06,083 DEBUG functional 5016 11256 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:10:06,084 DEBUG functional 5016 11256 
def chunks(task, it, n):
    return 1

2023-06-27 13:10:10,997 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:10,997 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:13,122 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:13,122 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:13,883 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:13,883 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:25,326 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:25,326 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:27,454 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:27,454 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:29,241 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:29,241 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:33,511 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:33,511 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:34,129 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:34,129 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:34,645 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:34,645 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:35,268 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:35,269 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:37,413 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:37,413 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:37,963 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:37,963 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:40,983 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:40,983 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:41,475 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:41,475 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:42,309 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:42,309 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:42,884 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:42,885 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:43,346 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:43,346 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:43,747 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:43,748 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:44,342 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:44,342 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:44,805 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:44,806 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:45,124 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:45,125 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:45,427 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:45,427 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:45,513 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:45,513 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:45,654 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:45,654 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:46,165 DEBUG core 7444 5440 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:46,165 DEBUG core 7444 5440 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:46,220 WARNING log 7444 5440 Not Found: /favicon.ico
2023-06-27 13:10:49,586 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:49,587 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:50,113 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:50,113 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:50,536 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:50,536 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:50,965 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:50,965 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:51,349 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:51,349 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:51,711 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:51,711 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:52,214 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:52,215 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:56,811 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:56,811 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:57,479 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:57,479 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:58,084 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:58,084 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:10:58,876 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:10:58,876 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:03,771 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:03,772 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:05,534 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:05,535 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:07,597 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:07,597 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:08,215 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:08,215 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:08,824 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:08,824 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:09,316 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:09,316 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:09,709 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:09,709 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:10,121 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:10,122 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:10,551 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:10,551 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:10,992 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:10,992 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:11,364 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:11,364 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:11,739 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:11,739 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:12,168 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:12,168 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:12,560 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:12,560 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:12,934 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:12,934 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:13,369 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:13,369 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:13,697 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:13,697 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:13,895 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:13,895 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:14,044 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:14,045 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:14,199 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:14,200 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:38,513 DEBUG core 7444 952 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:38,513 DEBUG core 7444 952 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:38,604 WARNING log 7444 952 Not Found: /favicon.ico
2023-06-27 13:11:39,789 DEBUG core 7444 11916 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:39,789 DEBUG core 7444 11916 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:39,851 WARNING log 7444 11916 Not Found: /favicon.ico
2023-06-27 13:11:40,175 DEBUG core 7444 2908 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:40,175 DEBUG core 7444 2908 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:40,376 DEBUG core 7444 2908 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:40,376 DEBUG core 7444 2908 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:40,571 DEBUG core 7444 2908 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:40,571 DEBUG core 7444 2908 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:40,738 DEBUG core 7444 2908 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:40,738 DEBUG core 7444 2908 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:40,907 DEBUG core 7444 2908 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:40,907 DEBUG core 7444 2908 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:41,079 DEBUG core 7444 2908 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:41,080 DEBUG core 7444 2908 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:41,373 DEBUG core 7444 2908 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:41,374 DEBUG core 7444 2908 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:46,192 DEBUG core 7444 2908 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:46,192 DEBUG core 7444 2908 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:46,655 DEBUG core 7444 2908 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:46,655 DEBUG core 7444 2908 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:47,008 DEBUG core 7444 2908 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:47,008 DEBUG core 7444 2908 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:47,222 DEBUG core 7444 2908 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:47,222 DEBUG core 7444 2908 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:47,832 DEBUG core 7444 2908 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:47,832 DEBUG core 7444 2908 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:48,433 DEBUG core 7444 2908 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:48,434 DEBUG core 7444 2908 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:50,310 DEBUG core 7444 2908 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:50,310 DEBUG core 7444 2908 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:50,820 DEBUG core 7444 2908 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:50,821 DEBUG core 7444 2908 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:11:51,527 DEBUG core 7444 2908 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:11:51,528 DEBUG core 7444 2908 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:12:02,845 DEBUG core 7444 2908 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:12:02,845 DEBUG core 7444 2908 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:25:34,968 INFO autoreload 20032 17276 Watching for file changes with StatReloader
2023-06-27 13:25:47,020 DEBUG core 20032 17764 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:25:47,020 DEBUG core 20032 17764 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:25:47,108 WARNING log 20032 17764 Not Found: /favicon.ico
2023-06-27 13:25:47,667 DEBUG core 20032 4628 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:25:47,667 DEBUG core 20032 4628 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:25:52,389 DEBUG core 20032 4628 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:25:52,389 DEBUG core 20032 4628 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:26:01,894 DEBUG functional 1676 12928 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:26:01,894 DEBUG functional 1676 12928 
def chunks(task, it, n):
    return 1

2023-06-27 13:26:01,895 DEBUG functional 1676 12928 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:26:01,895 DEBUG functional 1676 12928 
def backend_cleanup():
    return 1

2023-06-27 13:26:01,896 DEBUG functional 1676 12928 
def debug_task(self):
    return 1

2023-06-27 13:26:01,896 DEBUG functional 1676 12928 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:26:01,897 DEBUG functional 1676 12928 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:26:01,897 DEBUG functional 1676 12928 
def xmap(task, it):
    return 1

2023-06-27 13:26:01,897 DEBUG functional 1676 12928 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:26:01,898 DEBUG functional 1676 12928 
def db_update_task():
    return 1

2023-06-27 13:26:01,898 DEBUG functional 1676 12928 
def xstarmap(task, it):
    return 1

2023-06-27 13:26:01,898 DEBUG functional 1676 12928 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 13:26:01,899 DEBUG functional 1676 12928 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:26:16,341 DEBUG functional 20032 14020 
def xstarmap(task, it):
    return 1

2023-06-27 13:26:16,343 DEBUG functional 20032 14020 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:26:16,343 DEBUG functional 20032 14020 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:26:16,343 DEBUG functional 20032 14020 
def db_update_task():
    return 1

2023-06-27 13:26:16,344 DEBUG functional 20032 14020 
def chunks(task, it, n):
    return 1

2023-06-27 13:26:16,344 DEBUG functional 20032 14020 
def debug_task(self):
    return 1

2023-06-27 13:26:16,344 DEBUG functional 20032 14020 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:26:16,345 DEBUG functional 20032 14020 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 13:26:16,345 DEBUG functional 20032 14020 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:26:16,345 DEBUG functional 20032 14020 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:26:16,346 DEBUG functional 20032 14020 
def xmap(task, it):
    return 1

2023-06-27 13:26:16,346 DEBUG functional 20032 14020 
def backend_cleanup():
    return 1

2023-06-27 13:26:16,346 DEBUG functional 20032 14020 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:26:18,308 DEBUG core 20032 4628 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:26:18,308 DEBUG core 20032 4628 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:27:03,477 DEBUG core 20032 4628 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:27:03,477 DEBUG core 20032 4628 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:27:04,169 DEBUG core 20032 4628 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:27:04,169 DEBUG core 20032 4628 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:27:04,691 DEBUG core 20032 4628 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:27:04,691 DEBUG core 20032 4628 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:27:05,218 DEBUG core 20032 4628 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:27:05,218 DEBUG core 20032 4628 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:30:25,572 INFO autoreload 20032 17276 C:\Users\Evert\Desktop\Django\monreal\accounts\views.py changed, reloading.
2023-06-27 13:30:27,318 INFO autoreload 19480 10960 Watching for file changes with StatReloader
2023-06-27 13:31:27,227 INFO autoreload 9108 9396 Watching for file changes with StatReloader
2023-06-27 13:31:44,324 DEBUG core 9108 19268 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:31:44,324 DEBUG core 9108 19268 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:31:45,039 DEBUG core 9108 20044 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:31:45,039 DEBUG core 9108 20044 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:32:09,393 DEBUG functional 7040 14020 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:32:09,393 DEBUG functional 7040 14020 
def backend_cleanup():
    return 1

2023-06-27 13:32:09,394 DEBUG functional 7040 14020 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 13:32:09,394 DEBUG functional 7040 14020 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:32:09,395 DEBUG functional 7040 14020 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:32:09,395 DEBUG functional 7040 14020 
def xmap(task, it):
    return 1

2023-06-27 13:32:09,396 DEBUG functional 7040 14020 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:32:09,396 DEBUG functional 7040 14020 
def debug_task(self):
    return 1

2023-06-27 13:32:09,396 DEBUG functional 7040 14020 
def xstarmap(task, it):
    return 1

2023-06-27 13:32:09,397 DEBUG functional 7040 14020 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:32:09,397 DEBUG functional 7040 14020 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:32:09,397 DEBUG functional 7040 14020 
def chunks(task, it, n):
    return 1

2023-06-27 13:32:09,398 DEBUG functional 7040 14020 
def db_update_task():
    return 1

2023-06-27 13:32:22,188 DEBUG functional 11816 1204 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:32:22,189 DEBUG functional 11816 1204 
def chunks(task, it, n):
    return 1

2023-06-27 13:32:22,189 DEBUG functional 11816 1204 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:32:22,190 DEBUG functional 11816 1204 
def backend_cleanup():
    return 1

2023-06-27 13:32:22,190 DEBUG functional 11816 1204 
def debug_task(self):
    return 1

2023-06-27 13:32:22,191 DEBUG functional 11816 1204 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:32:22,191 DEBUG functional 11816 1204 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:32:22,191 DEBUG functional 11816 1204 
def xmap(task, it):
    return 1

2023-06-27 13:32:22,192 DEBUG functional 11816 1204 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:32:22,192 DEBUG functional 11816 1204 
def db_update_task():
    return 1

2023-06-27 13:32:22,192 DEBUG functional 11816 1204 
def xstarmap(task, it):
    return 1

2023-06-27 13:32:22,193 DEBUG functional 11816 1204 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 13:32:22,193 DEBUG functional 11816 1204 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:32:30,117 DEBUG core 9108 20044 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:32:30,117 DEBUG core 9108 20044 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:32:30,903 DEBUG core 9108 20044 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:32:30,903 DEBUG core 9108 20044 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:32:31,999 DEBUG core 9108 20044 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:32:31,999 DEBUG core 9108 20044 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:32:32,643 DEBUG core 9108 20044 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:32:32,644 DEBUG core 9108 20044 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:32:33,143 DEBUG core 9108 20044 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:32:33,143 DEBUG core 9108 20044 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:33:15,275 DEBUG functional 9108 21020 
def xstarmap(task, it):
    return 1

2023-06-27 13:33:15,277 DEBUG functional 9108 21020 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:33:15,277 DEBUG functional 9108 21020 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:33:15,278 DEBUG functional 9108 21020 
def chunks(task, it, n):
    return 1

2023-06-27 13:33:15,278 DEBUG functional 9108 21020 
def debug_task(self):
    return 1

2023-06-27 13:33:15,278 DEBUG functional 9108 21020 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:33:15,279 DEBUG functional 9108 21020 
def db_update_task():
    return 1

2023-06-27 13:33:15,279 DEBUG functional 9108 21020 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:33:15,279 DEBUG functional 9108 21020 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:33:15,280 DEBUG functional 9108 21020 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 13:33:15,280 DEBUG functional 9108 21020 
def xmap(task, it):
    return 1

2023-06-27 13:33:15,280 DEBUG functional 9108 21020 
def backend_cleanup():
    return 1

2023-06-27 13:33:15,281 DEBUG functional 9108 21020 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:33:17,667 DEBUG core 9108 20044 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:33:17,667 DEBUG core 9108 20044 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:33:18,300 DEBUG core 9108 20044 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:33:18,300 DEBUG core 9108 20044 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:33:18,665 DEBUG core 9108 20044 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:33:18,665 DEBUG core 9108 20044 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:33:38,579 INFO autoreload 9108 9396 C:\Users\Evert\Desktop\Django\monreal\accounts\tasks.py changed, reloading.
2023-06-27 13:33:40,424 INFO autoreload 14868 11244 Watching for file changes with StatReloader
2023-06-27 13:33:44,429 DEBUG functional 14868 19816 
def xstarmap(task, it):
    return 1

2023-06-27 13:33:44,431 DEBUG functional 14868 19816 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:33:44,431 DEBUG functional 14868 19816 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:33:44,431 DEBUG functional 14868 19816 
def chunks(task, it, n):
    return 1

2023-06-27 13:33:44,432 DEBUG functional 14868 19816 
def debug_task(self):
    return 1

2023-06-27 13:33:44,432 DEBUG functional 14868 19816 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:33:44,432 DEBUG functional 14868 19816 
def db_update_task():
    return 1

2023-06-27 13:33:44,433 DEBUG functional 14868 19816 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:33:44,433 DEBUG functional 14868 19816 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:33:44,433 DEBUG functional 14868 19816 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 13:33:44,434 DEBUG functional 14868 19816 
def xmap(task, it):
    return 1

2023-06-27 13:33:44,434 DEBUG functional 14868 19816 
def backend_cleanup():
    return 1

2023-06-27 13:33:44,434 DEBUG functional 14868 19816 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:34:21,880 DEBUG core 14868 11940 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:34:21,880 DEBUG core 14868 11940 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:34:22,578 DEBUG core 14868 11940 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:34:22,579 DEBUG core 14868 11940 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:36:58,107 INFO autoreload 14868 11244 C:\Users\Evert\Desktop\Django\monreal\accounts\tasks.py changed, reloading.
2023-06-27 13:36:59,705 INFO autoreload 15028 6636 Watching for file changes with StatReloader
2023-06-27 13:37:05,152 INFO autoreload 15028 6636 C:\Users\Evert\Desktop\Django\monreal\accounts\tasks.py changed, reloading.
2023-06-27 13:37:06,671 INFO autoreload 2952 9068 Watching for file changes with StatReloader
2023-06-27 13:37:35,166 INFO autoreload 8808 18808 Watching for file changes with StatReloader
2023-06-27 13:37:49,437 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:37:49,438 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:37:50,187 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:37:50,187 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:37:56,468 DEBUG functional 6624 6116 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:37:56,469 DEBUG functional 6624 6116 
def chunks(task, it, n):
    return 1

2023-06-27 13:37:56,469 DEBUG functional 6624 6116 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:37:56,470 DEBUG functional 6624 6116 
def backend_cleanup():
    return 1

2023-06-27 13:37:56,470 DEBUG functional 6624 6116 
def debug_task(self):
    return 1

2023-06-27 13:37:56,470 DEBUG functional 6624 6116 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:37:56,471 DEBUG functional 6624 6116 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:37:56,471 DEBUG functional 6624 6116 
def xmap(task, it):
    return 1

2023-06-27 13:37:56,472 DEBUG functional 6624 6116 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:37:56,472 DEBUG functional 6624 6116 
def db_update_task():
    return 1

2023-06-27 13:37:56,472 DEBUG functional 6624 6116 
def xstarmap(task, it):
    return 1

2023-06-27 13:37:56,473 DEBUG functional 6624 6116 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 13:37:56,473 DEBUG functional 6624 6116 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:38:04,168 DEBUG functional 7608 18616 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:38:04,168 DEBUG functional 7608 18616 
def backend_cleanup():
    return 1

2023-06-27 13:38:04,168 DEBUG functional 7608 18616 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 13:38:04,169 DEBUG functional 7608 18616 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:38:04,169 DEBUG functional 7608 18616 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:38:04,169 DEBUG functional 7608 18616 
def xmap(task, it):
    return 1

2023-06-27 13:38:04,170 DEBUG functional 7608 18616 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:38:04,170 DEBUG functional 7608 18616 
def debug_task(self):
    return 1

2023-06-27 13:38:04,170 DEBUG functional 7608 18616 
def xstarmap(task, it):
    return 1

2023-06-27 13:38:04,171 DEBUG functional 7608 18616 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:38:04,171 DEBUG functional 7608 18616 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:38:04,172 DEBUG functional 7608 18616 
def chunks(task, it, n):
    return 1

2023-06-27 13:38:04,172 DEBUG functional 7608 18616 
def db_update_task():
    return 1

2023-06-27 13:38:06,894 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:06,894 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:38:07,457 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:07,457 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:38:07,940 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:07,941 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:38:08,277 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:08,278 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:38:08,514 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:08,514 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:38:08,684 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:08,684 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:38:08,834 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:08,834 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:38:08,993 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:08,993 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:38:09,156 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:09,156 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:38:09,332 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:09,332 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:38:24,680 DEBUG functional 8808 12748 
def xstarmap(task, it):
    return 1

2023-06-27 13:38:24,682 DEBUG functional 8808 12748 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:38:24,682 DEBUG functional 8808 12748 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:38:24,682 DEBUG functional 8808 12748 
def chunks(task, it, n):
    return 1

2023-06-27 13:38:24,683 DEBUG functional 8808 12748 
def debug_task(self):
    return 1

2023-06-27 13:38:24,683 DEBUG functional 8808 12748 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:38:24,684 DEBUG functional 8808 12748 
def db_update_task():
    return 1

2023-06-27 13:38:24,684 DEBUG functional 8808 12748 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:38:24,684 DEBUG functional 8808 12748 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:38:24,684 DEBUG functional 8808 12748 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 13:38:24,685 DEBUG functional 8808 12748 
def xmap(task, it):
    return 1

2023-06-27 13:38:24,685 DEBUG functional 8808 12748 
def backend_cleanup():
    return 1

2023-06-27 13:38:24,685 DEBUG functional 8808 12748 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:38:26,538 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:26,538 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:38:50,997 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:50,997 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:38:51,889 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:51,889 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:38:53,040 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:53,040 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:38:53,428 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:53,429 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:38:53,594 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:53,594 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:38:53,787 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:53,787 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:38:53,943 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:53,943 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:38:54,092 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:38:54,093 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:39:13,856 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:39:13,856 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:39:15,269 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:39:15,269 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:39:23,506 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:39:23,506 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:39:31,816 DEBUG core 8808 10252 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:39:31,816 DEBUG core 8808 10252 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:41:29,498 INFO autoreload 17628 17600 Watching for file changes with StatReloader
2023-06-27 13:45:31,745 INFO autoreload 10424 12808 Watching for file changes with StatReloader
2023-06-27 13:45:46,530 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:45:46,530 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:45:46,860 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:45:46,860 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:45:48,402 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:45:48,402 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:45:56,444 DEBUG functional 16708 968 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:45:56,444 DEBUG functional 16708 968 
def chunks(task, it, n):
    return 1

2023-06-27 13:45:56,444 DEBUG functional 16708 968 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:45:56,445 DEBUG functional 16708 968 
def backend_cleanup():
    return 1

2023-06-27 13:45:56,445 DEBUG functional 16708 968 
def debug_task(self):
    return 1

2023-06-27 13:45:56,445 DEBUG functional 16708 968 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:45:56,446 DEBUG functional 16708 968 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:45:56,446 DEBUG functional 16708 968 
def xmap(task, it):
    return 1

2023-06-27 13:45:56,447 DEBUG functional 16708 968 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:45:56,447 DEBUG functional 16708 968 
def db_update_task():
    return 1

2023-06-27 13:45:56,447 DEBUG functional 16708 968 
def xstarmap(task, it):
    return 1

2023-06-27 13:45:56,448 DEBUG functional 16708 968 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 13:45:56,448 DEBUG functional 16708 968 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:46:06,167 DEBUG functional 4632 15172 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:46:06,168 DEBUG functional 4632 15172 
def backend_cleanup():
    return 1

2023-06-27 13:46:06,168 DEBUG functional 4632 15172 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 13:46:06,169 DEBUG functional 4632 15172 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:46:06,169 DEBUG functional 4632 15172 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:46:06,169 DEBUG functional 4632 15172 
def xmap(task, it):
    return 1

2023-06-27 13:46:06,170 DEBUG functional 4632 15172 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:46:06,170 DEBUG functional 4632 15172 
def debug_task(self):
    return 1

2023-06-27 13:46:06,170 DEBUG functional 4632 15172 
def xstarmap(task, it):
    return 1

2023-06-27 13:46:06,170 DEBUG functional 4632 15172 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:46:06,171 DEBUG functional 4632 15172 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:46:06,171 DEBUG functional 4632 15172 
def chunks(task, it, n):
    return 1

2023-06-27 13:46:06,172 DEBUG functional 4632 15172 
def db_update_task():
    return 1

2023-06-27 13:46:21,099 DEBUG functional 10424 4496 
def xstarmap(task, it):
    return 1

2023-06-27 13:46:21,101 DEBUG functional 10424 4496 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:46:21,102 DEBUG functional 10424 4496 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:46:21,102 DEBUG functional 10424 4496 
def chunks(task, it, n):
    return 1

2023-06-27 13:46:21,102 DEBUG functional 10424 4496 
def debug_task(self):
    return 1

2023-06-27 13:46:21,103 DEBUG functional 10424 4496 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:46:21,103 DEBUG functional 10424 4496 
def db_update_task():
    return 1

2023-06-27 13:46:21,103 DEBUG functional 10424 4496 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:46:21,104 DEBUG functional 10424 4496 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:46:21,104 DEBUG functional 10424 4496 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 13:46:21,104 DEBUG functional 10424 4496 
def xmap(task, it):
    return 1

2023-06-27 13:46:21,105 DEBUG functional 10424 4496 
def backend_cleanup():
    return 1

2023-06-27 13:46:21,105 DEBUG functional 10424 4496 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:46:22,808 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:22,808 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:23,869 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:23,869 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:24,463 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:24,463 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:24,622 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:24,622 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:24,803 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:24,803 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:25,004 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:25,004 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:25,799 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:25,799 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:26,100 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:26,100 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:26,602 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:26,602 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:29,364 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:29,364 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:29,907 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:29,907 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:31,675 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:31,676 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:32,207 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:32,207 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:32,642 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:32,642 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:33,075 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:33,075 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:33,505 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:33,505 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:35,568 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:35,568 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:36,149 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:36,149 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:42,144 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:42,145 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:46:43,130 DEBUG core 10424 9980 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:46:43,131 DEBUG core 10424 9980 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:47:26,336 INFO autoreload 10424 12808 C:\Users\Evert\Desktop\Django\monreal\accounts\tasks.py changed, reloading.
2023-06-27 13:47:27,906 INFO autoreload 15500 20264 Watching for file changes with StatReloader
2023-06-27 13:47:32,307 INFO autoreload 15500 20264 C:\Users\Evert\Desktop\Django\monreal\accounts\tasks.py changed, reloading.
2023-06-27 13:47:33,988 INFO autoreload 11732 12748 Watching for file changes with StatReloader
2023-06-27 13:47:40,135 DEBUG functional 3308 10352 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:47:40,135 DEBUG functional 3308 10352 
def chunks(task, it, n):
    return 1

2023-06-27 13:47:40,136 DEBUG functional 3308 10352 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:47:40,136 DEBUG functional 3308 10352 
def backend_cleanup():
    return 1

2023-06-27 13:47:40,137 DEBUG functional 3308 10352 
def debug_task(self):
    return 1

2023-06-27 13:47:40,137 DEBUG functional 3308 10352 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:47:40,138 DEBUG functional 3308 10352 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:47:40,138 DEBUG functional 3308 10352 
def xmap(task, it):
    return 1

2023-06-27 13:47:40,138 DEBUG functional 3308 10352 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:47:40,139 DEBUG functional 3308 10352 
def db_update_task():
    return 1

2023-06-27 13:47:40,139 DEBUG functional 3308 10352 
def xstarmap(task, it):
    return 1

2023-06-27 13:47:40,139 DEBUG functional 3308 10352 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 13:47:40,140 DEBUG functional 3308 10352 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:47:45,985 DEBUG functional 16332 14772 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:47:45,986 DEBUG functional 16332 14772 
def backend_cleanup():
    return 1

2023-06-27 13:47:45,986 DEBUG functional 16332 14772 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 13:47:45,987 DEBUG functional 16332 14772 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:47:45,987 DEBUG functional 16332 14772 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:47:45,987 DEBUG functional 16332 14772 
def xmap(task, it):
    return 1

2023-06-27 13:47:45,988 DEBUG functional 16332 14772 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:47:45,988 DEBUG functional 16332 14772 
def debug_task(self):
    return 1

2023-06-27 13:47:45,988 DEBUG functional 16332 14772 
def xstarmap(task, it):
    return 1

2023-06-27 13:47:45,989 DEBUG functional 16332 14772 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:47:45,989 DEBUG functional 16332 14772 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:47:45,989 DEBUG functional 16332 14772 
def chunks(task, it, n):
    return 1

2023-06-27 13:47:45,990 DEBUG functional 16332 14772 
def db_update_task():
    return 1

2023-06-27 13:47:49,107 DEBUG core 11732 21368 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:47:49,108 DEBUG core 11732 21368 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:47:49,673 DEBUG core 11732 21368 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:47:49,674 DEBUG core 11732 21368 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:47:50,236 DEBUG core 11732 21368 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:47:50,236 DEBUG core 11732 21368 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:47:50,413 DEBUG core 11732 21368 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:47:50,413 DEBUG core 11732 21368 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:47:50,669 DEBUG core 11732 21368 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:47:50,669 DEBUG core 11732 21368 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:47:50,922 DEBUG core 11732 21368 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:47:50,922 DEBUG core 11732 21368 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:47:51,141 DEBUG core 11732 21368 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:47:51,142 DEBUG core 11732 21368 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:47:53,182 DEBUG core 11732 21368 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:47:53,183 DEBUG core 11732 21368 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:47:58,883 DEBUG core 11732 21368 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:47:58,883 DEBUG core 11732 21368 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:48:01,146 DEBUG core 11732 21368 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:48:01,146 DEBUG core 11732 21368 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:48:06,565 DEBUG core 11732 21368 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:48:06,565 DEBUG core 11732 21368 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:48:07,449 DEBUG core 11732 21368 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:48:07,449 DEBUG core 11732 21368 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:48:10,604 DEBUG functional 11732 5144 
def xstarmap(task, it):
    return 1

2023-06-27 13:48:10,606 DEBUG functional 11732 5144 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:48:10,606 DEBUG functional 11732 5144 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:48:10,606 DEBUG functional 11732 5144 
def chunks(task, it, n):
    return 1

2023-06-27 13:48:10,607 DEBUG functional 11732 5144 
def debug_task(self):
    return 1

2023-06-27 13:48:10,607 DEBUG functional 11732 5144 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:48:10,608 DEBUG functional 11732 5144 
def db_update_task():
    return 1

2023-06-27 13:48:10,608 DEBUG functional 11732 5144 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:48:10,608 DEBUG functional 11732 5144 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:48:10,609 DEBUG functional 11732 5144 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 13:48:10,609 DEBUG functional 11732 5144 
def xmap(task, it):
    return 1

2023-06-27 13:48:10,609 DEBUG functional 11732 5144 
def backend_cleanup():
    return 1

2023-06-27 13:48:10,610 DEBUG functional 11732 5144 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:48:45,365 DEBUG core 11732 21368 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:48:45,366 DEBUG core 11732 21368 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:48:46,438 DEBUG core 11732 21368 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:48:46,438 DEBUG core 11732 21368 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:48:47,345 DEBUG core 11732 21368 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:48:47,345 DEBUG core 11732 21368 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:49:30,907 DEBUG core 11732 21368 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:49:30,907 DEBUG core 11732 21368 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:52:32,483 INFO autoreload 19880 12732 Watching for file changes with StatReloader
2023-06-27 13:52:49,152 DEBUG functional 3404 14836 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:52:49,152 DEBUG functional 3404 14836 
def chunks(task, it, n):
    return 1

2023-06-27 13:52:49,153 DEBUG functional 3404 14836 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:52:49,153 DEBUG functional 3404 14836 
def backend_cleanup():
    return 1

2023-06-27 13:52:49,153 DEBUG functional 3404 14836 
def debug_task(self):
    return 1

2023-06-27 13:52:49,154 DEBUG functional 3404 14836 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:52:49,154 DEBUG functional 3404 14836 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:52:49,155 DEBUG functional 3404 14836 
def xmap(task, it):
    return 1

2023-06-27 13:52:49,155 DEBUG functional 3404 14836 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:52:49,155 DEBUG functional 3404 14836 
def db_update_task():
    return 1

2023-06-27 13:52:49,156 DEBUG functional 3404 14836 
def xstarmap(task, it):
    return 1

2023-06-27 13:52:49,156 DEBUG functional 3404 14836 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 13:52:49,156 DEBUG functional 3404 14836 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:52:58,386 DEBUG functional 5100 10396 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:52:58,386 DEBUG functional 5100 10396 
def backend_cleanup():
    return 1

2023-06-27 13:52:58,387 DEBUG functional 5100 10396 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 13:52:58,387 DEBUG functional 5100 10396 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:52:58,387 DEBUG functional 5100 10396 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:52:58,388 DEBUG functional 5100 10396 
def xmap(task, it):
    return 1

2023-06-27 13:52:58,388 DEBUG functional 5100 10396 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:52:58,388 DEBUG functional 5100 10396 
def debug_task(self):
    return 1

2023-06-27 13:52:58,389 DEBUG functional 5100 10396 
def xstarmap(task, it):
    return 1

2023-06-27 13:52:58,389 DEBUG functional 5100 10396 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:52:58,390 DEBUG functional 5100 10396 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:52:58,390 DEBUG functional 5100 10396 
def chunks(task, it, n):
    return 1

2023-06-27 13:52:58,390 DEBUG functional 5100 10396 
def db_update_task():
    return 1

2023-06-27 13:53:06,819 DEBUG core 19880 12576 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:53:06,819 DEBUG core 19880 12576 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:53:07,301 DEBUG core 19880 1012 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:53:07,301 DEBUG core 19880 1012 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:53:18,491 DEBUG core 19880 1012 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:53:18,491 DEBUG core 19880 1012 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:53:36,148 DEBUG functional 19880 20304 
def xstarmap(task, it):
    return 1

2023-06-27 13:53:36,150 DEBUG functional 19880 20304 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 13:53:36,150 DEBUG functional 19880 20304 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 13:53:36,151 DEBUG functional 19880 20304 
def chunks(task, it, n):
    return 1

2023-06-27 13:53:36,151 DEBUG functional 19880 20304 
def debug_task(self):
    return 1

2023-06-27 13:53:36,151 DEBUG functional 19880 20304 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 13:53:36,152 DEBUG functional 19880 20304 
def db_update_task():
    return 1

2023-06-27 13:53:36,152 DEBUG functional 19880 20304 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 13:53:36,152 DEBUG functional 19880 20304 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 13:53:36,153 DEBUG functional 19880 20304 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 13:53:36,153 DEBUG functional 19880 20304 
def xmap(task, it):
    return 1

2023-06-27 13:53:36,153 DEBUG functional 19880 20304 
def backend_cleanup():
    return 1

2023-06-27 13:53:36,154 DEBUG functional 19880 20304 
def chain(*args, **kwargs):
    return 1

2023-06-27 13:53:39,412 DEBUG core 19880 1012 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:53:39,412 DEBUG core 19880 1012 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:53:47,169 DEBUG core 19880 1012 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:53:47,169 DEBUG core 19880 1012 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 13:54:16,405 DEBUG core 19880 1012 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 13:54:16,405 DEBUG core 19880 1012 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 20:51:55,091 INFO autoreload 12544 7364 Watching for file changes with StatReloader
2023-06-27 20:52:23,138 DEBUG core 12544 18304 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 20:52:23,139 DEBUG core 12544 18304 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 20:52:23,352 WARNING log 12544 2664 Not Found: /favicon.ico
2023-06-27 20:52:32,032 WARNING log 12544 14048 Bad Request: /api/login/
2023-06-27 20:52:36,215 WARNING log 12544 14048 Bad Request: /api/login/
2023-06-27 20:53:32,814 DEBUG functional 3968 8688 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 20:53:32,815 DEBUG functional 3968 8688 
def chunks(task, it, n):
    return 1

2023-06-27 20:53:32,815 DEBUG functional 3968 8688 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 20:53:32,816 DEBUG functional 3968 8688 
def backend_cleanup():
    return 1

2023-06-27 20:53:32,816 DEBUG functional 3968 8688 
def debug_task(self):
    return 1

2023-06-27 20:53:32,817 DEBUG functional 3968 8688 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 20:53:32,817 DEBUG functional 3968 8688 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 20:53:32,817 DEBUG functional 3968 8688 
def xmap(task, it):
    return 1

2023-06-27 20:53:32,818 DEBUG functional 3968 8688 
def chain(*args, **kwargs):
    return 1

2023-06-27 20:53:32,818 DEBUG functional 3968 8688 
def db_update_task():
    return 1

2023-06-27 20:53:32,818 DEBUG functional 3968 8688 
def xstarmap(task, it):
    return 1

2023-06-27 20:53:32,819 DEBUG functional 3968 8688 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 20:53:32,819 DEBUG functional 3968 8688 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 20:53:50,643 DEBUG functional 18628 19684 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 20:53:50,644 DEBUG functional 18628 19684 
def backend_cleanup():
    return 1

2023-06-27 20:53:50,644 DEBUG functional 18628 19684 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 20:53:50,645 DEBUG functional 18628 19684 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 20:53:50,645 DEBUG functional 18628 19684 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 20:53:50,645 DEBUG functional 18628 19684 
def xmap(task, it):
    return 1

2023-06-27 20:53:50,646 DEBUG functional 18628 19684 
def chain(*args, **kwargs):
    return 1

2023-06-27 20:53:50,646 DEBUG functional 18628 19684 
def debug_task(self):
    return 1

2023-06-27 20:53:50,647 DEBUG functional 18628 19684 
def xstarmap(task, it):
    return 1

2023-06-27 20:53:50,647 DEBUG functional 18628 19684 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 20:53:50,648 DEBUG functional 18628 19684 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 20:53:50,648 DEBUG functional 18628 19684 
def chunks(task, it, n):
    return 1

2023-06-27 20:53:50,648 DEBUG functional 18628 19684 
def db_update_task():
    return 1

2023-06-27 20:54:07,951 DEBUG functional 12544 14048 
def xstarmap(task, it):
    return 1

2023-06-27 20:54:07,953 DEBUG functional 12544 14048 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

2023-06-27 20:54:07,953 DEBUG functional 12544 14048 
def accumulate(self, *args, **kwargs):
    return 1

2023-06-27 20:54:07,953 DEBUG functional 12544 14048 
def chunks(task, it, n):
    return 1

2023-06-27 20:54:07,954 DEBUG functional 12544 14048 
def debug_task(self):
    return 1

2023-06-27 20:54:07,954 DEBUG functional 12544 14048 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

2023-06-27 20:54:07,955 DEBUG functional 12544 14048 
def db_update_task():
    return 1

2023-06-27 20:54:07,955 DEBUG functional 12544 14048 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

2023-06-27 20:54:07,955 DEBUG functional 12544 14048 
def place_order_task(*args, **kwds):
    return 1

2023-06-27 20:54:07,956 DEBUG functional 12544 14048 
def close_position_task(*args, **kwds):
    return 1

2023-06-27 20:54:07,956 DEBUG functional 12544 14048 
def xmap(task, it):
    return 1

2023-06-27 20:54:07,956 DEBUG functional 12544 14048 
def backend_cleanup():
    return 1

2023-06-27 20:54:07,957 DEBUG functional 12544 14048 
def chain(*args, **kwargs):
    return 1

2023-06-27 20:54:11,681 DEBUG core 12544 6560 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 20:54:11,681 DEBUG core 12544 6560 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 20:54:11,740 WARNING log 12544 6560 Not Found: /favicon.ico
2023-06-27 20:56:01,066 DEBUG core 12544 7696 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 20:56:01,066 DEBUG core 12544 7696 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 20:56:22,776 DEBUG core 12544 7696 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 20:56:22,776 DEBUG core 12544 7696 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 20:56:53,840 DEBUG core 12544 7696 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 20:56:53,840 DEBUG core 12544 7696 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 20:57:06,408 DEBUG core 12544 7696 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 20:57:06,408 DEBUG core 12544 7696 Successfully loaded extension "markdown.extensions.toc.TocExtension".
2023-06-27 20:57:19,658 DEBUG core 12544 7696 Successfully imported extension module "markdown.extensions.toc".
2023-06-27 20:57:19,658 DEBUG core 12544 7696 Successfully loaded extension "markdown.extensions.toc.TocExtension".
